{"version":3,"sources":["src/app/pages/categories/Allcategories/Allcategories.component.html","src/app/pages/categories/categories.component.html","src/app/Models/Category.ts","src/app/pages/categories/Allcategories/Allcategories.component.scss","src/app/pages/categories/Allcategories/Allcategories.component.ts","src/app/pages/categories/categories.component.scss","src/app/pages/categories/categories.component.ts","src/app/pages/categories/categories.module.ts","src/app/pages/categories/categoryrouting.routing.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"\\n\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-sm-12\\\">\\n<!-- Hover table card start -->\\n<app-card [title]=\\\"'categories'\\\" [classHeader]=\\\"true\\\" [blockClass]=\\\"'table-border-style'\\\">\\n  <span class=\\\"code-header\\\">All Categories Detail</span>\\n\\n  <div class=\\\"row\\\" *ngIf=\\\"!showform\\\">\\n    <div class=\\\"col-sm-10\\\" >\\n     <button class=\\\"btn btn-success pull-right\\\" (click)=\\\"showinput()\\\"> Add Category</button>\\n    </div>\\n    \\n  </div>\\n  <div class=\\\"row\\\" *ngIf=\\\"showform\\\">\\n    <div class=\\\"col-sm-1\\\">\\n\\n    </div>\\n    <div class=\\\"col-sm-11\\\">\\n      <div class=\\\"row\\\">\\n        <form [formGroup]=\\\"CategoryForm\\\">\\n          <div class=\\\"col-sm-12\\\">\\n         <label for=\\\"validationCustom01\\\">Category Name(English)</label> \\n            <input type=\\\"text\\\" placeholder=\\\"category Name(English)\\\"  formControlName=\\\"category_Name\\\"  class=\\\"form-control\\\" >\\n      </div>\\n      <br>\\n      <div class=\\\"col-sm-12\\\">\\n     \\n       <label for=\\\"validationCustom01\\\">Category Name(Urdu)</label> \\n        <input type=\\\"text\\\" placeholder=\\\"category Name(Urdu)\\\" formControlName=\\\"category_Name_Urdu\\\"   class=\\\"form-control\\\">\\n     </div>\\n     <br>\\n     <div class=\\\"col-sm-12\\\">\\n     <button class=\\\"btn btn-info\\\" (click)=\\\"AddCategory()\\\" type=\\\"submit\\\">Save</button>\\n     </div>\\n    </form>\\n        \\n      </div>\\n\\n    </div>\\n   \\n  </div>\\n  <div class=\\\"table-responsive\\\"style=\\\"padding: 2%;\\\">\\n    <table class=\\\"table table-hover\\\">\\n      <thead>\\n      <tr>\\n        <th (click)=\\\"Sort('id')\\\">#<i class=\\\"fa fa-sort\\\"></i></th>\\n        <th (click)=\\\"Sort('category_Name')\\\">Category Name<i class=\\\"fa fa-sort\\\"></i></th>\\n        <th (click)=\\\"Sort('category_Name_Urdu')\\\">Catehory Name(Urdu)<i class=\\\"fa fa-sort\\\"></i></th>\\n        <th (click)=\\\"Sort('category_Image')\\\">Image<i class=\\\"fa fa-sort\\\"></i></th>\\n        <th (click)=\\\"Sort('description')\\\">Actions<i class=\\\"fa fa-sort\\\"></i></th>\\n        <!-- <th>Image</th> -->\\n      </tr>\\n      </thead>\\n      <tbody>\\n      <tr *ngFor=\\\"let obj of CategoriesList |orderBy:key :reverse | paginate:{itemsPerPage:10,currentPage:p}; let i=index;\\\" >\\n        <td style=\\\"width: 2px;\\\">{{i+1}}</td>\\n        <td>{{obj.category_Name}}</td>\\n        <td>{{obj.category_Name_Urdu}}</td>\\n        <td *ngIf=\\\"obj.category_Image!=noimage; else nImage\\\"><img [src]=\\\"ImagebaseUrl+obj.category_Image\\\" style=\\\"height: 40px;\\\"/></td>\\n        <ng-template #nImage>\\n          <td >No Image</td>\\n        </ng-template>\\n       <td>  <div class=\\\"row\\\">\\n\\n        <div style=\\\"padding: 4px;\\\">\\n          <i class=\\\"fa fa-upload\\\" aria-hidden=\\\"true\\\" style=\\\"font-size:18px;color:rgb(255, 0, 0)\\\" title=\\\"Upload Image\\\"  (click)=\\\"openLg(uploadfilecontent,obj.category_Id)\\\"></i> \\n        </div>\\n        <div style=\\\"padding: 4px;\\\">\\n          <i class=\\\"fa fa-edit\\\" style=\\\"font-size:18px;color:rgb(0, 195, 255)\\\"(click)=\\\"UpdateView(Update,obj.category_Id)\\\"></i>\\n        </div>\\n    </div></td>\\n      </tr>\\n     \\n      </tbody>\\n    \\n    </table>\\n    <div class=\\\"row\\\">\\n      <div style=\\\"right: 10%;\\\">\\n        <pagination-controls (pageChange)=\\\"p=$event\\\"></pagination-controls>\\n    </div>\\n  </div>\\n  </div>\\n</app-card>\\n<!-- Hover table card end -->\\n      </div>\\n    </div>\\n  \\n    <ng-template #uploadfilecontent let-modal>\\n      \\n      <div class=\\\"modal-header\\\">\\n        <h4 class=\\\"modal-title\\\">Upload file</h4>\\n      \\n      </div>\\n      <div class=\\\"modal-body\\\">\\n           \\n        <div class=\\\"container\\\">\\n          <form  [formGroup]=\\\"form\\\" (ngSubmit)=\\\"SubmitImage()\\\">\\n      \\n            <!-- Progress Bar -->\\n            <div class=\\\"progress form-group\\\" *ngIf=\\\"progress > 0\\\">\\n                <div class=\\\"progress-bar progress-bar-striped bg-success\\\" role=\\\"progressbar\\\" [style.width.%]=\\\"progress\\\">\\n                </div>\\n            </div>\\n    \\n            <div class=\\\"form-group\\\">\\n                <input type=\\\"file\\\" (change)=\\\"uploadFile($event)\\\" required>\\n            </div>\\n    \\n          \\n    \\n            <div class=\\\"form-group\\\">\\n                <button class=\\\"btn btn-danger btn-block btn-lg\\\" [disabled]=\\\"form.get('avatar')==null\\\">Upload</button>\\n            </div>\\n        </form>\\n      </div>\\n      </div>\\n      <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-light\\\" (click)=\\\"modal.close('Close click')\\\">Close</button>\\n      </div>\\n    </ng-template>\\n\\n    <ngx-spinner bdColor=\\\"rgba(51, 51, 51, 0.8)\\\" size=\\\"default\\\" type=\\\"ball-spin-clockwise\\\">  \\n      <p style=\\\"color: white\\\">Please Wait. </p>  \\n      </ngx-spinner> \\n  \\n      <ng-template #Update let-modal>\\n        <div class=\\\"modal-header\\\">\\n          <h4 class=\\\"modal-title\\\">Update  Category</h4>\\n        \\n        </div>\\n        <div class=\\\"modal-body\\\">\\n          <form class=\\\"needs-validation\\\" novalidate [formGroup]=\\\"CategoryForm\\\">\\n            <div class=\\\"form-row\\\">\\n              <div class=\\\"col-md-5 mb-3\\\">\\n                <label for=\\\"validationCustom01\\\">Category Name(English)</label>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"validationCustom01\\\" placeholder=\\\"Category Name(English)\\\" formControlName=\\\"category_Name\\\"  required>\\n                \\n              </div>\\n              <div class=\\\"col-md-5 mb-3\\\">\\n                <label for=\\\"validationCustom01\\\">Category Name(Urdu)</label>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"validationCustom01\\\" placeholder=\\\"Category Name(Urdu)\\\" formControlName=\\\"category_Name_Urdu\\\"  required>\\n                \\n              </div>\\n             \\n            </div>\\n\\n            \\n           \\n             \\n          \\n      \\n            <button style=\\\"float: right;\\\" class=\\\"btn btn-primary\\\"(click)=\\\"UpdateCategory()\\\" type=\\\"submit\\\">Submit</button>\\n          </form>\\n      \\n      \\n        \\n        </div>\\n        <div class=\\\"modal-footer\\\">\\n          <button type=\\\"button\\\" class=\\\"btn btn-light\\\" (click)=\\\"modal.close('Close click')\\\">Close</button>\\n        </div>\\n      </ng-template>\"","export default \"<p>\\n  categories works!\\n</p>\\n\"","export class Category {\n    category_Id:number=0;\ncategory_Image: string=\"\";\ncategory_Name: string\ncategory_Name_Urdu:string\nstatus: boolean=true;\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2NhdGVnb3JpZXMvQWxsY2F0ZWdvcmllcy9BbGxjYXRlZ29yaWVzLmNvbXBvbmVudC5zY3NzIn0= */\"","import { HttpEvent, HttpEventType } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { environment } from './../../../../../src/environments/environment.prod';\nimport { FileuploadService } from '../../../../../src/app/_service/fileupload.service';\nimport { ProductService } from '../../../../../src/app/_service/product.service';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { Category } from '../../../../../src/app/Models/Category';\nimport { AlertifyService } from '../../../../../src/app/_service/alertify.service';\n\n@Component({\n  selector: 'app-Allcategories',\n  templateUrl: './Allcategories.component.html',\n  styleUrls: ['./Allcategories.component.scss']\n})\nexport class AllcategoriesComponent implements OnInit {\n    form: FormGroup;\n    ImagebaseUrl = environment.Imagebaseurl + 'CategoryImages/';\n  CategoriesList:any;\n  key:string='rowid';\n  reverse:boolean=false;\n  p:number=1;\n  categotyid:number;\n  noimage=\"\";\n  showform:boolean=false;  \n  Singlecategory:Category;\n  progress: number = 0;\n  constructor(private categorymodel:Category,private alertify: AlertifyService,private SpinnerService: NgxSpinnerService,private productservice:ProductService,private modalService: NgbModal,private uploadfileservice:FileuploadService,private fb:FormBuilder) { }\n\n  ngOnInit() {\n    this.SpinnerService.show();\n    this.Getcategorey();\n    this.form = this.fb.group({\n    \n      avatar: [null]\n    })\n    this.SpinnerService.hide();\n  }\n  showinput()\n  {\n   this.showform=true;\n  }\n  CategoryForm:FormGroup=new FormGroup({\n    category_Name: new FormControl(this.categorymodel.category_Name),\n    category_Id: new FormControl(0),\n    category_Name_Urdu: new FormControl(this.categorymodel.category_Name_Urdu),\n    status: new FormControl(true),\n    category_Image: new FormControl(\"\"),\n\n   });\n   AddCategory(){\n    debugger;\n   this.productservice.Addcateogry(this.CategoryForm.value).subscribe(next => {\n  \n    this.modalService.dismissAll();\n     this.CategoryForm.reset();\n     this.Getcategorey();\n     this.alertify.success('Category Updated seccussfully');\n    \n   }, error => {\n    this.alertify.error('already exists');\n     console.log(error);\n   });\n    console.log(this.CategoryForm.value)\n  }\n  UpdateCategory(){\n    debugger;\n   this.productservice.UpdateCategory(this.CategoryForm.value).subscribe(next => {\n  \n    this.modalService.dismissAll();\n     this.CategoryForm.reset();\n     this.Getcategorey();\n     this.alertify.success('Category Updated seccussfully');\n    \n   }, error => {\n    this.modalService.dismissAll();\n    this.CategoryForm.reset();\n    this.alertify.success('Category Updated seccussfully');\n     console.log(error);\n   });\n    console.log(this.CategoryForm.value)\n  }\n\n  Getcategorey(){\n    this.SpinnerService.show();\n    this.productservice.GetCategorey().subscribe((next:any) => {\n      this.CategoriesList=[];\n      this.CategoriesList=next.resp;\n      \n      console.log(this.CategoriesList)\n    }, error => {\n      console.log(error);\n    });\n    this.SpinnerService.hide();\n  }\n  Sort(key){\n    this.key=key;\n    this.reverse=!this.reverse;\n  }\n  openLg(content,id:number) {\n    \n    this.categotyid=id;\n \n    this.modalService.open(content, { size: 'lg' });\n  }\n\n UpdateView(content,id:number) {\n  var data=this.CategoriesList.find(res=>res.category_Id==id);\n  debugger;\n  this.Singlecategory=data;\n  this.CategoryForm.setValue({\n    category_Id:this.Singlecategory.category_Id,\n    category_Name_Urdu:this.Singlecategory.category_Name_Urdu,\n    category_Name:this.Singlecategory.category_Name,\n    category_Image:this.Singlecategory.category_Image,\n    status:this.Singlecategory.status\n  });\n\n \n    this.modalService.open(content, { size: 'lg' });\n  }\n  uploadFile(event) {\n\n    const file = (event.target as HTMLInputElement).files[0];\n    this.form.patchValue({\n      avatar: file\n    });\n    this.form.get('avatar').updateValueAndValidity();\n   \n  }\n  \n  SubmitImage() {\n    debugger;\n    if(this.form.value.avatar!=null){\n      var apipath=\"UploadImageCategory\";\n      \n      this.uploadfileservice.uploadbrandimage(\n     \n        this.form.value.avatar,apipath,\n        this.categotyid\n      ).subscribe((event: HttpEvent<any>) => {\n        switch (event.type) {\n          case HttpEventType.Sent:\n            console.log('Request has been made!');\n            break;\n          case HttpEventType.ResponseHeader:\n            console.log('Response header has been received!');\n\n            this.form.reset();\n    this.modalService.dismissAll();\n            break;\n          case HttpEventType.UploadProgress:\n            this.progress = Math.round(event.loaded / event.total * 100);\n            console.log(`Uploaded! ${this.progress}%`);\n            break;\n          case HttpEventType.Response:\n\n            console.log('User successfully created!', event.body);\n            setTimeout(() => {\n              this.progress = 0;\n            }, 1500);\n    \n        }\n        this.Getcategorey();\n      })\n    }\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2NhdGVnb3JpZXMvY2F0ZWdvcmllcy5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-categories',\n  templateUrl: './categories.component.html',\n  styleUrls: ['./categories.component.scss']\n})\nexport class CategoriesComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CategoriesComponent } from './categories.component';\nimport { AllcategoriesComponent } from './Allcategories/Allcategories.component';\nimport { categoriesRoutingmodule } from './categoryrouting.routing';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { NgxDropzoneModule } from 'ngx-dropzone';\nimport { SharedModule } from '../../../../src/app/shared/shared.module';\nimport { Ng2OrderModule } from 'ng2-order-pipe';\nimport { Ng2SearchPipeModule } from 'ng2-search-filter';\nimport { NgxPaginationModule } from 'ngx-pagination';\nimport { NgxSpinnerModule, NgxSpinnerService } from 'ngx-spinner';\nimport { Category } from '../../../../src/app/Models/Category';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    SharedModule,\n    FormsModule,\n    categoriesRoutingmodule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    NgxDropzoneModule,\n    Ng2OrderModule,\n    NgxSpinnerModule,\n    Ng2SearchPipeModule,\n    NgxPaginationModule\n  ],\n  declarations: [CategoriesComponent,AllcategoriesComponent],\n  providers: [\n    NgxSpinnerService,Category\n    ]\n})\nexport class CategoriesModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AllcategoriesComponent } from './Allcategories/Allcategories.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AllcategoriesComponent,\n    data: {\n      breadcrumb: ' Categories',\n      icon: 'icofont-table bg-c-blue',\n      breadcrumb_caption: 'All categories',\n      status: true\n    }\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class categoriesRoutingmodule { }\n"],"sourceRoot":"webpack:///","file":"pages-categories-categories-module-es5.js"}