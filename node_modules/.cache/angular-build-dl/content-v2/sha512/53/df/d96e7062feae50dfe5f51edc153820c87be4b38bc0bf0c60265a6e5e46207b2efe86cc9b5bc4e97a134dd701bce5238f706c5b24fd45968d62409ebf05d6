{"version":3,"sources":["src/app/pages/Products/Add-Product/Add-Product.component.html","src/app/pages/Products/AllInventory/AllInventory.component.html","src/app/pages/Products/AllProduct/AllProduct.component.html","src/app/pages/Products/Products.component.html","src/app/Models/Product.Model.ts","src/app/Models/Supplier.model.ts","src/app/Models/inventoryDto.ts","src/app/_service/supplier.service.ts","src/app/pages/Products/Add-Product/Add-Product.component.scss","src/app/pages/Products/Add-Product/Add-Product.component.ts","src/app/pages/Products/AllInventory/AllInventory.component.scss","src/app/pages/Products/AllInventory/AllInventory.component.ts","src/app/pages/Products/AllProduct/AllProduct.component.scss","src/app/pages/Products/AllProduct/AllProduct.component.ts","src/app/pages/Products/Products-bootstrap-routing.module.ts","src/app/pages/Products/Products.component.scss","src/app/pages/Products/Products.component.ts","src/app/pages/Products/Products.module.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<div class=\\\"row\\\">\\n  <div class=\\\"col-sm-11\\\" >\\n    <button class=\\\"btn btn-outline-primary mb-2 mr-2\\\" style=\\\"float: right;\\\" (click)=\\\"openLg(uploadfilecontent)\\\">Upload Excel </button>\\n  </div>\\n</div>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-sm-12\\\">\\n    <!-- Basic table card start -->\\n    <app-card [title]=\\\"'Suppliers Information'\\\" [classHeader]=\\\"true\\\" [blockClass]=\\\"'table-border-style'\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-sm-11\\\" >\\n          <button class=\\\"btn btn-outline-primary mb-2 mr-2\\\" style=\\\"float: right;\\\" (click)=\\\"openVerticallyCentered(content)\\\">Add Supplier</button>\\n        </div>\\n      </div>\\n      <br>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-md-1\\\">\\n\\n  </div>\\n      <div class=\\\"col-sm-5\\\">\\n        <div>\\n           <label>Select Supplier</label>\\n          <select class=\\\"custom-select custom-select-lg sm-1\\\"#mySelect\\n          (change)='onOptionsSelected(mySelect.value)'>\\n            <option selected>Open this select menu</option>\\n            <option *ngFor=\\\"let option of supplierlist\\\" [value]=\\\"option.supplier_Id\\\">\\n              {{option.supplier_Name}}\\n            </option>\\n\\n          </select>\\n\\n        </div>\\n      </div>\\n      <div class=\\\"col-sm-1\\\">\\n\\n      </div>\\n      <div class=\\\"col-sm-4\\\" style=\\\"float: right;\\\"*ngIf=\\\"selectedsupplier!=null\\\">\\n\\n\\n        <div class=\\\"col-sm-12 \\\"  >\\n          <!-- Basic table card start -->\\n          <app-card [title]=\\\"'Suppliers Information'\\\" [classHeader]=\\\"true\\\" [blockClass]=\\\"'table-border-style'\\\">\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-md-1\\\">\\n\\n              </div>\\n              <div class=\\\"col-md-5\\\" >\\n                    <h5><b> Supplier Name</b></h5>\\n              </div>\\n              <div class=\\\"col-md-5\\\">\\n                    <h5>{{selectedsupplier?.supplier_Name}}</h5>\\n              </div>\\n\\n            </div>\\n            <br>\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-md-1\\\">\\n\\n              </div>\\n              <div class=\\\"col-md-5\\\">\\n                    <h5><b>Contact No</b></h5>\\n              </div>\\n              <div class=\\\"col-md-5\\\">\\n                    <h5>{{selectedsupplier?.supplier_ContactNo}}</h5>\\n              </div>\\n\\n            </div>\\n            <br>\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-md-1\\\">\\n\\n              </div>\\n              <div class=\\\"col-md-5\\\">\\n                    <h5><b>Address</b></h5>\\n              </div>\\n              <div class=\\\"col-md-5\\\">\\n                    <h5>{{selectedsupplier?.supplier_Address}}</h5>\\n              </div>\\n\\n            </div>\\n            <br>\\n            <br>\\n          </app-card>\\n        </div>\\n\\n      </div>\\n      <div class=\\\"col-sm-1\\\">\\n\\n      </div>\\n      </div>\\n      <br>\\n      <br>\\n    </app-card>\\n    <!-- Basic table card end -->\\n\\n    <app-card [title]=\\\"'Product Category'\\\" [classHeader]=\\\"true\\\" [blockClass]=\\\"'table-border-style'\\\" *ngIf=\\\"showcategoreysection\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-sm-11\\\" >\\n          <button class=\\\"btn btn-outline-primary mb-2 mr-2\\\" style=\\\"float: right;\\\" (click)=\\\"openVerticallyCentered(categoreycontent)\\\">Add Categorey</button>\\n        </div>\\n      </div>\\n      <br>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-md-1\\\">\\n\\n  </div>\\n      <div class=\\\"col-sm-5\\\">\\n        <div>\\n           <label>Select categorey</label>\\n          <select class=\\\"custom-select custom-select-lg sm-1\\\"#categoreySelect\\n          (change)='onOptionsCategoreySelected(categoreySelect.value)'>\\n            <option selected>Open this select menu</option>\\n            <option *ngFor=\\\"let option of categoreylist\\\" [value]=\\\"option.category_Id\\\">\\n              {{option.category_Name}}\\n            </option>\\n\\n          </select>\\n\\n        </div>\\n      </div>\\n   \\n      \\n  </div>\\n  <br>\\n  <div class=\\\"row\\\" *ngIf=\\\"singlecategorey!=null\\\">\\n    <div class=\\\"col-sm-1\\\">\\n\\n    </div>\\n    <div class=\\\"col-sm-11\\\">\\n      <app-card [title]=\\\"'Products Information'\\\" [classHeader]=\\\"true\\\" [blockClass]=\\\"'table-border-style'\\\">\\n        <form class=\\\"needs-validation\\\" novalidate [formGroup]=\\\"productinfos\\\" >\\n\\n          <div class=\\\"form-row\\\" formArrayName=\\\"products\\\">\\n               \\n         \\n              <div class=\\\"col-sm-11\\\" >\\n                <div class=\\\"col text-center \\\" > \\n                  <button type=\\\"button\\\" style=\\\"    margin-bottom: 2%;\\\"  (click)=\\\"addNewRow()\\\" class=\\\"btn btn-primary pull-right\\\"><i class=\\\"fa fa-plus-circle\\\" aria-hidden=\\\"true\\\"></i></button>\\n                  </div>\\n                <br>\\n          \\n\\n              </div>\\n         \\n                <div class=\\\"col-sm-11\\\" >\\n               \\n                  <div class=\\\"row\\\">\\n                   \\n                    <div class=\\\"col-sm-2 mb-3\\\" style=\\\"margin-left:2%;\\\">\\n                      <label for=\\\"validationCustom03\\\" >Barcode</label>\\n                    </div>\\n                     <div class=\\\"col-sm-2 mb-3\\\" style=\\\"margin-left:2%;\\\">\\n                      <label for=\\\"validationCustom03\\\">Name</label>\\n                    </div>\\n                    <div class=\\\"col-sm-2 mb-3\\\" style=\\\"margin-left:2%;\\\">\\n                      <label for=\\\"validationCustom03\\\">Brand</label>\\n                    </div>\\n                    <div class=\\\"col-sm-1 mb-3\\\" style=\\\"margin-left:1%;\\\">\\n                      <label for=\\\"validationCustom03\\\" >Qty</label>\\n                    </div>\\n                    <div class=\\\"col-sm-1 mb-3\\\"style=\\\"margin-left:1%;\\\" >\\n                      <label for=\\\"validationCustom03\\\">Unit Price</label>\\n                    </div>\\n                    <div class=\\\"col-sm-1 mb-3\\\" style=\\\"margin-left:1%;\\\">\\n                      <label for=\\\"validationCustom03\\\">Sale Price</label>\\n                    </div>\\n                    <div class=\\\"col-sm-1 mb-3\\\">\\n                      <label for=\\\"validationCustom03\\\">Detail</label>\\n                    </div>\\n                  \\n                  </div>\\n                \\n                  <div style=\\\"margin-top: -25px;\\\">\\n                    <hr>\\n                   </div>\\n  \\n                </div>\\n        \\n\\n            \\n            \\n          \\n     \\n            <div class=\\\"row\\\" *ngFor=\\\"let itemrow of productinfos.controls.products['controls']; let i=index\\\"  [formGroupName]=\\\"i\\\">\\n         \\n              <input type=\\\"hidden\\\" id=\\\"{{i}}\\\"class=\\\"form-control\\\" placeholder=\\\"Barcode\\\" formControlName=\\\"ProductId\\\"  required>\\n            \\n            \\n              <div class=\\\"col-sm-2 mb-3\\\" style=\\\"margin-left:2%;\\\">\\n            \\n                <input type=\\\"text\\\" id=\\\"Barcode{{i}}\\\" value=\\\"\\\" #barcodevalue class=\\\"form-control\\\" placeholder=\\\"Barcode\\\" formControlName=\\\"Barcode\\\" (change)=\\\"onBarcodechange(barcodevalue.value,i)\\\" required>\\n                \\n              </div>\\n              <div class=\\\"col-sm-2 mb-3\\\">\\n             \\n                <input type=\\\"text\\\" id=\\\"ProductName{{i}}\\\" #ProductName{{i}} class=\\\"form-control\\\"  placeholder=\\\"Product Name\\\"   formControlName=\\\"ProductName\\\"   required>\\n                \\n              </div>\\n              <div class=\\\"col-sm-2 mb-3\\\">\\n               \\n                <input type=\\\"text\\\" id=\\\"Brand_Name{{i}}\\\"class=\\\"form-control\\\"  placeholder=\\\"Brand Name\\\"   formControlName=\\\"Brand_Name\\\"   required>\\n                \\n              </div>\\n              <div class=\\\"col-sm-1 mb-3\\\">\\n            \\n                <div class=\\\"input-group\\\">\\n      \\n                  <input type=\\\"number\\\" id=\\\"Product_Qty{{i}}\\\"class=\\\"form-control\\\"  width=\\\"120px\\\" placeholder=\\\"Qty\\\"formControlName=\\\"Product_Qty\\\"  aria-describedby=\\\"inputGroupPrepend\\\" required>\\n                  \\n                </div>\\n              </div>\\n              <div class=\\\"col-sm-1 mb-3\\\">\\n             \\n                <div class=\\\"input-group\\\">\\n      \\n                  <input type=\\\"number\\\"id=\\\"Unit_Price{{i}}\\\" class=\\\"form-control\\\" placeholder=\\\"Unit Price\\\"formControlName=\\\"Unit_Price\\\"  aria-describedby=\\\"inputGroupPrepend\\\" required>\\n                  <!-- <input type=\\\"hidden\\\"id=\\\"Product_TotalPrice{{i}}\\\" class=\\\"form-control\\\" placeholder=\\\"Total Price\\\" formControlName=\\\"Product_TotalPrice\\\"  required>\\n               -->\\n                </div>\\n              </div>\\n              <!-- <div class=\\\"col-md-1 mb-3\\\">\\n                <label for=\\\"validationCustom02\\\">Total Price</label>\\n                <input type=\\\"hidden\\\"id=\\\"Product_TotalPrice{{i}}\\\" class=\\\"form-control\\\" placeholder=\\\"Total Price\\\" formControlName=\\\"Product_TotalPrice\\\"  required>\\n              \\n              </div> -->\\n              <div class=\\\"col-sm-1 mb-3\\\">\\n            \\n                <input type=\\\"number\\\"id=\\\"sellingprice{{i}}\\\" class=\\\"form-control\\\"    placeholder=\\\"Sale Price\\\" formControlName=\\\"ProductInventory_SellingPrice\\\"  required>\\n              \\n              </div>\\n              <div class=\\\"col-sm-1 mb-3\\\">\\n              \\n                <input type=\\\"text\\\"id=\\\"Description{{i}}\\\" class=\\\"form-control\\\"  formControlName=\\\"Description\\\"  placeholder=\\\"Detail\\\" required>\\n               \\n              </div>\\n              <div class=\\\"col-sm-1 mb-3\\\">\\n                <i class=\\\"fa fa-trash\\\" aria-hidden=\\\"true\\\" *ngIf=\\\"hidden\\\"  (click)=\\\"removeQuantity(i)\\\" style=\\\"color: red;\\\"></i> \\n              </div>\\n             \\n            </div>\\n          \\n          </div>\\n          <div class=\\\"row\\\">\\n             <div class=\\\"col-sm-11\\\">\\n              <button style=\\\"float: right;\\\" class=\\\"btn btn-primary\\\"(click)=\\\"saveproduct()\\\" type=\\\"submit\\\">Submit</button>\\n             </div>\\n          </div>\\n         \\n    <br>\\n\\n        </form>\\n    \\n      </app-card>\\n    </div>\\n    <div class=\\\"col-sm-1\\\">\\n\\n    </div>\\n  </div>\\n      <br>\\n      <br>\\n    </app-card>\\n    <!-- Basic table card end -->\\n  </div>\\n</div>\\n<ng-template #content let-modal>\\n  <div class=\\\"modal-header\\\">\\n    <h4 class=\\\"modal-title\\\">Supplier Registration Form</h4>\\n \\n  </div>\\n  <div class=\\\"modal-body\\\">\\n    <form class=\\\"needs-validation\\\" novalidate [formGroup]=\\\"supplier\\\">\\n      <div class=\\\"form-row\\\">\\n        <div class=\\\"col-md-7 mb-3\\\">\\n          <label for=\\\"validationCustom01\\\">Name</label>\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"validationCustom01\\\" placeholder=\\\"Full name\\\" formControlName=\\\"supplier_Name\\\"  required>\\n          \\n        </div>\\n\\n        <div class=\\\"col-md-5 mb-3\\\">\\n          <label for=\\\"validationCustom02\\\">Company name</label>\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"validationCustom02\\\" placeholder=\\\"Company name\\\" formControlName=\\\"supplier_CompanyName\\\"  required>\\n         \\n        </div>\\n       \\n      </div>\\n      <div class=\\\"form-row\\\">\\n        <div class=\\\"col-md-5 mb-3\\\">\\n          <label for=\\\"validationCustomUsername\\\">Contact</label>\\n          <div class=\\\"input-group\\\">\\n\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"validationCustomUsername\\\" placeholder=\\\"03xx-xxxxxxx\\\"formControlName=\\\"supplier_ContactNo\\\"  aria-describedby=\\\"inputGroupPrepend\\\" required>\\n            \\n          </div>\\n        </div>\\n        <div class=\\\"col-md-7 mb-3\\\">\\n          <label  for=\\\"validationCustom05\\\">Email</label>\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"validationCustom05\\\" formControlName=\\\"supplier_Email\\\"  placeholder=\\\"Email\\\" required>\\n          \\n        </div>\\n      </div>\\n      <div class=\\\"form-row\\\">\\n       \\n        <div class=\\\"col-md-8 mb-3\\\">\\n          <label for=\\\"validationCustom04\\\">Address</label>\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"validationCustom04\\\"formControlName=\\\"supplier_Address\\\"  placeholder=\\\"Address\\\" required>\\n         \\n        </div>\\n        <div class=\\\"col-md-4 mb-3\\\">\\n          <label for=\\\"validationCustom03\\\">City</label>\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"validationCustom03\\\" placeholder=\\\"City\\\" formControlName=\\\"supplier_CityName\\\"  required>\\n         \\n        </div>\\n      </div>\\n     \\n       \\n    \\n\\n      <button style=\\\"float: right;\\\" class=\\\"btn btn-primary\\\"(click)=\\\"savesupplier()\\\" type=\\\"submit\\\">Submit</button>\\n    </form>\\n\\n    <script>\\n    // Example starter JavaScript for disabling form submissions if there are invalid fields\\n    (function() {\\n      'use strict';\\n      window.addEventListener('load', function() {\\n        // Fetch all the forms we want to apply custom Bootstrap validation styles to\\n        var forms = document.getElementsByClassName('needs-validation');\\n        // Loop over them and prevent submission\\n        var validation = Array.prototype.filter.call(forms, function(form) {\\n          form.addEventListener('submit', function(event) {\\n            if (form.checkValidity() === false) {\\n              event.preventDefault();\\n              event.stopPropagation();\\n            }\\n            form.classList.add('was-validated');\\n          }, false);\\n        });\\n      }, false);\\n    })();\\n    </script>\\n  </div>\\n  <div class=\\\"modal-footer\\\">\\n    <button type=\\\"button\\\" class=\\\"btn btn-light\\\" (click)=\\\"modal.close('Close click')\\\">Close</button>\\n  </div>\\n</ng-template>\\n<ng-template #categoreycontent let-modal>\\n  <div class=\\\"modal-header\\\">\\n    <h4 class=\\\"modal-title\\\">Category Registration Form</h4>\\n  \\n  </div>\\n  <div class=\\\"modal-body\\\">\\n    <form class=\\\"needs-validation\\\" novalidate [formGroup]=\\\"categorey\\\">\\n      <div class=\\\"form-row\\\">\\n        <div class=\\\"col-md-8 mb-3\\\">\\n          <label for=\\\"validationCustom01\\\">New Categorey Name</label>\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"validationCustom01\\\" placeholder=\\\"Please Enter Category Name \\\"formControlName=\\\"category_Name\\\"  required>\\n         \\n        </div>\\n     \\n      </div>\\n  \\n\\n      <button style=\\\"float: right;\\\" class=\\\"btn btn-primary\\\"(click)=\\\"savecategorey()\\\" type=\\\"submit\\\">Submit</button>\\n    </form>\\n\\n    <script>\\n    // Example starter JavaScript for disabling form submissions if there are invalid fields\\n    (function() {\\n      'use strict';\\n      window.addEventListener('load', function() {\\n        // Fetch all the forms we want to apply custom Bootstrap validation styles to\\n        var forms = document.getElementsByClassName('needs-validation');\\n        // Loop over them and prevent submission\\n        var validation = Array.prototype.filter.call(forms, function(form) {\\n          form.addEventListener('submit', function(event) {\\n            if (form.checkValidity() === false) {\\n              event.preventDefault();\\n              event.stopPropagation();\\n            }\\n            form.classList.add('was-validated');\\n          }, false);\\n        });\\n      }, false);\\n    })();\\n    </script>\\n  </div>\\n  <div class=\\\"modal-footer\\\">\\n    <button type=\\\"button\\\" class=\\\"btn btn-light\\\" (click)=\\\"modal.close('Close click')\\\">Close</button>\\n  </div>\\n</ng-template>\\n<ng-template #uploadfilecontent let-modal>\\n  <div class=\\\"modal-header\\\">\\n    <h4 class=\\\"modal-title\\\">Upload file</h4>\\n  \\n  </div>\\n  <div class=\\\"modal-body\\\">\\n\\n    <div class=\\\"container\\\">\\n      <form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"submitUser()\\\">\\n  \\n          <!-- Progress Bar -->\\n          <div class=\\\"progress form-group\\\" *ngIf=\\\"progress > 0\\\">\\n              <div class=\\\"progress-bar progress-bar-striped bg-success\\\" role=\\\"progressbar\\\" [style.width.%]=\\\"progress\\\">\\n              </div>\\n          </div>\\n  \\n          <div class=\\\"form-group\\\">\\n              <input type=\\\"file\\\" (change)=\\\"uploadFile($event)\\\">\\n          </div>\\n  \\n        \\n  \\n          <div class=\\\"form-group\\\">\\n              <button class=\\\"btn btn-danger btn-block btn-lg\\\">Upload</button>\\n          </div>\\n      </form>\\n  </div>\\n  </div>\\n  <div class=\\\"modal-footer\\\">\\n    <button type=\\\"button\\\" class=\\\"btn btn-light\\\" (click)=\\\"modal.close('Close click')\\\">Close</button>\\n  </div>\\n</ng-template>\"","export default \"\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-sm-12\\\">\\n<!-- Hover table card start -->\\n<app-card [title]=\\\"'All Invertory'\\\" [classHeader]=\\\"true\\\" [blockClass]=\\\"'table-border-style'\\\">\\n  <span class=\\\"code-header\\\"></span>\\n\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-sm-12\\\" >\\n      <div class=\\\"col-sm-2\\\" style=\\\"float: right;padding-bottom: 8px;\\\">\\n        <select class=\\\"custom-select\\\"#mySelect\\n        (change)='onOptionsSelected(mySelect.value)' >\\n          <option selected value=\\\"0\\\">All</option>\\n         <option value=\\\"1\\\">Activated</option>\\n         <option value=\\\"2\\\">InActivated</option>\\n         \\n    \\n        </select>\\n        </div>\\n      <div class=\\\"col-sm-2\\\" style=\\\"float: right;padding-bottom: 8px;\\\">\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"Barcode\\\" (ngModelChange)=\\\"SearchProduct()\\\"placeholder=\\\"Enter Barcode to search\\\" >\\n           \\n         \\n     </div>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-sm-1\\\" >\\n   \\n    </div>\\n    <div class=\\\"col-sm-8\\\" *ngIf=\\\"showform\\\" >\\n      <form [formGroup]=\\\"inventoryform\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-sm-4\\\">\\n            <label>Barcode</label>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Scan Or search Barcode\\\"  formControlName=\\\"Barcode\\\" required>\\n           </div>\\n        \\n          <div class=\\\"col-sm-4\\\">\\n            <label>Qty</label>\\n           <input type=\\\"number\\\" class=\\\"form-control\\\" placeholder=\\\"Purchase_Qty\\\"  formControlName=\\\"ProductInventory_Qty\\\" required>\\n         </div>\\n        \\n      </div>\\n\\n      <div class=\\\"row\\\">\\n     \\n       <div class=\\\"col-sm-4\\\">\\n        <label>Purchase Price </label>\\n        <input type=\\\"number\\\" class=\\\"form-control\\\" placeholder=\\\"Purchase Price\\\"  formControlName=\\\"singleunitpurchaseprice\\\" required>\\n       </div>\\n       <div class=\\\"col-sm-4\\\">\\n        <label>Sale Price</label>\\n        <input type=\\\"number\\\" class=\\\"form-control\\\" placeholder=\\\"Sale Price\\\"  formControlName=\\\"psingleunit_SellingPrice\\\" required>\\n       </div>\\n      \\n       <div class=\\\"col-sm-8\\\">\\n         <br>\\n         <div style=\\\"float: right;\\\" >\\n          <button class=\\\"btn btn-success\\\"  (click)=\\\"saveinventory()\\\" >\\n            Save\\n               </button>\\n               <button class=\\\"btn btn-danger\\\"  (click)=\\\"oncancel()\\\" >\\n                Cancel\\n                   </button>\\n         </div>\\n      \\n       </div>\\n       <br>\\n     \\n        \\n      \\n    </div>\\n  \\n  \\n  \\n  \\n  </form>\\n    \\n    </div>\\n    <div class=\\\"col-sm-10\\\" *ngIf=\\\"!showform\\\" >\\n      <br>\\n      <button class=\\\"btn btn-success \\\" style=\\\"float: right;\\\" (click)=\\\"checkform()\\\" >\\n        Add New Inventory\\n           </button>\\n    </div>\\n\\n    <div class=\\\"col-sm-1\\\" >\\n  \\n    </div>\\n  </div>\\n  <div class=\\\"table-responsive\\\" style=\\\"padding: 2%;\\\">\\n    <table class=\\\"table table-hover\\\">\\n      <thead>\\n      <tr>\\n        <th (click)=\\\"Sort('id')\\\">#<i class=\\\"fa fa-sort\\\"></i></th>\\n        <th (click)=\\\"Sort('productName')\\\">Product Name<i class=\\\"fa fa-sort\\\"></i></th>\\n        <th (click)=\\\"Sort('barcode')\\\">Barcode<i class=\\\"fa fa-sort\\\"></i></th>\\n        <th (click)=\\\"Sort('categorey_Name')\\\">Categorey<i class=\\\"fa fa-sort\\\"></i></th>\\n        <th (click)=\\\"Sort('brand_Name')\\\">Brand<i class=\\\"fa fa-sort\\\"></i></th>\\n        <th (click)=\\\"Sort('purchasedQty')\\\">Purchase Qty<i class=\\\"fa fa-sort\\\"></i></th>\\n        <th (click)=\\\"Sort('totalsaleQty')\\\">Sold Qty<i class=\\\"fa fa-sort\\\"></i></th>\\n        <th (click)=\\\"Sort('productInventory_Qty')\\\">Remaining Qty<i class=\\\"fa fa-sort\\\"></i></th>\\n        <th (click)=\\\"Sort('purchaseDate')\\\">Purchase Date<i class=\\\"fa fa-sort\\\"></i></th>\\n\\n        <th (click)=\\\"Sort('productInventory_UnitPrice')\\\">Unit Price(Purchase)<i class=\\\"fa fa-sort\\\"></i></th>\\n        <th (click)=\\\"Sort('productInventory_SellingPrice')\\\">Selling Price<i class=\\\"fa fa-sort\\\"></i></th>\\n        <th (click)=\\\"Sort('product_TotalPrice')\\\">Total Price<i class=\\\"fa fa-sort\\\"></i></th>\\n        <th (click)=\\\"Sort('productInventory_Status')\\\">Status<i class=\\\"fa fa-sort\\\"></i></th>\\n        <th >Action</th>\\n        <!-- <th>Image</th> -->\\n      </tr>\\n      </thead>\\n      <tbody>\\n     \\n        <tr *ngFor=\\\"let products of Searchinvertorylist |orderBy:key :reverse | paginate:{itemsPerPage:10,currentPage:p}; let i=index;\\\" >\\n          <td style=\\\"width: 2px;\\\">{{i+1}}</td>\\n          <td>{{products.productName}}</td>\\n          <td>{{products.barcode}}</td>\\n          <td>{{products.category_Name}}</td>\\n          <td>{{products?.brandNameEng}}</td>\\n          <td>{{products.purchasedQty}}</td>\\n          <td>{{products.totalsaleQty}}</td>\\n          <td>{{products.productInventory_Qty}}</td>\\n          <td>{{products.purchaseDate |date:'medium'}}</td>\\n          <td>{{products.productInventory_UnitPrice}}</td>\\n          <td>{{products.productInventory_SellingPrice}}</td>\\n          <td>{{products.product_TotalPrice}}</td>\\n        \\n        <td *ngIf=\\\"products.productInventory_Status;else falsee \\\"><img style=\\\"height: 20px;\\\" src=\\\"assets/icon/check.png\\\"/></td>\\n        <ng-template #falsee>\\n          <td><img style=\\\"height: 20px;\\\" src=\\\"assets/icon/cancel.png\\\"/></td>\\n        </ng-template>\\n\\n          <td *ngIf=\\\"products.productInventory_Status;else deact \\\"><button (click)=\\\"changestatus(products.productInvertory_Id)\\\" class=\\\"btn btn-danger\\\">Deactive</button> </td>\\n          <ng-template #deact>\\n            <td><button (click)=\\\"changestatus(products.productInvertory_Id)\\\" class=\\\"btn btn-success\\\">Active</button></td>\\n          </ng-template>\\n        </tr>\\n      </tbody>\\n    \\n    </table>\\n    <div class=\\\"row\\\">\\n      <div style=\\\"right: 10%;\\\">\\n        <pagination-controls (pageChange)=\\\"p=$event\\\"></pagination-controls>\\n    </div>\\n  </div>\\n  </div>\\n</app-card>\\n<!-- Hover table card end -->\\n      </div>\\n    </div>\\n    <ngx-spinner bdColor=\\\"rgba(51, 51, 51, 0.8)\\\" size=\\\"default\\\" type=\\\"ball-spin-clockwise\\\">  \\n      <p style=\\\"color: white\\\">Please Wait. </p>  \\n      </ngx-spinner> \\n  \\n  \"","export default \"\\n\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-sm-12\\\">\\n<!-- Hover table card start -->\\n<app-card [title]=\\\"'All Products'\\\" [classHeader]=\\\"true\\\" [blockClass]=\\\"'table-border-style'\\\">\\n  \\n\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-sm-12\\\" >\\n      <div class=\\\"col-sm-2\\\" style=\\\"float: right;padding-bottom: 8px;\\\">\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"Barcode\\\" (ngModelChange)=\\\"SearchProduct()\\\"placeholder=\\\"Enter Barcode to search\\\" >\\n           \\n         \\n     </div>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-sm-1\\\" >\\n   \\n    </div>\\n    <div class=\\\"col-sm-10\\\" *ngIf=\\\"showform\\\" >\\n      <form [formGroup]=\\\"Productform\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-sm-4\\\">\\n            <label>Barcode</label>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Scan Or search Barcode\\\"  formControlName=\\\"barcode\\\">\\n           </div>\\n          <div class=\\\"col-sm-4\\\">\\n            <label>Product Name</label>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Product Name\\\"  formControlName=\\\"productName\\\">\\n          </div>\\n          <div class=\\\"col-sm-4\\\">\\n            <label>Product Name (Urdu)</label>\\n           <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Product Name (Urdu)\\\"  formControlName=\\\"productName_Urdu\\\">\\n         </div>\\n        \\n      </div>\\n      <div class=\\\"row\\\">\\n     \\n       <div class=\\\"col-sm-4\\\">\\n        <label>Description </label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Description\\\"  formControlName=\\\"description\\\" required>\\n       </div>\\n       <div class=\\\"col-sm-4\\\">\\n        <label>Description (Urdu)</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Description (Urdu)\\\"  formControlName=\\\"description_Urdu\\\" required>\\n       </div>\\n       <div class=\\\"col-sm-4\\\">\\n        <label>Categoty select</label>\\n        <select class=\\\"custom-select custom-select-lg sm-1\\\" formControlName=\\\"category_Id\\\" required\\n        >\\n          <option selected> select Category</option>\\n          <option *ngFor=\\\"let option of categoreylist\\\" [value]=\\\"option.category_Id\\\">\\n            {{option.category_Name}}\\n          </option>\\n\\n        </select>\\n       </div>\\n       <div class=\\\"col-sm-4\\\">\\n        <label>Brand Select</label>\\n        <select class=\\\"custom-select custom-select-lg sm-1\\\" formControlName=\\\"brandId\\\"\\n        >\\n          <option selected>Select Brand</option>\\n          <option *ngFor=\\\"let option of AllBrands\\\" [value]=\\\"option.brandId\\\">\\n            {{option.brandNameEng}}\\n          </option>\\n\\n        </select>\\n       </div>\\n       <div class=\\\"col-sm-8\\\">\\n        <br>\\n        <div style=\\\"float: right;\\\" >\\n          <button class=\\\"btn btn-success\\\"  (click)=\\\"saveproduct()\\\" >\\n            Save\\n               </button>\\n       \\n              <button class=\\\"btn btn-danger\\\"  (click)=\\\"oncancel()\\\" >\\n               Cancel\\n                  </button>\\n        </div>\\n     \\n      </div>\\n \\n        \\n    </div>\\n  \\n  \\n  \\n  </form>\\n    \\n    </div>\\n  \\n    <div class=\\\"col-sm-10\\\" *ngIf=\\\"!showform\\\" >\\n      <br>\\n      <button class=\\\"btn btn-success \\\" style=\\\"float: right;\\\" (click)=\\\"checkform()\\\" >\\n        Add Product\\n           </button>\\n    </div>\\n    <div class=\\\"col-sm-1\\\" >\\n  \\n    </div>\\n  </div>\\n  <div class=\\\"table-responsive\\\" style=\\\"padding: 2%;\\\">\\n    <table class=\\\"table table-hover\\\">\\n      <thead>\\n      <tr>\\n        <th (click)=\\\"Sort('id')\\\">#<i class=\\\"fa fa-sort\\\"></i></th>\\n        <th (click)=\\\"Sort('productName')\\\">Product Name<i class=\\\"fa fa-sort\\\"></i></th>\\n        <th (click)=\\\"Sort('barcode')\\\">Barcode<i class=\\\"fa fa-sort\\\"></i></th>\\n        <th (click)=\\\"Sort('categorey_Name')\\\">Categorey<i class=\\\"fa fa-sort\\\"></i></th>\\n        <th (click)=\\\"Sort('brand_Name')\\\">Brand<i class=\\\"fa fa-sort\\\"></i></th>\\n   \\n        <th (click)=\\\"Sort('Image')\\\">Image<i class=\\\"fa fa-sort\\\"></i></th>\\n        <th (click)=\\\"Sort('status')\\\">Status<i class=\\\"fa fa-sort\\\"></i></th>\\n        <th (click)=\\\"Sort('description')\\\">Actions<i class=\\\"fa fa-sort\\\"></i></th>\\n        <!-- <th>Image</th> -->\\n      </tr>\\n      </thead>\\n      <tbody>\\n      <tr *ngFor=\\\"let products of productlist |orderBy:key :reverse | paginate:{itemsPerPage:10,currentPage:p}; let i=index;\\\" >\\n        <td style=\\\"width: 2px;\\\">{{i+1}}</td>\\n        <td>{{products.productName}}</td>\\n        <td>{{products.barcode}}</td>\\n        <td>{{products.category_Name}}</td>\\n        <td>{{products?.brandNameEng}}</td>\\n\\n        <!-- <td>{{products.ProductName}}</td> -->\\n        <td *ngIf=\\\"products.productImage!=noimage;else nImage\\\"><img [src]=\\\"ImagebaseUrl+products.productImage\\\" style=\\\"height: 40px;\\\"/></td>\\n        <ng-template #nImage>\\n          <td >No Image</td>\\n        </ng-template>\\n        <td *ngIf=\\\"products.status;else falsee \\\"><img style=\\\"height: 20px;\\\" src=\\\"assets/icon/check.png\\\"/></td>\\n        <ng-template #falsee>\\n          <td><img style=\\\"height: 20px;\\\" src=\\\"assets/icon/cancel.png\\\"/></td>\\n        </ng-template>\\n        <td>\\n          <div class=\\\"row\\\">\\n           \\n            <div style=\\\"padding: 4px;\\\">\\n              <i class=\\\"fa fa-edit\\\" style=\\\"font-size:18px;color:rgb(0, 195, 255)\\\"(click)=\\\"openLgEdit(Editproduct,products.productId)\\\"></i>\\n            </div>\\n            <div style=\\\"padding: 4px;\\\">\\n          <i class=\\\"fa fa-upload\\\" aria-hidden=\\\"true\\\"  (click)=\\\"openLg(uploadfilecontent,products.productId)\\\"></i> \\n          </div>\\n          <div *ngIf=\\\"products.status;else deact \\\"><img src=\\\"assets/images/on.png\\\" title=\\\"Active Product\\\" (click)=\\\"changestatus(products.productId)\\\"  > </div>\\n          <ng-template #deact>\\n           <img src=\\\"assets/images/off.png\\\" title=\\\"DeActive Product\\\"(click)=\\\"changestatus(products.productId)\\\" >\\n          </ng-template>\\n        </div>\\n       \\n        </td>\\n      </tr>\\n     \\n      </tbody>\\n    \\n    </table>\\n    <div class=\\\"row\\\">\\n      <div style=\\\"right: 10%;\\\">\\n        <pagination-controls (pageChange)=\\\"p=$event\\\"></pagination-controls>\\n    </div>\\n  </div>\\n  </div>\\n</app-card>\\n<!-- Hover table card end -->\\n      </div>\\n    </div>\\n  \\n    <ng-template #uploadfilecontent let-modal>\\n      <div class=\\\"modal-header\\\">\\n        <h4 class=\\\"modal-title\\\">Upload file</h4>\\n      \\n      </div>\\n      <div class=\\\"modal-body\\\">\\n    \\n        <div class=\\\"container\\\">\\n          <form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"SubmitImage()\\\">\\n      \\n              <!-- Progress Bar -->\\n              <div class=\\\"progress form-group\\\" *ngIf=\\\"progress > 0\\\">\\n                  <div class=\\\"progress-bar progress-bar-striped bg-success\\\" role=\\\"progressbar\\\" [style.width.%]=\\\"progress\\\">\\n                  </div>\\n              </div>\\n      \\n              <div class=\\\"form-group\\\">\\n                  <input type=\\\"file\\\" (change)=\\\"uploadFile($event)\\\" required>\\n              </div>\\n      \\n            \\n      \\n              <div class=\\\"form-group\\\">\\n                  <button class=\\\"btn btn-danger btn-block btn-lg\\\" [disabled]=\\\"form.get('avatar')==null\\\">Upload</button>\\n              </div>\\n          </form>\\n      </div>\\n      </div>\\n      <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-light\\\" (click)=\\\"modal.close('Close click')\\\">Close</button>\\n      </div>\\n    </ng-template>\\n    <ng-template #Editproduct let-modal>\\n      <div class=\\\"modal-header\\\">\\n        <h4 class=\\\"modal-title\\\">Update  Product</h4>\\n      \\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        <form class=\\\"needs-validation\\\" novalidate [formGroup]=\\\"singleproductform\\\">\\n          <div class=\\\"form-row\\\">\\n            <div class=\\\"col-md-6 mb-3\\\">\\n              <label for=\\\"validationCustom01\\\"> Product Name</label>\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"validationCustom01\\\" placeholder=\\\"Product Name\\\" formControlName=\\\"productName\\\"  required>\\n              \\n            </div>\\n            <div class=\\\"col-md-6 mb-3\\\">\\n              <label  for=\\\"validationCustom05\\\">Product Name Urdu</label>\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"validationCustom05\\\" formControlName=\\\"productName_Urdu\\\"  placeholder=\\\"productName_Urdu\\\" required>\\n              \\n            </div>\\n            <!-- <div class=\\\"col-md-5 mb-3\\\">\\n              <label for=\\\"validationCustomUsername\\\">Categorey</label>\\n              <select class=\\\"custom-select\\\" formControlName=\\\"category_Id\\\" >\\n                <option selected value=\\\"{{singleproduct.category_Id}}\\\">{{singleproduct?.category_Name}}</option>\\n                <option *ngFor=\\\"let option of categoreylist\\\" [value]=\\\"option.category_Id\\\">\\n                  {{option.category_Name}}\\n                </option>\\n    \\n              </select>\\n    \\n            </div> -->\\n            <!-- <div class=\\\"col-md-5 mb-3\\\">\\n              <label for=\\\"validationCustomUsername\\\">Brand</label>\\n              <select class=\\\"custom-select\\\" formControlName=\\\"brandId\\\" >\\n                <option selected value=\\\"{{singleproduct.brandId}}\\\">{{singleproduct?.brandNameEng}}</option>\\n                <option *ngFor=\\\"let option of AllBrands\\\" [value]=\\\"option.brandId\\\">\\n                  {{option.brandNameEng}}\\n                </option>\\n    \\n              </select>\\n    \\n            </div> -->\\n           \\n          </div>\\n          <div class=\\\"form-row\\\">\\n            <div class=\\\"col-md-6 mb-3\\\">\\n              <label for=\\\"validationCustom04\\\">Barcode</label>\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"validationCustom04\\\"formControlName=\\\"barcode\\\"  placeholder=\\\"Address\\\" required>\\n             \\n            </div>\\n            <div class=\\\"col-md-6 mb-3\\\">\\n              <label for=\\\"validationCustom04\\\">Description Urdu</label>\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"validationCustom04\\\"formControlName=\\\"description_Urdu\\\"  placeholder=\\\"description_Urdu\\\" required>\\n             \\n            </div>\\n            \\n          </div>\\n          <div class=\\\"form-row\\\">\\n          \\n            <div class=\\\"col-md-8 mb-3\\\">\\n              <label  for=\\\"validationCustom05\\\">Description</label>\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"validationCustom05\\\" formControlName=\\\"description\\\"  placeholder=\\\"Description\\\" required>\\n              \\n            </div>\\n            \\n          </div>\\n          \\n         \\n           \\n        \\n    \\n          <button style=\\\"float: right;\\\" class=\\\"btn btn-primary\\\"(click)=\\\"UpdateProuct()\\\" type=\\\"submit\\\">Submit</button>\\n        </form>\\n    \\n        <script>\\n        // Example starter JavaScript for disabling form submissions if there are invalid fields\\n        (function() {\\n          'use strict';\\n          window.addEventListener('load', function() {\\n            // Fetch all the forms we want to apply custom Bootstrap validation styles to\\n            var forms = document.getElementsByClassName('needs-validation');\\n            // Loop over them and prevent submission\\n            var validation = Array.prototype.filter.call(forms, function(form) {\\n              form.addEventListener('submit', function(event) {\\n                if (form.checkValidity() === false) {\\n                  event.preventDefault();\\n                  event.stopPropagation();\\n                }\\n                form.classList.add('was-validated');\\n              }, false);\\n            });\\n          }, false);\\n        })();\\n        </script>\\n      </div>\\n      <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-light\\\" (click)=\\\"modal.close('Close click')\\\">Close</button>\\n      </div>\\n    </ng-template>\\n\\n    <ngx-spinner bdColor=\\\"rgba(51, 51, 51, 0.8)\\\" size=\\\"default\\\" type=\\\"ball-spin-clockwise\\\">  \\n      <p style=\\\"color: white\\\">Please Wait. </p>  \\n      </ngx-spinner>   \"","export default \"<app-Add-Product></app-Add-Product>\"","export class Product{\r\n\r\n\r\n    productId:number\r\n    productName:string\r\n    product_TotalPrice:number\r\n    unit_Price:any\r\n    product_Qty :number\r\n    barcode:string\r\n    brandNameEng:string\r\n    description:string\r\n    sellingprice:number\r\n    brand_Name:string\r\n    category_Id:any\r\n    category_Name:string\r\n    productImage:string\r\n    brandId:number\r\n    dateTime:Date\r\n    description_Urdu:string\r\n    productName_Urdu:string\r\n    \r\n \r\n}\r\n","export class Supplier{\r\n    supplier_Id:number\r\n    supplier_Name:string \r\n    supplier_CompanyName:string \r\n    supplier_ContactNo :string\r\n    supplier_ContactNoOptional:string\r\n    supplier_Address:string\r\n    supplier_CityName:string\r\n    supplier_Email:string\r\n \r\n}\r\n","export class InventoryDto {\n    Barcode:string;\n   Product_TotalPrice:number;\nsingleunitpurchaseprice:number;\n    psingleunit_SellingPrice:number;\n\nPurchase_Qty:number;\n   TotalSellingPrice:number;\n  ProductInventory_Qty:number;\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from '../../../src/environments/environment.prod';\nimport { Supplier } from '../Models/Supplier.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SupplierService {\n  baseUrl = environment.apiurl + 'SupplierApi/';\nconstructor(private http: HttpClient) { }\npostsupplier(form: any){\n  return this.http.post<any>(this.baseUrl+'AddSupplier', form)\n};\nGetsupplier(){\n  return this.http.get<Supplier>(this.baseUrl+'AllSuppliers')\n};\n\n}\n\n","export default \".dark-modal .modal-content {\\n  background-color: #292b2c;\\n  color: white;\\n}\\n\\n.dark-modal .close {\\n  color: white;\\n}\\n\\n.light-blue-backdrop {\\n  background-color: #5cb3fd;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvUHJvZHVjdHMvQWRkLVByb2R1Y3QvQzpcXFVzZXJzXFxUYWxoYVxcRG93bmxvYWRzXFxFd2hvbGVzYWxlcldlYlBhbmVsQmFja1VwXFxFd2hvbGVzYWxlcldlYlBhbmVsQmFja1VwXFxkZWZhdWx0L3NyY1xcYXBwXFxwYWdlc1xcUHJvZHVjdHNcXEFkZC1Qcm9kdWN0XFxBZGQtUHJvZHVjdC5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvcGFnZXMvUHJvZHVjdHMvQWRkLVByb2R1Y3QvQWRkLVByb2R1Y3QuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSx5QkFBQTtFQUNBLFlBQUE7QUNDSjs7QURDRTtFQUNFLFlBQUE7QUNFSjs7QURBRTtFQUNFLHlCQUFBO0FDR0oiLCJmaWxlIjoic3JjL2FwcC9wYWdlcy9Qcm9kdWN0cy9BZGQtUHJvZHVjdC9BZGQtUHJvZHVjdC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5kYXJrLW1vZGFsIC5tb2RhbC1jb250ZW50IHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICMyOTJiMmM7XHJcbiAgICBjb2xvcjogd2hpdGU7XHJcbiAgfVxyXG4gIC5kYXJrLW1vZGFsIC5jbG9zZSB7XHJcbiAgICBjb2xvcjogd2hpdGU7XHJcbiAgfVxyXG4gIC5saWdodC1ibHVlLWJhY2tkcm9wIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICM1Y2IzZmQ7XHJcbiAgfSIsIi5kYXJrLW1vZGFsIC5tb2RhbC1jb250ZW50IHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzI5MmIyYztcbiAgY29sb3I6IHdoaXRlO1xufVxuXG4uZGFyay1tb2RhbCAuY2xvc2Uge1xuICBjb2xvcjogd2hpdGU7XG59XG5cbi5saWdodC1ibHVlLWJhY2tkcm9wIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzVjYjNmZDtcbn0iXX0= */\"","import { HttpClient, HttpClientModule, HttpEvent, HttpEventType, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Component, ElementRef, EventEmitter, Input, OnInit, Output, SimpleChanges, ViewChild } from '@angular/core';\n\nimport { FormArray, FormBuilder, FormControl, FormGroup } from '@angular/forms';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { SupplierService } from './../../../_service/supplier.service';\n//import { Supplier } from 'src/app/Models/Supplier.model';\n import { Supplier } from './../../../Models/Supplier.model';\nimport { Product } from './../../../Models/Product.Model';\nimport { ProductService } from './../../../_service/product.service';\nimport { FileuploadService } from './../../../_service/fileupload.service';\nimport { AlertifyService } from '../../../../../src/app/_service/alertify.service';\n\n@Component({\n  selector: 'app-Add-Product',\n  templateUrl: './Add-Product.component.html',\n  styleUrls: ['./Add-Product.component.scss']\n})\nexport class AddProductComponent implements OnInit {\n\n  closeResult: string;\n   supplierlist:Supplier[];\n   categoreylist:any[];\n   singlecategorey:any;\n   categoreyproducts:Product[];\n   showcategoreysection:boolean;\n   barcodeproducts:[];\n   form: FormGroup;\n   progress: number = 0;\n   selectedbarcodeproduct:Product;\n   productinfos:FormGroup;\n  selectedsupplier:any;\n  hidden: boolean = false;\n  CategoryDto:{};\n  newpackage(){\n    return this.fb.group({\n      ProductId:new FormControl(this.productmodel.productId),\n      ProductName:new FormControl(this.productmodel.productName),\n      Barcode:new FormControl(this.productmodel.barcode),\n      Brand_Name:new FormControl(this.productmodel.brand_Name),\n      Description:new FormControl(this.productmodel.description),\n      Product_Qty:new FormControl(this.productmodel.product_Qty),\n     // Product_TotalPrice:new FormControl(this.productmodel.product_TotalPrice),\n      Unit_Price:new FormControl(this.productmodel.unit_Price),\n      ProductInventory_SellingPrice:new FormControl(this.productmodel.sellingprice),\n  \n    });\n  }\n\n\n  constructor(private modalService: NgbModal,private model:Supplier,private http:HttpClient,private supplierservice:SupplierService,private productmodel:Product, private fb:FormBuilder,private productservice:ProductService, public fileUploadService: FileuploadService,private alertify: AlertifyService)\n   {\n    this.productinfos=this.fb.group({ \n      products:this.fb.array([this.newpackage()])\n   })\n  }\n  myNameElem: ElementRef;\n  \n \n  ngOnInit(\n    \n  ) {\n    this.form = this.fb.group({\n    \n      avatar: [null]\n    })\n    this.GetSuppliers()\n  }\n supplier:FormGroup=new FormGroup({\n  supplier_Name: new FormControl(this.model.supplier_Name),\n  supplier_CompanyName: new FormControl(this.model.supplier_CompanyName),\n  supplier_ContactNo: new FormControl(this.model.supplier_ContactNo),\n  supplier_Address: new FormControl(this.model.supplier_Address),\n  supplier_CityName: new FormControl(this.model.supplier_CityName),\n  supplier_Email: new FormControl(this.model.supplier_Email),\n\n });\n categorey:FormGroup=new FormGroup({\n \n  category_Name: new FormControl('')\n\n });\n\n\n\n\n supplierinfo:FormGroup=new FormGroup({\n   supplier_Id:new FormControl(this.model.supplier_Id)\n });\n categoreyinfo:FormGroup=new FormGroup({\n  categorey_Id:new FormControl('')\n});\n// productinfo:FormGroup=new FormGroup({\n//   ProductId:new FormControl(this.productmodel.ProductId),\n//   ProductName:new FormControl(this.productmodel.ProductName),\n//   Barcode:new FormControl(this.productmodel.Barcode),\n//   Description:new FormControl(this.productmodel.Description),\n//   Product_Qty:new FormControl(this.productmodel.Product_Qty),\n//   Product_TotalPrice:new FormControl(this.productmodel.Product_TotalPrice),\n//   Unit_Price:new FormControl(this.productmodel.Unit_Price),\n//   sellingprice:new FormControl(this.productmodel.sellingprice),\n// });\n\nget formArr() {\n \n \n  return this.productinfos.get('products') as FormArray;\n}\n\n\naddNewRow() {\n  if(this.formArr.length >= 6){\n    return false\n  }\n  else {\n    this.formArr.push(this.newpackage());\n \n  }\n  if(this.formArr.length > 1){\n    this.hidden = true\n  } else{\n    this.hidden = false\n  }\n}\n\n  openVerticallyCentered(content) {\n    this.modalService.open(content, { centered: true });\n  }\n  openLg(content) {\n    this.modalService.open(content, { size: 'lg' });\n  }\n  openVerticallyCenteredCategorey(categoreycontent) {\n    this.modalService.open(categoreycontent, { centered: true });\n  }\n  savecategorey(){\n    this.productservice.postcategorey(this.categorey.value).subscribe(next => {\n     \n      \n      this.categorey.reset();\n      this.Getcategorey();\n      this.modalService.dismissAll();\n\n      \n    }, error => {\n      console.log(error);\n    });\n  }\n  savesupplier(){\n    \n    \n    this.supplierservice.postsupplier(this.supplier.value).subscribe(next => {\n      console.log(next);\n      this.GetSuppliers();\n      this.supplier.reset();\n     \n      this.modalService.dismissAll();\n\n      \n    }, error => {\n      console.log(error);\n    });\n  }\n  removeQuantity(i:number) {\n    if(this.formArr.length == 1){\n      return false\n    }\n    else {\n    this.formArr.removeAt(i);\n    //this.hidden = true;\n    }\n  }\n  GetSuppliers(){\n    \n    this.supplierservice.Getsupplier().subscribe((next:any) => {\n      this.supplierlist=[];\n    \n      this.supplierlist=next;\n      console.log(this.supplierlist);\n    }, error => {\n      console.log(error);\n    });\n  }\n  Getcategorey(){\n    \n    this.productservice.GetCategorey().subscribe((next:any) => {\n      this.categoreylist=[];\n      this.categoreylist=next.resp;\n      \n      \n    }, error => {\n      console.log(error);\n    });\n  }\n  saveproduct(){\n\n  var  productobj={\"supplier_Id\":this.selectedsupplier.supplier_Id,\"category_Id\":this.singlecategorey.category_Id,\"products\":this.productinfos.value.products}\n  console.log(productobj);\n \n  this.http.post<any>('https://ewholesaler.conveyor.cloud/Api/ProductApi/AddSupplierWithProducts', productobj).subscribe(next => {\n    console.log(next);\n    this.productinfos.reset();\n   this.singlecategorey=null;\n  \n    \n  }, error => {\n    console.log(error);\n  });\n  }\n  onOptionsSelected(id){\nconsole.log(id);\n\nthis.selectedsupplier=this.supplierlist.find(x=> x.supplier_Id == id);\nthis.showcategoreysection=true;\nthis.Getcategorey();\nconsole.log(this.selectedsupplier);\n\n  }\n  onOptionsCategoreySelected(id:number){\n\n\nthis.CategoryDto={\"Category_Id\":this.ConvertToInt(id)};\n\nthis.productservice.GetCategoryProduct(this.CategoryDto).subscribe((res:any)=>{\nthis.categoreyproducts=res;\n\n\n}, error => {\n    console.log(error);\n  });\nthis.singlecategorey=this.categoreylist.find(x=>x.category_Id==id)\n\n  }\n  onBarcodechange(Barcode,id){\n    \n    var productdetails=this.categoreyproducts.find(x=>x.barcode==Barcode);\n\nif(productdetails!=null&&productdetails!=undefined){\n\n  this.selectedbarcodeproduct=productdetails;\n  ((this.productinfos.get('products') as FormArray).at(id) as FormGroup).get('ProductId').patchValue(this.selectedbarcodeproduct.productId);\n  ((this.productinfos.get('products') as FormArray).at(id) as FormGroup).get('ProductName').patchValue(this.selectedbarcodeproduct.productName);\n  ((this.productinfos.get('products') as FormArray).at(id) as FormGroup).get('Brand_Name').patchValue(this.selectedbarcodeproduct.brand_Name);\n  ((this.productinfos.get('products') as FormArray).at(id) as FormGroup).get('Product_Qty').patchValue(this.selectedbarcodeproduct.product_Qty);\n  ((this.productinfos.get('products') as FormArray).at(id) as FormGroup).get('Description').patchValue(this.selectedbarcodeproduct.description);\n  ((this.productinfos.get('products') as FormArray).at(id) as FormGroup).get('Unit_Price').patchValue(this.selectedbarcodeproduct.unit_Price);\n}\nelse{\n  ((this.productinfos.get('products') as FormArray).at(id) as FormGroup).get('ProductId').patchValue(0);\n  ((this.productinfos.get('products') as FormArray).at(id) as FormGroup).get('ProductName').patchValue(\"\");\n  ((this.productinfos.get('products') as FormArray).at(id) as FormGroup).get('Brand_Name').patchValue(\"\");\n  ((this.productinfos.get('products') as FormArray).at(id) as FormGroup).get('Product_Qty').patchValue(\"\");\n  ((this.productinfos.get('products') as FormArray).at(id) as FormGroup).get('Description').patchValue(\"\");\n  ((this.productinfos.get('products') as FormArray).at(id) as FormGroup).get('Unit_Price').patchValue(\"\");\n}\n\n\n   \n      }\n  \n  ConvertToInt(val){\n        return parseInt(val);\n      }\n//fileupload\nuploadFile(event) {\n  const file = (event.target as HTMLInputElement).files[0];\n  this.form.patchValue({\n    avatar: file\n  });\n  this.form.get('avatar').updateValueAndValidity()\n}\n\nsubmitUser() {\n  var apipath=\"AddCatAndProductExcel\";\n  this.fileUploadService.uploadproductfile(\n \n    this.form.value.avatar,apipath\n  ).subscribe((event: HttpEvent<any>) => {\n    switch (event.type) {\n      case HttpEventType.Sent:\n        console.log('Request has been made!');\n        break;\n      case HttpEventType.ResponseHeader:\n     \n        console.log('Response header has been received!11');\n        this.form.reset();\n    \n\nthis.modalService.dismissAll();\n        break;\n      case HttpEventType.UploadProgress:\n        this.progress = Math.round(event.loaded / event.total * 100);\n        console.log(`Uploaded! ${this.progress}%`);\n        break;\n      case HttpEventType.Response:\n        this.modalService.dismissAll();\n        this.form.reset();\n          this.alertify.success('Data Updated seccussfully!');\n          break;\n\n        this.modalService.dismissAll();\n        setTimeout(() => {\n          this.progress = 0;\n        }, 1500);\n        default  :\n        {\n          this.modalService.dismissAll();\n          this.form.reset();\n          this.alertify.error('Some things Wrong  or file formate  is not supported');\n        }\n\n    }\n   \n  })\n}\n\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL1Byb2R1Y3RzL0FsbEludmVudG9yeS9BbGxJbnZlbnRvcnkuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { AlertifyService } from '../../../../../src/app/_service/alertify.service';\nimport { InventoryDto } from '../../../../../src/app/Models/inventoryDto';\nimport { StockinService } from './../../../../../src/app/_service/stockin.service';\n\n@Component({\n  selector: 'app-AllInventory',\n  templateUrl: './AllInventory.component.html',\n  styleUrls: ['./AllInventory.component.scss']\n})\nexport class AllInventoryComponent implements OnInit {\n  key:string='rowid';\n  reverse:boolean=false;\n  invertorylist:any[];\n  Searchinvertorylist:any[];\n  p:number=1;\n  Barcode:any;\n  status :boolean;\n  showform:boolean=false;\n  constructor(private alertify: AlertifyService,private SpinnerService: NgxSpinnerService,private  inventorymodal:InventoryDto,private service:StockinService,private fb:FormBuilder) { }\n\n  ngOnInit() {\n    this.GetInventory();\n  }\n  Sort(key){\n    this.key=key;\n    this.reverse=!this.reverse;\n  }\n  GetInventory(){\n    this.SpinnerService.show();\n    this.service.GetstockIn().subscribe((next:any) => {\n      this.invertorylist=[];\n      this.invertorylist=next.resp;\n      this.Searchinvertorylist=next.resp;\n      this.SpinnerService.hide();\n      console.log(this.invertorylist)\n    }, error => {\n      console.log(error);\n    });\n  \n  }\n  inventoryform:FormGroup=new FormGroup({\n    Barcode: new FormControl(this.inventorymodal.Barcode),\n    singleunitpurchaseprice: new FormControl(this.inventorymodal.singleunitpurchaseprice),\n    psingleunit_SellingPrice: new FormControl(this.inventorymodal.psingleunit_SellingPrice),\n    ProductInventory_Qty: new FormControl(0),\n   });\n   checkform()\n  {\n    \n    this.showform=true;\n  }\n  SearchProduct(){\n    if(this.Barcode==\"\"){\n      this.Searchinvertorylist=[];\n     this.Searchinvertorylist=this.invertorylist\n    }\n    else{\n      if(this.invertorylist!=null){\n        this.Searchinvertorylist=this.invertorylist.filter(res=>{\n          return res.barcode.match(this.Barcode)\n        })\n      }\n   \n    }\n  }\n  oncancel()\n  {\n    this.showform=false;\n    this.inventoryform.reset();\n  }\n  saveinventory()\n  {\n    debugger;\n    console.log(this.inventoryform.value);\n\n        this.service.AddInventory(this.inventoryform.value).subscribe(next => {\n       \n      \n          this.inventoryform.reset();\n           this.GetInventory();\n           this.showform=false;\n          this.alertify.success('Inventory Add seccussfully');\n         \n        }, error => {\n         this.alertify.error('Barcode not exists');\n          console.log(error);\n        });\n  }\n  onOptionsSelected(num){\n    debugger;\n    if(num==\"0\"){\n      this.Searchinvertorylist=this.invertorylist;\n    }\n    if(num==\"1\"){\n      this.status=true;\n      this.Searchinvertorylist=this.invertorylist.filter(x=>x.productInventory_Status==this.status);\n    }\n    if(num==\"2\"){\n    \n      this.status=false;\n      this.Searchinvertorylist=this.invertorylist.filter(x=>x.productInventory_Status==this.status);\n    }\n\n  }\n  changestatus(id:number){\nthis.service.ChangeStatus(id).subscribe((next:any)=>{\n  this.invertorylist.forEach(x=>{if(x.productInvertory_Id==id){x.productInventory_Status=!x.productInventory_Status}});\n}, error => {\n      console.log(error);\n    })\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL1Byb2R1Y3RzL0FsbFByb2R1Y3QvQWxsUHJvZHVjdC5jb21wb25lbnQuc2NzcyJ9 */\"","import { HttpEvent, HttpEventType } from '@angular/common/http';\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms';\nimport { MatPaginator, MatSort, MatTableDataSource } from '@angular/material';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { FileuploadService } from './../../../_service/fileupload.service';\nimport { Product } from './../../../Models/Product.Model';\nimport { ProductService } from './../../../_service/product.service';\nimport { environment } from './../../../../../src/environments/environment.prod';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { AlertifyService } from '../../../../../src/app/_service/alertify.service';\nimport { BrandService } from '../../../../../src/app/_service/brand.service';\n\n@Component({\n  selector: 'app-AllProduct',\n  templateUrl: './AllProduct.component.html',\n  styleUrls: ['./AllProduct.component.scss']\n})\nexport class AllProductComponent implements OnInit {\n  ImagebaseUrl = environment.Imagebaseurl + 'ProductImages/';\n  form: FormGroup;\n   progress: number = 0;\n  listData: MatTableDataSource<any>;\n  searchKey: string;\n  productlist:any[];\n  Searchableproductlist:any[];\n  Barcode:any;\n  key:string='rowid';\n  reverse:boolean=false;\n  disable:boolean=false;\n  p:number=1;\n  productid:number\n  EditProduct:any;\n  noimage=\"\";\n  AllBrands:any[];\n  singleproduct:Product;\n  categoreylist:any[];\n  Brandlist:any[];\n  showform:boolean=false;\n  //displayedColumns: string[] = ['productId','productName','brand_Name','barcode','description'];\n  constructor(private alertify: AlertifyService,private SpinnerService: NgxSpinnerService,private productservice:ProductService,private modalService: NgbModal, public fileUploadService: FileuploadService, private fb:FormBuilder,private productmodel:Product,private brandservice:BrandService) { }\n  checkform()\n  {\n    this.showform=true;\n  }\n  singleproductform:FormGroup=new FormGroup({\n    productName: new FormControl(this.productmodel.productName),\n   \n    barcode: new FormControl(this.productmodel.barcode),\n    category_Name: new FormControl(this.productmodel.category_Name),\n    category_Id: new FormControl(this.productmodel.category_Id),\n    // product_Qty: new FormControl(this.productmodel.product_Qty),\n    // product_TotalPrice: new FormControl(this.productmodel.product_TotalPrice),\n    // sellingprice: new FormControl(this.productmodel.sellingprice),\n    // unit_Price: new FormControl(this.productmodel.unit_Price),\n    productImage:new FormControl(this.productmodel.productImage),\n    productId: new FormControl(this.productmodel.productId),\n    description: new FormControl(this.productmodel.description),\n    brandId: new FormControl(this.productmodel.brandId),\n    dateTime: new FormControl(this.productmodel.dateTime),\n    description_Urdu: new FormControl(this.productmodel.description_Urdu),\n    productName_Urdu: new FormControl(this.productmodel.productName_Urdu),\n    // brand_Name:new FormControl(this.productmodel.brandNameEng)\n   });\n   \n   \n  Productform:FormGroup=new FormGroup({\n    productName: new FormControl(this.productmodel.productName),\n    category_Id: new FormControl(0),\n    brandId: new FormControl(0),\n    barcode: new FormControl(this.productmodel.barcode),\n    productImage:new FormControl(this.productmodel.productImage),\n    productId: new FormControl(0),\n    description: new FormControl(this.productmodel.description),\n    description_Urdu: new FormControl(this.productmodel.description_Urdu),\n    productName_Urdu: new FormControl(this.productmodel.productName_Urdu),\n   });\n  \n  ngOnInit() {\n    \n    this.Getcategorey();\n    this.form = this.fb.group({\n    \n      avatar: [null]\n    })\n\n    this.getproducts();\n    this.GetBrands();\n   \n  }\n  \n  onSearchClear() {\n    this.searchKey = \"\";\n    this.applyFilter();\n  }\n  oncancel()\n  {\n    this.showform=false;\n    this.Productform.reset();\n  }\n  openLg(content,id:number) {\n    this.productid=id;\n    this.GetBrands();\n    this.Getcategorey();\n    this.modalService.open(content, { size: 'lg' });\n  }\n  saveproduct()\n  {\n  debugger;\nconsole.log(this.Productform.value);\n    this.productservice.AddProduct(this.Productform.value).subscribe(next => {\n   \n     this.modalService.dismissAll();\n      this.Productform.reset();\n       this.getproducts();\n       this.showform=false;\n      this.alertify.success('Product Add seccussfully');\n     \n    }, error => {\n     this.alertify.error('Something Wrong or already exists');\n      console.log(error);\n    });\n    \n  }\n\n  openLgEdit(content,id:number){\n    var data=this.Searchableproductlist.find(res=>res.productId==id);\n  this.singleproduct=data;\n  this.singleproductform.setValue({\nproductName:this.singleproduct.productName,\n\nbarcode:this.singleproduct.barcode,\ncategory_Name:this.singleproduct.category_Name,\n category_Id:this.singleproduct.category_Id,\ndescription:this.singleproduct.description,\nproductId:this.singleproduct.productId,\nproductImage:this.singleproduct.productImage,\nbrandId:this.singleproduct.brandId,\ndateTime:this.singleproduct.dateTime,\ndescription_Urdu:this.singleproduct.description_Urdu,\n productName_Urdu:this.singleproduct.productName_Urdu,\n//  brand_Name:this.singleproduct.brand_Name\n  });\n\n\n\n  console.log(this.singleproduct);\n \n    this.modalService.open(content, { size: 'lg' });\n  }\n\n  applyFilter() {\n    this.listData.filter = this.searchKey.trim().toLowerCase();\n  }\n  Getcategorey(){\n    this.SpinnerService.show();\n    this.productservice.GetCategorey().subscribe((next:any) => {\n      this.categoreylist=[];\n      this.categoreylist=next.resp;\n      this.SpinnerService.hide();\n      console.log(this.categoreylist)\n    }, error => {\n      console.log(error);\n    });\n\n   \n  }\n  GetBrands(){\n\n    this.brandservice.GetBrands().subscribe((next:any) => {\n      this.AllBrands=[];\n      this.AllBrands=next.resp;\n   \n      console.log(this.AllBrands)\n    }, error => {\n      console.log(error);\n    });\n\n  }\n  getproducts(){\n    debugger;\n    this.SpinnerService.show();\n    this.productservice.GetAllProducts().subscribe((next:any) => {\n      this.productlist=[];\n    \n      this.productlist=next.resp;\n      this.Searchableproductlist=next.resp;\n      this.SpinnerService.hide();\n      console.log(this.productlist);\n      // this.listData = new MatTableDataSource(this.productlist);\n      // this.listData.sort=this.sort;\n      // this.listData.paginator=this.paginator;\n    }, error => {\n      console.log(error);\n    });\n\n  }\n  SearchProduct(){\n    if(this.Barcode==\"\"){\n     this.productlist=this.Searchableproductlist\n    }\n    else{\n      if(this.productlist!=null){\n        this.productlist=this.Searchableproductlist.filter(res=>{\n          return res.barcode.match(this.Barcode)\n        })\n      }\n   \n    }\n  }\n  Sort(key){\n    this.key=key;\n    this.reverse=!this.reverse;\n  }\n  \nuploadFile(event) {\n\n  const file = (event.target as HTMLInputElement).files[0];\n  this.form.patchValue({\n    avatar: file\n  });\n  this.form.get('avatar').updateValueAndValidity();\n \n}\n\nSubmitImage() {\n  this.SpinnerService.show();\n  if(this.form.value.avatar!=null){\n    var apipath=\"UploadProductImage\";\n    \n    this.fileUploadService.uploadproductimage(\n   \n      this.form.value.avatar,apipath,\n      this.productid\n    ).subscribe((event: HttpEvent<any>) => {\n      switch (event.type) {\n        case HttpEventType.Sent:\n          console.log('Request has been made!');\n          break;\n        case HttpEventType.ResponseHeader:\n          console.log('Response header has been received!');\n          this.form.reset();\n  this.modalService.dismissAll();\n          break;\n        case HttpEventType.UploadProgress:\n          this.progress = Math.round(event.loaded / event.total * 100);\n          console.log(`Uploaded! ${this.progress}%`);\n          break;\n        case HttpEventType.Response:\n          console.log('User successfully created!', event.body);\n          setTimeout(() => {\n            this.progress = 0;\n          }, 1500);\n  \n      }\n      this.form.reset();\n      this.getproducts();\n    })\n    this.SpinnerService.hide();\n  }\n  \n}\nchangestatus(id:number){\n  this.productservice.ChangeStatus(id).subscribe((next:any)=>{\n    this.productlist.forEach(x=>{if(x.productId==id){x.status=!x.status}});\n  }, error => {\n        console.log(error);\n      })\n    }\nUpdateProuct(){\n  debugger;\n this.productservice.UpdateProduct(this.singleproductform.value).subscribe(next => {\n\n  this.modalService.dismissAll();\n   this.singleproductform.reset();\n   this.getproducts();\n   this.alertify.success('Product Updated seccussfully');\n  \n }, error => {\n  this.modalService.dismissAll();\n  this.singleproductform.reset();\n  this.alertify.success('Product Updated seccussfully');\n   console.log(error);\n });\n  console.log(this.singleproductform.value)\n}\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AllInventoryComponent } from './AllInventory/AllInventory.component';\nimport { AllProductComponent } from './AllProduct/AllProduct.component';\n\nimport { ProductsComponent } from './Products.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ProductsComponent,\n    data: {\n      breadcrumb: 'Add-Products',\n      icon: 'fa fa-product-hunt bg-c-blue',\n      breadcrumb_caption: 'Add your products with basic Details',\n      status: true\n    }\n  },\n  {\n    path: 'allproducts',\n    component: AllProductComponent,\n    data: {\n      breadcrumb: 'Products',\n      icon: 'icofont-table bg-c-blue',\n      breadcrumb_caption: 'All Products with Details',\n      status: true\n    }\n  },\n  {\n    path: 'inventory',\n    component: AllInventoryComponent,\n    data: {\n      breadcrumb: 'Inventory',\n      icon: 'icofont-table bg-c-blue',\n      breadcrumb_caption: 'Inventory With All Products And Details',\n      status: true\n    }\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ProductsRoutingModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL1Byb2R1Y3RzL1Byb2R1Y3RzLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-Products',\n  templateUrl: './Products.component.html',\n  styleUrls: ['./Products.component.scss']\n})\nexport class ProductsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ProductsComponent } from './Products.component';\nimport { AddProductComponent } from './Add-Product/Add-Product.component';\nimport { SharedModule } from './../../shared/shared.module';\nimport { ProductsRoutingModule } from './Products-bootstrap-routing.module';\nimport { AllProductComponent } from './AllProduct/AllProduct.component';\nimport * as Material from '@angular/material';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Supplier } from './../../Models/Supplier.model';\nimport { HttpClientModule } from '@angular/common/http';\nimport { SupplierService } from './../../_service/supplier.service';\nimport { Product } from './../../Models/Product.Model';\nimport { NgxDropzoneModule } from 'ngx-dropzone';\nimport{Ng2SearchPipeModule} from 'ng2-search-filter';\nimport{Ng2OrderModule} from 'ng2-order-pipe';\nimport{NgxPaginationModule} from 'ngx-pagination';\nimport { AllInventoryComponent } from './AllInventory/AllInventory.component';\nimport { StockinService } from './../../../../src/app/_service/stockin.service';\nimport { NgxSpinnerModule, NgxSpinnerService } from 'ngx-spinner';\nimport { InventoryDto } from '../../../../src/app/Models/inventoryDto';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    SharedModule,\n    ProductsRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    NgxDropzoneModule,\n    Material.MatStepperModule,\n\t\tMaterial.MatGridListModule, // for grid column\n        Material.MatFormFieldModule, //form\n        Material.MatInputModule, //input\n        Material.MatRadioModule, //mat-radio-group - radio button\n        Material.MatDatepickerModule, //matDatepicker - datepicker\n        Material.MatNativeDateModule, //required for datepicker\n        Material.MatSelectModule, //mat-select - dropdown\n        Material.MatCheckboxModule, //mat-checkbox - checkbox\n\t\tMaterial.MatButtonModule,\n\t\tMaterial.MatTableModule,\n\t\tMaterial.MatIconModule,\n\t\tMaterial.MatPaginatorModule,\n\t\tMaterial.MatSortModule,\n\t\tMaterial.MatProgressBarModule,\n\t\tMaterial.MatCardModule, \n\t\tMaterial. MatIconModule, \n    Material. MatToolbarModule,\n    Ng2OrderModule,\n    Ng2SearchPipeModule,\n    NgxPaginationModule,\n    NgxSpinnerModule,\n  ],\n  declarations: [ProductsComponent,\n  AddProductComponent,\nAllProductComponent,\nAllInventoryComponent],\nproviders: [\nSupplier,SupplierService,Product,StockinService,NgxSpinnerService,InventoryDto\n]\n})\nexport class ProductsModule { }\n"],"sourceRoot":"webpack:///","file":"pages-Products-Products-module-es5.js"}