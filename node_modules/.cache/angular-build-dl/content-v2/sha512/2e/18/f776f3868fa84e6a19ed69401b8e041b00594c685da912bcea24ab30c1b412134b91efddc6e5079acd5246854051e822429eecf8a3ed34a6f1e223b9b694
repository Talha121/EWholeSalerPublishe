{"version":3,"sources":["./src/app/pages/categories/Allcategories/Allcategories.component.html","./src/app/pages/categories/categories.component.html","./src/app/Models/Category.ts","./src/app/pages/categories/Allcategories/Allcategories.component.scss","./src/app/pages/categories/Allcategories/Allcategories.component.ts","./src/app/pages/categories/categories.component.scss","./src/app/pages/categories/categories.component.ts","./src/app/pages/categories/categories.module.ts","./src/app/pages/categories/categoryrouting.routing.ts"],"names":[],"mappings":"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","file":"pages-categories-categories-module-es2015.js","sourcesContent":["export default \"\\n\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-sm-12\\\">\\n<!-- Hover table card start -->\\n<app-card [title]=\\\"'categories'\\\" [classHeader]=\\\"true\\\" [blockClass]=\\\"'table-border-style'\\\">\\n  <span class=\\\"code-header\\\">All Categories Detail</span>\\n\\n  <div class=\\\"row\\\" *ngIf=\\\"!showform\\\">\\n    <div class=\\\"col-sm-10\\\" >\\n     <button class=\\\"btn btn-success pull-right\\\" (click)=\\\"showinput()\\\"> Add Category</button>\\n    </div>\\n    \\n  </div>\\n  <div class=\\\"row\\\" *ngIf=\\\"showform\\\">\\n    <div class=\\\"col-sm-1\\\">\\n\\n    </div>\\n    <div class=\\\"col-sm-11\\\">\\n      <div class=\\\"row\\\">\\n        <form [formGroup]=\\\"CategoryForm\\\">\\n          <div class=\\\"col-sm-12\\\">\\n         <label for=\\\"validationCustom01\\\">Category Name(English)</label> \\n            <input type=\\\"text\\\" placeholder=\\\"category Name(English)\\\"  formControlName=\\\"category_Name\\\"  class=\\\"form-control\\\" >\\n      </div>\\n      <br>\\n      <div class=\\\"col-sm-12\\\">\\n     \\n       <label for=\\\"validationCustom01\\\">Category Name(Urdu)</label> \\n        <input type=\\\"text\\\" placeholder=\\\"category Name(Urdu)\\\" formControlName=\\\"category_Name_Urdu\\\"   class=\\\"form-control\\\">\\n     </div>\\n     <br>\\n     <div class=\\\"col-sm-12\\\">\\n     <button class=\\\"btn btn-info\\\" (click)=\\\"AddCategory()\\\" type=\\\"submit\\\">Save</button>\\n     </div>\\n    </form>\\n        \\n      </div>\\n\\n    </div>\\n   \\n  </div>\\n  <div class=\\\"table-responsive\\\"style=\\\"padding: 2%;\\\">\\n    <table class=\\\"table table-hover\\\">\\n      <thead>\\n      <tr>\\n        <th (click)=\\\"Sort('id')\\\">#<i class=\\\"fa fa-sort\\\"></i></th>\\n        <th (click)=\\\"Sort('category_Name')\\\">Category Name<i class=\\\"fa fa-sort\\\"></i></th>\\n        <th (click)=\\\"Sort('category_Name_Urdu')\\\">Catehory Name(Urdu)<i class=\\\"fa fa-sort\\\"></i></th>\\n        <th (click)=\\\"Sort('category_Image')\\\">Image<i class=\\\"fa fa-sort\\\"></i></th>\\n        <th (click)=\\\"Sort('description')\\\">Actions<i class=\\\"fa fa-sort\\\"></i></th>\\n        <!-- <th>Image</th> -->\\n      </tr>\\n      </thead>\\n      <tbody>\\n      <tr *ngFor=\\\"let obj of CategoriesList |orderBy:key :reverse | paginate:{itemsPerPage:10,currentPage:p}; let i=index;\\\" >\\n        <td style=\\\"width: 2px;\\\">{{i+1}}</td>\\n        <td>{{obj.category_Name}}</td>\\n        <td>{{obj.category_Name_Urdu}}</td>\\n        <td *ngIf=\\\"obj.category_Image!=noimage; else nImage\\\"><img [src]=\\\"ImagebaseUrl+obj.category_Image\\\" style=\\\"height: 40px;\\\"/></td>\\n        <ng-template #nImage>\\n          <td >No Image</td>\\n        </ng-template>\\n       <td>  <div class=\\\"row\\\">\\n\\n        <div style=\\\"padding: 4px;\\\">\\n          <i class=\\\"fa fa-upload\\\" aria-hidden=\\\"true\\\" style=\\\"font-size:18px;color:rgb(255, 0, 0)\\\" title=\\\"Upload Image\\\"  (click)=\\\"openLg(uploadfilecontent,obj.category_Id)\\\"></i> \\n        </div>\\n        <div style=\\\"padding: 4px;\\\">\\n          <i class=\\\"fa fa-edit\\\" style=\\\"font-size:18px;color:rgb(0, 195, 255)\\\"(click)=\\\"UpdateView(Update,obj.category_Id)\\\"></i>\\n        </div>\\n    </div></td>\\n      </tr>\\n     \\n      </tbody>\\n    \\n    </table>\\n    <div class=\\\"row\\\">\\n      <div style=\\\"right: 10%;\\\">\\n        <pagination-controls (pageChange)=\\\"p=$event\\\"></pagination-controls>\\n    </div>\\n  </div>\\n  </div>\\n</app-card>\\n<!-- Hover table card end -->\\n      </div>\\n    </div>\\n  \\n    <ng-template #uploadfilecontent let-modal>\\n      \\n      <div class=\\\"modal-header\\\">\\n        <h4 class=\\\"modal-title\\\">Upload file</h4>\\n      \\n      </div>\\n      <div class=\\\"modal-body\\\">\\n           \\n        <div class=\\\"container\\\">\\n          <form  [formGroup]=\\\"form\\\" (ngSubmit)=\\\"SubmitImage()\\\">\\n      \\n            <!-- Progress Bar -->\\n            <div class=\\\"progress form-group\\\" *ngIf=\\\"progress > 0\\\">\\n                <div class=\\\"progress-bar progress-bar-striped bg-success\\\" role=\\\"progressbar\\\" [style.width.%]=\\\"progress\\\">\\n                </div>\\n            </div>\\n    \\n            <div class=\\\"form-group\\\">\\n                <input type=\\\"file\\\" (change)=\\\"uploadFile($event)\\\" required>\\n            </div>\\n    \\n          \\n    \\n            <div class=\\\"form-group\\\">\\n                <button class=\\\"btn btn-danger btn-block btn-lg\\\" [disabled]=\\\"form.get('avatar')==null\\\">Upload</button>\\n            </div>\\n        </form>\\n      </div>\\n      </div>\\n      <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-light\\\" (click)=\\\"modal.close('Close click')\\\">Close</button>\\n      </div>\\n    </ng-template>\\n\\n    <ngx-spinner bdColor=\\\"rgba(51, 51, 51, 0.8)\\\" size=\\\"default\\\" type=\\\"ball-spin-clockwise\\\">  \\n      <p style=\\\"color: white\\\">Please Wait. </p>  \\n      </ngx-spinner> \\n  \\n      <ng-template #Update let-modal>\\n        <div class=\\\"modal-header\\\">\\n          <h4 class=\\\"modal-title\\\">Update  Category</h4>\\n        \\n        </div>\\n        <div class=\\\"modal-body\\\">\\n          <form class=\\\"needs-validation\\\" novalidate [formGroup]=\\\"CategoryForm\\\">\\n            <div class=\\\"form-row\\\">\\n              <div class=\\\"col-md-5 mb-3\\\">\\n                <label for=\\\"validationCustom01\\\">Category Name(English)</label>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"validationCustom01\\\" placeholder=\\\"Category Name(English)\\\" formControlName=\\\"category_Name\\\"  required>\\n                \\n              </div>\\n              <div class=\\\"col-md-5 mb-3\\\">\\n                <label for=\\\"validationCustom01\\\">Category Name(Urdu)</label>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"validationCustom01\\\" placeholder=\\\"Category Name(Urdu)\\\" formControlName=\\\"category_Name_Urdu\\\"  required>\\n                \\n              </div>\\n             \\n            </div>\\n\\n            \\n           \\n             \\n          \\n      \\n            <button style=\\\"float: right;\\\" class=\\\"btn btn-primary\\\"(click)=\\\"UpdateCategory()\\\" type=\\\"submit\\\">Submit</button>\\n          </form>\\n      \\n      \\n        \\n        </div>\\n        <div class=\\\"modal-footer\\\">\\n          <button type=\\\"button\\\" class=\\\"btn btn-light\\\" (click)=\\\"modal.close('Close click')\\\">Close</button>\\n        </div>\\n      </ng-template>\"","export default \"<p>\\n  categories works!\\n</p>\\n\"","export class Category {\n    category_Id:number=0;\ncategory_Image: string=\"\";\ncategory_Name: string\ncategory_Name_Urdu:string\nstatus: boolean=true;\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2NhdGVnb3JpZXMvQWxsY2F0ZWdvcmllcy9BbGxjYXRlZ29yaWVzLmNvbXBvbmVudC5zY3NzIn0= */\"","import { HttpEvent, HttpEventType } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { environment } from './../../../../../src/environments/environment.prod';\nimport { FileuploadService } from '../../../../../src/app/_service/fileupload.service';\nimport { ProductService } from '../../../../../src/app/_service/product.service';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { Category } from '../../../../../src/app/Models/Category';\nimport { AlertifyService } from '../../../../../src/app/_service/alertify.service';\n\n@Component({\n  selector: 'app-Allcategories',\n  templateUrl: './Allcategories.component.html',\n  styleUrls: ['./Allcategories.component.scss']\n})\nexport class AllcategoriesComponent implements OnInit {\n    form: FormGroup;\n    ImagebaseUrl = environment.Imagebaseurl + 'CategoryImages/';\n  CategoriesList:any;\n  key:string='rowid';\n  reverse:boolean=false;\n  p:number=1;\n  categotyid:number;\n  noimage=\"\";\n  showform:boolean=false;  \n  Singlecategory:Category;\n  progress: number = 0;\n  constructor(private categorymodel:Category,private alertify: AlertifyService,private SpinnerService: NgxSpinnerService,private productservice:ProductService,private modalService: NgbModal,private uploadfileservice:FileuploadService,private fb:FormBuilder) { }\n\n  ngOnInit() {\n    this.SpinnerService.show();\n    this.Getcategorey();\n    this.form = this.fb.group({\n    \n      avatar: [null]\n    })\n    this.SpinnerService.hide();\n  }\n  showinput()\n  {\n   this.showform=true;\n  }\n  CategoryForm:FormGroup=new FormGroup({\n    category_Name: new FormControl(this.categorymodel.category_Name),\n    category_Id: new FormControl(0),\n    category_Name_Urdu: new FormControl(this.categorymodel.category_Name_Urdu),\n    status: new FormControl(true),\n    category_Image: new FormControl(\"\"),\n\n   });\n   AddCategory(){\n    debugger;\n   this.productservice.Addcateogry(this.CategoryForm.value).subscribe(next => {\n  \n    this.modalService.dismissAll();\n     this.CategoryForm.reset();\n     this.Getcategorey();\n     this.alertify.success('Category Updated seccussfully');\n    \n   }, error => {\n    this.alertify.error('already exists');\n     console.log(error);\n   });\n    console.log(this.CategoryForm.value)\n  }\n  UpdateCategory(){\n    debugger;\n   this.productservice.UpdateCategory(this.CategoryForm.value).subscribe(next => {\n  \n    this.modalService.dismissAll();\n     this.CategoryForm.reset();\n     this.Getcategorey();\n     this.alertify.success('Category Updated seccussfully');\n    \n   }, error => {\n    this.modalService.dismissAll();\n    this.CategoryForm.reset();\n    this.alertify.success('Category Updated seccussfully');\n     console.log(error);\n   });\n    console.log(this.CategoryForm.value)\n  }\n\n  Getcategorey(){\n    this.SpinnerService.show();\n    this.productservice.GetCategorey().subscribe((next:any) => {\n      this.CategoriesList=[];\n      this.CategoriesList=next.resp;\n      \n      console.log(this.CategoriesList)\n    }, error => {\n      console.log(error);\n    });\n    this.SpinnerService.hide();\n  }\n  Sort(key){\n    this.key=key;\n    this.reverse=!this.reverse;\n  }\n  openLg(content,id:number) {\n    \n    this.categotyid=id;\n \n    this.modalService.open(content, { size: 'lg' });\n  }\n\n UpdateView(content,id:number) {\n  var data=this.CategoriesList.find(res=>res.category_Id==id);\n  debugger;\n  this.Singlecategory=data;\n  this.CategoryForm.setValue({\n    category_Id:this.Singlecategory.category_Id,\n    category_Name_Urdu:this.Singlecategory.category_Name_Urdu,\n    category_Name:this.Singlecategory.category_Name,\n    category_Image:this.Singlecategory.category_Image,\n    status:this.Singlecategory.status\n  });\n\n \n    this.modalService.open(content, { size: 'lg' });\n  }\n  uploadFile(event) {\n\n    const file = (event.target as HTMLInputElement).files[0];\n    this.form.patchValue({\n      avatar: file\n    });\n    this.form.get('avatar').updateValueAndValidity();\n   \n  }\n  \n  SubmitImage() {\n    debugger;\n    if(this.form.value.avatar!=null){\n      var apipath=\"UploadImageCategory\";\n      \n      this.uploadfileservice.uploadbrandimage(\n     \n        this.form.value.avatar,apipath,\n        this.categotyid\n      ).subscribe((event: HttpEvent<any>) => {\n        switch (event.type) {\n          case HttpEventType.Sent:\n            console.log('Request has been made!');\n            break;\n          case HttpEventType.ResponseHeader:\n            console.log('Response header has been received!');\n\n            this.form.reset();\n    this.modalService.dismissAll();\n            break;\n          case HttpEventType.UploadProgress:\n            this.progress = Math.round(event.loaded / event.total * 100);\n            console.log(`Uploaded! ${this.progress}%`);\n            break;\n          case HttpEventType.Response:\n\n            console.log('User successfully created!', event.body);\n            setTimeout(() => {\n              this.progress = 0;\n            }, 1500);\n    \n        }\n        this.Getcategorey();\n      })\n    }\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2NhdGVnb3JpZXMvY2F0ZWdvcmllcy5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-categories',\n  templateUrl: './categories.component.html',\n  styleUrls: ['./categories.component.scss']\n})\nexport class CategoriesComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CategoriesComponent } from './categories.component';\nimport { AllcategoriesComponent } from './Allcategories/Allcategories.component';\nimport { categoriesRoutingmodule } from './categoryrouting.routing';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { NgxDropzoneModule } from 'ngx-dropzone';\nimport { SharedModule } from '../../../../src/app/shared/shared.module';\nimport { Ng2OrderModule } from 'ng2-order-pipe';\nimport { Ng2SearchPipeModule } from 'ng2-search-filter';\nimport { NgxPaginationModule } from 'ngx-pagination';\nimport { NgxSpinnerModule, NgxSpinnerService } from 'ngx-spinner';\nimport { Category } from '../../../../src/app/Models/Category';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    SharedModule,\n    FormsModule,\n    categoriesRoutingmodule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    NgxDropzoneModule,\n    Ng2OrderModule,\n    NgxSpinnerModule,\n    Ng2SearchPipeModule,\n    NgxPaginationModule\n  ],\n  declarations: [CategoriesComponent,AllcategoriesComponent],\n  providers: [\n    NgxSpinnerService,Category\n    ]\n})\nexport class CategoriesModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AllcategoriesComponent } from './Allcategories/Allcategories.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AllcategoriesComponent,\n    data: {\n      breadcrumb: ' Categories',\n      icon: 'icofont-table bg-c-blue',\n      breadcrumb_caption: 'All categories',\n      status: true\n    }\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class categoriesRoutingmodule { }\n"],"sourceRoot":"webpack:///"}