{"version":3,"sources":["src/app/pages/Brands/AllBrands/AllBrands.component.html","src/app/pages/Brands/Brands.component.html","src/app/Models/Brand.ts","src/app/pages/Brands/AllBrands/AllBrands.component.scss","src/app/pages/Brands/AllBrands/AllBrands.component.ts","src/app/pages/Brands/BrandRouting.routing.ts","src/app/pages/Brands/Brands.component.scss","src/app/pages/Brands/Brands.component.ts","src/app/pages/Brands/Brands.module.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"\\n\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-sm-12\\\">\\n<!-- Hover table card start -->\\n<app-card [title]=\\\"'Brands'\\\" [classHeader]=\\\"true\\\" [blockClass]=\\\"'table-border-style'\\\">\\n  <span class=\\\"code-header\\\">All Brands Detail</span>\\n\\n  <div class=\\\"row\\\" *ngIf=\\\"!showform\\\">\\n    <div class=\\\"col-sm-10\\\" >\\n     <button class=\\\"btn btn-success pull-right\\\" (click)=\\\"showinput()\\\"> Add Brand</button>\\n    </div>\\n    \\n  </div>\\n  <div class=\\\"row\\\" *ngIf=\\\"showform\\\">\\n    <div class=\\\"col-sm-1\\\">\\n\\n    </div>\\n    <div class=\\\"col-sm-10\\\">\\n      <div class=\\\"row\\\">\\n        <form [formGroup]=\\\"brandform\\\">\\n          <div class=\\\"col-sm-12\\\">\\n            <!-- <label for=\\\"validationCustom01\\\">Brand Name(English)</label> -->\\n            <input type=\\\"text\\\" placeholder=\\\"Brand Name(English)\\\"  formControlName=\\\"brandNameEng\\\"  class=\\\"form-control\\\" >\\n      </div>\\n      <br>\\n      <div class=\\\"col-sm-12\\\">\\n        <!-- <label for=\\\"validationCustom01\\\">Brand Name(Urdu)</label> -->\\n        <input type=\\\"text\\\" placeholder=\\\"Brand Name(Urdu)\\\" formControlName=\\\"brandNameUrdu\\\"   class=\\\"form-control\\\">\\n     </div>\\n     <br>\\n     <div class=\\\"col-sm-12\\\">\\n     <button class=\\\"btn btn-info\\\" (click)=\\\"AddBrand()\\\" type=\\\"submit\\\">Save</button>\\n     </div>\\n    </form>\\n        \\n      </div>\\n\\n    </div>\\n    <div class=\\\"col-sm-1\\\">\\n\\n    </div>\\n    \\n  </div>\\n  <div class=\\\"table-responsive\\\" style=\\\"padding: 2%;\\\">\\n    <table class=\\\"table table-hover\\\">\\n      <thead>\\n      <tr>\\n        <th (click)=\\\"Sort('id')\\\">#<i class=\\\"fa fa-sort\\\"></i></th>\\n        <th (click)=\\\"Sort('brandNameEng')\\\">Brand Name<i class=\\\"fa fa-sort\\\"></i></th>\\n        <th (click)=\\\"Sort('brandNameUrdu')\\\">Catehory Name(Urdu)<i class=\\\"fa fa-sort\\\"></i></th>\\n        <th (click)=\\\"Sort('brandImagePath')\\\">Image<i class=\\\"fa fa-sort\\\"></i></th>\\n        <th (click)=\\\"Sort('description')\\\">Actions<i class=\\\"fa fa-sort\\\"></i></th>\\n        <!-- <th>Image</th> -->\\n      </tr>\\n      </thead>\\n      <tbody>\\n      <tr *ngFor=\\\"let obj of brandsList |orderBy:key :reverse | paginate:{itemsPerPage:10,currentPage:p}; let i=index;\\\" >\\n        <td style=\\\"width: 2px;\\\">{{i+1}}</td>\\n        <td>{{obj.brandNameEng}}</td>\\n        <td>{{obj.brandNameUrdu}}</td>\\n        <td *ngIf=\\\"obj.brandImagePath!=noimage;else nImage\\\"><img [src]=\\\"ImagebaseUrl+obj.brandImagePath\\\" style=\\\"height: 40px;\\\" /></td>\\n        <ng-template #nImage>\\n          <td >No Image</td>\\n        </ng-template>\\n       <td>  <div class=\\\"row\\\">\\n\\n        <div style=\\\"padding: 4px;\\\">\\n      <i class=\\\"fa fa-upload\\\" aria-hidden=\\\"true\\\" style=\\\"font-size:18px;color:rgb(255, 0, 0)\\\" title=\\\"Upload Image\\\"  (click)=\\\"openLg(uploadfilecontent,obj.brandId)\\\"></i> \\n      </div>\\n      <div style=\\\"padding: 4px;\\\">\\n        <i class=\\\"fa fa-edit\\\" style=\\\"font-size:18px;color:rgb(0, 195, 255)\\\"(click)=\\\"UpdateView(Update,obj.brandId)\\\"></i>\\n      </div>\\n    </div></td>\\n      </tr>\\n     \\n      </tbody>\\n    \\n    </table>\\n    <div class=\\\"row\\\">\\n      <div style=\\\"right: 10%;\\\">\\n        <pagination-controls (pageChange)=\\\"p=$event\\\"></pagination-controls>\\n    </div>                \\n  </div>\\n  </div>\\n</app-card>\\n<!-- Hover table card end -->\\n      </div>\\n    </div>\\n\\n    <ng-template #uploadfilecontent let-modal>\\n      \\n      <div class=\\\"modal-header\\\">\\n        <h4 class=\\\"modal-title\\\">Upload file</h4>\\n      \\n      </div>\\n      <div class=\\\"modal-body\\\">\\n           \\n        <div class=\\\"container\\\">\\n          <form  [formGroup]=\\\"form\\\" (ngSubmit)=\\\"SubmitImage()\\\">\\n      \\n            <!-- Progress Bar -->\\n            <div class=\\\"progress form-group\\\" *ngIf=\\\"progress > 0\\\">\\n                <div class=\\\"progress-bar progress-bar-striped bg-success\\\" role=\\\"progressbar\\\" [style.width.%]=\\\"progress\\\">\\n                </div>\\n            </div>\\n    \\n            <div class=\\\"form-group\\\">\\n                <input type=\\\"file\\\" (change)=\\\"uploadFile($event)\\\" required>\\n            </div>\\n    \\n          \\n    \\n            <div class=\\\"form-group\\\">\\n                <button class=\\\"btn btn-danger btn-block btn-lg\\\" [disabled]=\\\"form.get('avatar')==null\\\">Upload</button>\\n            </div>\\n        </form>\\n      </div>\\n      </div>\\n      <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-light\\\" (click)=\\\"modal.close('Close click')\\\">Close</button>\\n      </div>\\n    </ng-template>\\n    <ngx-spinner bdColor=\\\"rgba(51, 51, 51, 0.8)\\\" size=\\\"default\\\" type=\\\"ball-spin-clockwise\\\">  \\n      <p style=\\\"color: white\\\">Please Wait. </p>  \\n      </ngx-spinner> \\n      <ng-template #Update let-modal>\\n        <div class=\\\"modal-header\\\">\\n          <h4 class=\\\"modal-title\\\">Update  Brand</h4>\\n        \\n        </div>\\n        <div class=\\\"modal-body\\\">\\n          <form class=\\\"needs-validation\\\" novalidate [formGroup]=\\\"brandform\\\">\\n            <div class=\\\"form-row\\\">\\n              <div class=\\\"col-md-5 mb-3\\\">\\n                <label for=\\\"validationCustom01\\\">Brand Name(English)</label>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"validationCustom01\\\" placeholder=\\\"Brand Name(English)\\\" formControlName=\\\"brandNameEng\\\"  required>\\n                \\n              </div>\\n              <div class=\\\"col-md-5 mb-3\\\">\\n                <label for=\\\"validationCustom01\\\">Brand Name(Urdu)</label>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"validationCustom01\\\" placeholder=\\\"Brand Name(Urdu)\\\" formControlName=\\\"brandNameUrdu\\\"  required>\\n                \\n              </div>\\n             \\n            </div>\\n\\n            \\n           \\n             \\n          \\n      \\n            <button style=\\\"float: right;\\\" class=\\\"btn btn-primary\\\"(click)=\\\"UpdateBrand()\\\" type=\\\"submit\\\">Submit</button>\\n          </form>\\n      \\n      \\n        \\n        </div>\\n        <div class=\\\"modal-footer\\\">\\n          <button type=\\\"button\\\" class=\\\"btn btn-light\\\" (click)=\\\"modal.close('Close click')\\\">Close</button>\\n        </div>\\n      </ng-template>\\n\"","export default \"<p>\\n  Brands works!\\n</p>\\n\"","export class Brand {\n    brandId:number=0;\nbrandImagePath:\"\";\nbrandNameEng:string\nbrandNameUrdu:string\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL0JyYW5kcy9BbGxCcmFuZHMvQWxsQnJhbmRzLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms';\nimport { FileuploadService } from '../../../../../src/app/_service/fileupload.service';\nimport { BrandService } from '../../../../../src/app/_service/brand.service';\nimport { HttpEvent, HttpEventType } from '@angular/common/http';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { Brand } from '../../../../../src/app/Models/Brand';\nimport { Router } from '@angular/router';\nimport { environment } from './../../../../../src/environments/environment.prod';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { AlertifyService } from '../../../../../src/app/_service/alertify.service';\nimport { ProductService } from '../../../../../src/app/_service/product.service';\n\n@Component({\n  selector: 'app-AllBrands',\n  templateUrl: './AllBrands.component.html',\n  styleUrls: ['./AllBrands.component.scss']\n})\nexport class AllBrandsComponent implements OnInit {\n  form: FormGroup;\n  ImagebaseUrl = environment.Imagebaseurl + 'BrandImages/';\n brandsList:any;\n key:string='rowid';\n reverse:boolean=false;\n p:number=1;\n showform:boolean=false;\n progress: number = 0;\n brandId:number;\n singlebrand:Brand;\n image:any ;\n noimage=\"\";\n fileData: File = null;\n  constructor(private productservice:ProductService,private alertify: AlertifyService,private SpinnerService: NgxSpinnerService,private router: Router,private brandservice:BrandService,private modalService: NgbModal,private uploadfileservice:FileuploadService,private fb:FormBuilder,private brandmodal:Brand) { }\n  brandform:FormGroup=new FormGroup({\n    brandImagePath: new FormControl(this.brandmodal.brandImagePath),\n    brandId: new FormControl(this.brandmodal.brandId),\n    brandNameEng: new FormControl(this.brandmodal.brandNameEng),\n    brandNameUrdu: new FormControl(this.brandmodal.brandNameUrdu),\n  \n   });\n   showinput()\n   {\n    this.showform=true;\n   }\n  ngOnInit() {\n\n    this.GetBrands();\n    this.form = this.fb.group({\n    \n      avatar: [null]\n    })\n   \n  }\n  UpdateView(content,id:number) {\n    var data=this.brandsList.find(res=>res.brandId==id);\n    debugger;\n    this.singlebrand=data;\n    this.brandform.setValue({\n      brandImagePath:this.singlebrand.brandImagePath,\n      brandId:this.singlebrand.brandId,\n      brandNameEng:this.singlebrand.brandNameEng,\n      brandNameUrdu:this.singlebrand.brandNameUrdu,\n    });\n  \n   \n      this.modalService.open(content, { size: 'lg' });\n    }\n    UpdateBrand(){\n      debugger;\n     this.productservice.UpdateBrand(this.brandform.value).subscribe(next => {\n    \n      this.modalService.dismissAll();\n       this.brandform.reset();\n       this.GetBrands();\n       this.alertify.success('Brand Updated seccussfully');\n      \n     }, error => {\n     \n       console.log(error);\n     });\n      console.log(this.brandform.value)\n    }\n    AddBrand(){\n      debugger;\n     this.brandservice.AddBrand(this.brandform.value).subscribe(next => {\n    \n      this.modalService.dismissAll();\n       this.brandform.reset();\n       this.showform=false;\n       this.GetBrands();\n       this.alertify.success('Brand Add seccussfully');\n      \n     }, error => {\n      this.alertify.error('already exists');\n       console.log(error);\n     });\n    }\n  \n  GetBrands(){\n    this.SpinnerService.show();\n    this.brandservice.GetBrands().subscribe((next:any) => {\n      this.brandsList=[];\n      this.brandsList=next.resp;\n      console.log(this.brandsList);\n      this.SpinnerService.hide();\n      \n    }, error => {\n      console.log(error);\n    });\n  }\n  Sort(key){\n    this.key=key;\n    this.reverse=!this.reverse;\n  }\n  openLg(content,id:number) {\n    debugger;\n    this.brandId=id;\n \n    this.modalService.open(content, { size: 'lg' });\n  }\n\n  uploadFile(event) {\n\n    const file = (event.target as HTMLInputElement).files[0];\n    this.form.patchValue({\n      avatar: file\n    });\n    this.form.get('avatar').updateValueAndValidity();\n   \n  }\n  \n  SubmitImage() {\n    this.SpinnerService.show();\n    if(this.form.value.avatar!=null){\n      var apipath=\"UploadImageBrand\";\n      \n      this.uploadfileservice.uploadbrandimage(\n     \n        this.form.value.avatar,apipath,\n        this.brandId\n      ).subscribe((event: HttpEvent<any>) => {\n        switch (event.type) {\n          case HttpEventType.Sent:\n            console.log('Request has been made!');\n            break;\n          case HttpEventType.ResponseHeader:\n            console.log('Response header has been received!');\n            this.form.reset();\n    this.modalService.dismissAll();\n            break;\n          case HttpEventType.UploadProgress:\n            this.progress = Math.round(event.loaded / event.total * 100);\n            console.log(`Uploaded! ${this.progress}%`);\n            break;\n          case HttpEventType.Response:\n            console.log('User successfully created!', event.body);\n            setTimeout(() => {\n              this.progress = 0;\n            }, 1500);\n    \n        }\n        this.GetBrands();\n      })\n    }\n    this.SpinnerService.hide();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AllBrandsComponent } from './AllBrands/AllBrands.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AllBrandsComponent,\n    data: {\n      breadcrumb: 'Brands',\n      icon: 'icofont-table bg-c-blue',\n      breadcrumb_caption: 'All Brands Detail',\n      status: true\n    }\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class BrandRoutingModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL0JyYW5kcy9CcmFuZHMuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-Brands',\n  templateUrl: './Brands.component.html',\n  styleUrls: ['./Brands.component.scss']\n})\nexport class BrandsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BrandsComponent } from './Brands.component';\nimport { BrandRoutingModule } from './BrandRouting.routing';\nimport { AllBrandsComponent } from './AllBrands/AllBrands.component';\nimport { SharedModule } from '../../../../src/app/shared/shared.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { NgxDropzoneModule } from 'ngx-dropzone';\nimport { Ng2OrderModule } from 'ng2-order-pipe';\nimport { Ng2SearchPipeModule } from 'ng2-search-filter';\nimport { NgxPaginationModule } from 'ngx-pagination';\nimport { Brand } from '../../../../src/app/Models/Brand';\nimport { NgxSpinnerModule, NgxSpinnerService } from 'ngx-spinner';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    BrandRoutingModule,\n    SharedModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    NgxDropzoneModule,\n    Ng2OrderModule,\n    NgxSpinnerModule,\n    Ng2SearchPipeModule,\n    NgxPaginationModule\n  ],\n  declarations: [BrandsComponent,AllBrandsComponent],\n  providers: [\n    Brand,NgxSpinnerService\n    ]\n})\nexport class BrandsModule { }\n"],"sourceRoot":"webpack:///","file":"pages-Brands-Brands-module-es5.js"}