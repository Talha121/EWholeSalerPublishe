{"version":3,"sources":["./src/app/pages/Products/Add-Product/Add-Product.component.html","./src/app/pages/Products/AllInventory/AllInventory.component.html","./src/app/pages/Products/AllProduct/AllProduct.component.html","./src/app/pages/Products/Products.component.html","./src/app/Models/Product.Model.ts","./src/app/Models/Supplier.model.ts","./src/app/Models/inventoryDto.ts","./src/app/_service/supplier.service.ts","./src/app/pages/Products/Add-Product/Add-Product.component.scss","./src/app/pages/Products/Add-Product/Add-Product.component.ts","./src/app/pages/Products/AllInventory/AllInventory.component.scss","./src/app/pages/Products/AllInventory/AllInventory.component.ts","./src/app/pages/Products/AllProduct/AllProduct.component.scss","./src/app/pages/Products/AllProduct/AllProduct.component.ts","./src/app/pages/Products/Products-bootstrap-routing.module.ts","./src/app/pages/Products/Products.component.scss","./src/app/pages/Products/Products.component.ts","./src/app/pages/Products/Products.module.ts"],"names":[],"mappings":"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","file":"pages-Products-Products-module-es2015.js","sourcesContent":["export default \"<div class=\\\"row\\\">\\n  <div class=\\\"col-sm-11\\\" >\\n    <button class=\\\"btn btn-outline-primary mb-2 mr-2\\\" style=\\\"float: right;\\\" (click)=\\\"openLg(uploadfilecontent)\\\">Upload Excel </button>\\n  </div>\\n</div>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-sm-12\\\">\\n    <!-- Basic table card start -->\\n    <app-card [title]=\\\"'Suppliers Information'\\\" [classHeader]=\\\"true\\\" [blockClass]=\\\"'table-border-style'\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-sm-11\\\" >\\n          <button class=\\\"btn btn-outline-primary mb-2 mr-2\\\" style=\\\"float: right;\\\" (click)=\\\"openVerticallyCentered(content)\\\">Add Supplier</button>\\n        </div>\\n      </div>\\n      <br>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-md-1\\\">\\n\\n  </div>\\n      <div class=\\\"col-sm-5\\\">\\n        <div>\\n           <label>Select Supplier</label>\\n          <select class=\\\"custom-select custom-select-lg sm-1\\\"#mySelect\\n          (change)='onOptionsSelected(mySelect.value)'>\\n            <option selected>Open this select menu</option>\\n            <option *ngFor=\\\"let option of supplierlist\\\" [value]=\\\"option.supplier_Id\\\">\\n              {{option.supplier_Name}}\\n            </option>\\n\\n          </select>\\n\\n        </div>\\n      </div>\\n      <div class=\\\"col-sm-1\\\">\\n\\n      </div>\\n      <div class=\\\"col-sm-4\\\" style=\\\"float: right;\\\"*ngIf=\\\"selectedsupplier!=null\\\">\\n\\n\\n        <div class=\\\"col-sm-12 \\\"  >\\n          <!-- Basic table card start -->\\n          <app-card [title]=\\\"'Suppliers Information'\\\" [classHeader]=\\\"true\\\" [blockClass]=\\\"'table-border-style'\\\">\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-md-1\\\">\\n\\n              </div>\\n              <div class=\\\"col-md-5\\\" >\\n                    <h5><b> Supplier Name</b></h5>\\n              </div>\\n              <div class=\\\"col-md-5\\\">\\n                    <h5>{{selectedsupplier?.supplier_Name}}</h5>\\n              </div>\\n\\n            </div>\\n            <br>\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-md-1\\\">\\n\\n              </div>\\n              <div class=\\\"col-md-5\\\">\\n                    <h5><b>Contact No</b></h5>\\n              </div>\\n              <div class=\\\"col-md-5\\\">\\n                    <h5>{{selectedsupplier?.supplier_ContactNo}}</h5>\\n              </div>\\n\\n            </div>\\n            <br>\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-md-1\\\">\\n\\n              </div>\\n              <div class=\\\"col-md-5\\\">\\n                    <h5><b>Address</b></h5>\\n              </div>\\n              <div class=\\\"col-md-5\\\">\\n                    <h5>{{selectedsupplier?.supplier_Address}}</h5>\\n              </div>\\n\\n            </div>\\n            <br>\\n            <br>\\n          </app-card>\\n        </div>\\n\\n      </div>\\n      <div class=\\\"col-sm-1\\\">\\n\\n      </div>\\n      </div>\\n      <br>\\n      <br>\\n    </app-card>\\n    <!-- Basic table card end -->\\n\\n    <app-card [title]=\\\"'Product Category'\\\" [classHeader]=\\\"true\\\" [blockClass]=\\\"'table-border-style'\\\" *ngIf=\\\"showcategoreysection\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-sm-11\\\" >\\n          <button class=\\\"btn btn-outline-primary mb-2 mr-2\\\" style=\\\"float: right;\\\" (click)=\\\"openVerticallyCentered(categoreycontent)\\\">Add Categorey</button>\\n        </div>\\n      </div>\\n      <br>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-md-1\\\">\\n\\n  </div>\\n      <div class=\\\"col-sm-5\\\">\\n        <div>\\n           <label>Select categorey</label>\\n          <select class=\\\"custom-select custom-select-lg sm-1\\\"#categoreySelect\\n          (change)='onOptionsCategoreySelected(categoreySelect.value)'>\\n            <option selected>Open this select menu</option>\\n            <option *ngFor=\\\"let option of categoreylist\\\" [value]=\\\"option.category_Id\\\">\\n              {{option.category_Name}}\\n            </option>\\n\\n          </select>\\n\\n        </div>\\n      </div>\\n   \\n      \\n  </div>\\n  <br>\\n  <div class=\\\"row\\\" *ngIf=\\\"singlecategorey!=null\\\">\\n    <div class=\\\"col-sm-1\\\">\\n\\n    </div>\\n    <div class=\\\"col-sm-11\\\">\\n      <app-card [title]=\\\"'Products Information'\\\" [classHeader]=\\\"true\\\" [blockClass]=\\\"'table-border-style'\\\">\\n        <form class=\\\"needs-validation\\\" novalidate [formGroup]=\\\"productinfos\\\" >\\n\\n          <div class=\\\"form-row\\\" formArrayName=\\\"products\\\">\\n               \\n         \\n              <div class=\\\"col-sm-11\\\" >\\n                <div class=\\\"col text-center \\\" > \\n                  <button type=\\\"button\\\" style=\\\"    margin-bottom: 2%;\\\"  (click)=\\\"addNewRow()\\\" class=\\\"btn btn-primary pull-right\\\"><i class=\\\"fa fa-plus-circle\\\" aria-hidden=\\\"true\\\"></i></button>\\n                  </div>\\n                <br>\\n          \\n\\n              </div>\\n         \\n                <div class=\\\"col-sm-11\\\" >\\n               \\n                  <div class=\\\"row\\\">\\n                   \\n                    <div class=\\\"col-sm-2 mb-3\\\" style=\\\"margin-left:2%;\\\">\\n                      <label for=\\\"validationCustom03\\\" >Barcode</label>\\n                    </div>\\n                     <div class=\\\"col-sm-2 mb-3\\\" style=\\\"margin-left:2%;\\\">\\n                      <label for=\\\"validationCustom03\\\">Name</label>\\n                    </div>\\n                    <div class=\\\"col-sm-2 mb-3\\\" style=\\\"margin-left:2%;\\\">\\n                      <label for=\\\"validationCustom03\\\">Brand</label>\\n                    </div>\\n                    <div class=\\\"col-sm-1 mb-3\\\" style=\\\"margin-left:1%;\\\">\\n                      <label for=\\\"validationCustom03\\\" >Qty</label>\\n                    </div>\\n                    <div class=\\\"col-sm-1 mb-3\\\"style=\\\"margin-left:1%;\\\" >\\n                      <label for=\\\"validationCustom03\\\">Unit Price</label>\\n                    </div>\\n                    <div class=\\\"col-sm-1 mb-3\\\" style=\\\"margin-left:1%;\\\">\\n                      <label for=\\\"validationCustom03\\\">Sale Price</label>\\n                    </div>\\n                    <div class=\\\"col-sm-1 mb-3\\\">\\n                      <label for=\\\"validationCustom03\\\">Detail</label>\\n                    </div>\\n                  \\n                  </div>\\n                \\n                  <div style=\\\"margin-top: -25px;\\\">\\n                    <hr>\\n                   </div>\\n  \\n                </div>\\n        \\n\\n            \\n            \\n          \\n     \\n            <div class=\\\"row\\\" *ngFor=\\\"let itemrow of productinfos.controls.products['controls']; let i=index\\\"  [formGroupName]=\\\"i\\\">\\n         \\n              <input type=\\\"hidden\\\" id=\\\"{{i}}\\\"class=\\\"form-control\\\" placeholder=\\\"Barcode\\\" formControlName=\\\"ProductId\\\"  required>\\n            \\n            \\n              <div class=\\\"col-sm-2 mb-3\\\" style=\\\"margin-left:2%;\\\">\\n            \\n                <input type=\\\"text\\\" id=\\\"Barcode{{i}}\\\" value=\\\"\\\" #barcodevalue class=\\\"form-control\\\" placeholder=\\\"Barcode\\\" formControlName=\\\"Barcode\\\" (change)=\\\"onBarcodechange(barcodevalue.value,i)\\\" required>\\n                \\n              </div>\\n              <div class=\\\"col-sm-2 mb-3\\\">\\n             \\n                <input type=\\\"text\\\" id=\\\"ProductName{{i}}\\\" #ProductName{{i}} class=\\\"form-control\\\"  placeholder=\\\"Product Name\\\"   formControlName=\\\"ProductName\\\"   required>\\n                \\n              </div>\\n              <div class=\\\"col-sm-2 mb-3\\\">\\n               \\n                <input type=\\\"text\\\" id=\\\"Brand_Name{{i}}\\\"class=\\\"form-control\\\"  placeholder=\\\"Brand Name\\\"   formControlName=\\\"Brand_Name\\\"   required>\\n                \\n              </div>\\n              <div class=\\\"col-sm-1 mb-3\\\">\\n            \\n                <div class=\\\"input-group\\\">\\n      \\n                  <input type=\\\"number\\\" id=\\\"Product_Qty{{i}}\\\"class=\\\"form-control\\\"  width=\\\"120px\\\" placeholder=\\\"Qty\\\"formControlName=\\\"Product_Qty\\\"  aria-describedby=\\\"inputGroupPrepend\\\" required>\\n                  \\n                </div>\\n              </div>\\n              <div class=\\\"col-sm-1 mb-3\\\">\\n             \\n                <div class=\\\"input-group\\\">\\n      \\n                  <input type=\\\"number\\\"id=\\\"Unit_Price{{i}}\\\" class=\\\"form-control\\\" placeholder=\\\"Unit Price\\\"formControlName=\\\"Unit_Price\\\"  aria-describedby=\\\"inputGroupPrepend\\\" required>\\n                  <!-- <input type=\\\"hidden\\\"id=\\\"Product_TotalPrice{{i}}\\\" class=\\\"form-control\\\" placeholder=\\\"Total Price\\\" formControlName=\\\"Product_TotalPrice\\\"  required>\\n               -->\\n                </div>\\n              </div>\\n              <!-- <div class=\\\"col-md-1 mb-3\\\">\\n                <label for=\\\"validationCustom02\\\">Total Price</label>\\n                <input type=\\\"hidden\\\"id=\\\"Product_TotalPrice{{i}}\\\" class=\\\"form-control\\\" placeholder=\\\"Total Price\\\" formControlName=\\\"Product_TotalPrice\\\"  required>\\n              \\n              </div> -->\\n              <div class=\\\"col-sm-1 mb-3\\\">\\n            \\n                <input type=\\\"number\\\"id=\\\"sellingprice{{i}}\\\" class=\\\"form-control\\\"    placeholder=\\\"Sale Price\\\" formControlName=\\\"ProductInventory_SellingPrice\\\"  required>\\n              \\n              </div>\\n              <div class=\\\"col-sm-1 mb-3\\\">\\n              \\n                <input type=\\\"text\\\"id=\\\"Description{{i}}\\\" class=\\\"form-control\\\"  formControlName=\\\"Description\\\"  placeholder=\\\"Detail\\\" required>\\n               \\n              </div>\\n              <div class=\\\"col-sm-1 mb-3\\\">\\n                <i class=\\\"fa fa-trash\\\" aria-hidden=\\\"true\\\" *ngIf=\\\"hidden\\\"  (click)=\\\"removeQuantity(i)\\\" style=\\\"color: red;\\\"></i> \\n              </div>\\n             \\n            </div>\\n          \\n          </div>\\n          <div class=\\\"row\\\">\\n             <div class=\\\"col-sm-11\\\">\\n              <button style=\\\"float: right;\\\" class=\\\"btn btn-primary\\\"(click)=\\\"saveproduct()\\\" type=\\\"submit\\\">Submit</button>\\n             </div>\\n          </div>\\n         \\n    <br>\\n\\n        </form>\\n    \\n      </app-card>\\n    </div>\\n    <div class=\\\"col-sm-1\\\">\\n\\n    </div>\\n  </div>\\n      <br>\\n      <br>\\n    </app-card>\\n    <!-- Basic table card end -->\\n  </div>\\n</div>\\n<ng-template #content let-modal>\\n  <div class=\\\"modal-header\\\">\\n    <h4 class=\\\"modal-title\\\">Supplier Registration Form</h4>\\n \\n  </div>\\n  <div class=\\\"modal-body\\\">\\n    <form class=\\\"needs-validation\\\" novalidate [formGroup]=\\\"supplier\\\">\\n      <div class=\\\"form-row\\\">\\n        <div class=\\\"col-md-7 mb-3\\\">\\n          <label for=\\\"validationCustom01\\\">Name</label>\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"validationCustom01\\\" placeholder=\\\"Full name\\\" formControlName=\\\"supplier_Name\\\"  required>\\n          \\n        </div>\\n\\n        <div class=\\\"col-md-5 mb-3\\\">\\n          <label for=\\\"validationCustom02\\\">Company name</label>\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"validationCustom02\\\" placeholder=\\\"Company name\\\" formControlName=\\\"supplier_CompanyName\\\"  required>\\n         \\n        </div>\\n       \\n      </div>\\n      <div class=\\\"form-row\\\">\\n        <div class=\\\"col-md-5 mb-3\\\">\\n          <label for=\\\"validationCustomUsername\\\">Contact</label>\\n          <div class=\\\"input-group\\\">\\n\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"validationCustomUsername\\\" placeholder=\\\"03xx-xxxxxxx\\\"formControlName=\\\"supplier_ContactNo\\\"  aria-describedby=\\\"inputGroupPrepend\\\" required>\\n            \\n          </div>\\n        </div>\\n        <div class=\\\"col-md-7 mb-3\\\">\\n          <label  for=\\\"validationCustom05\\\">Email</label>\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"validationCustom05\\\" formControlName=\\\"supplier_Email\\\"  placeholder=\\\"Email\\\" required>\\n          \\n        </div>\\n      </div>\\n      <div class=\\\"form-row\\\">\\n       \\n        <div class=\\\"col-md-8 mb-3\\\">\\n          <label for=\\\"validationCustom04\\\">Address</label>\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"validationCustom04\\\"formControlName=\\\"supplier_Address\\\"  placeholder=\\\"Address\\\" required>\\n         \\n        </div>\\n        <div class=\\\"col-md-4 mb-3\\\">\\n          <label for=\\\"validationCustom03\\\">City</label>\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"validationCustom03\\\" placeholder=\\\"City\\\" formControlName=\\\"supplier_CityName\\\"  required>\\n         \\n        </div>\\n      </div>\\n     \\n       \\n    \\n\\n      <button style=\\\"float: right;\\\" class=\\\"btn btn-primary\\\"(click)=\\\"savesupplier()\\\" type=\\\"submit\\\">Submit</button>\\n    </form>\\n\\n    <script>\\n    // Example starter JavaScript for disabling form submissions if there are invalid fields\\n    (function() {\\n      'use strict';\\n      window.addEventListener('load', function() {\\n        // Fetch all the forms we want to apply custom Bootstrap validation styles to\\n        var forms = document.getElementsByClassName('needs-validation');\\n        // Loop over them and prevent submission\\n        var validation = Array.prototype.filter.call(forms, function(form) {\\n          form.addEventListener('submit', function(event) {\\n            if (form.checkValidity() === false) {\\n              event.preventDefault();\\n              event.stopPropagation();\\n            }\\n            form.classList.add('was-validated');\\n          }, false);\\n        });\\n      }, false);\\n    })();\\n    </script>\\n  </div>\\n  <div class=\\\"modal-footer\\\">\\n    <button type=\\\"button\\\" class=\\\"btn btn-light\\\" (click)=\\\"modal.close('Close click')\\\">Close</button>\\n  </div>\\n</ng-template>\\n<ng-template #categoreycontent let-modal>\\n  <div class=\\\"modal-header\\\">\\n    <h4 class=\\\"modal-title\\\">Category Registration Form</h4>\\n  \\n  </div>\\n  <div class=\\\"modal-body\\\">\\n    <form class=\\\"needs-validation\\\" novalidate [formGroup]=\\\"categorey\\\">\\n      <div class=\\\"form-row\\\">\\n        <div class=\\\"col-md-8 mb-3\\\">\\n          <label for=\\\"validationCustom01\\\">New Categorey Name</label>\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"validationCustom01\\\" placeholder=\\\"Please Enter Category Name \\\"formControlName=\\\"category_Name\\\"  required>\\n         \\n        </div>\\n     \\n      </div>\\n  \\n\\n      <button style=\\\"float: right;\\\" class=\\\"btn btn-primary\\\"(click)=\\\"savecategorey()\\\" type=\\\"submit\\\">Submit</button>\\n    </form>\\n\\n    <script>\\n    // Example starter JavaScript for disabling form submissions if there are invalid fields\\n    (function() {\\n      'use strict';\\n      window.addEventListener('load', function() {\\n        // Fetch all the forms we want to apply custom Bootstrap validation styles to\\n        var forms = document.getElementsByClassName('needs-validation');\\n        // Loop over them and prevent submission\\n        var validation = Array.prototype.filter.call(forms, function(form) {\\n          form.addEventListener('submit', function(event) {\\n            if (form.checkValidity() === false) {\\n              event.preventDefault();\\n              event.stopPropagation();\\n            }\\n            form.classList.add('was-validated');\\n          }, false);\\n        });\\n      }, false);\\n    })();\\n    </script>\\n  </div>\\n  <div class=\\\"modal-footer\\\">\\n    <button type=\\\"button\\\" class=\\\"btn btn-light\\\" (click)=\\\"modal.close('Close click')\\\">Close</button>\\n  </div>\\n</ng-template>\\n<ng-template #uploadfilecontent let-modal>\\n  <div class=\\\"modal-header\\\">\\n    <h4 class=\\\"modal-title\\\">Upload file</h4>\\n  \\n  </div>\\n  <div class=\\\"modal-body\\\">\\n\\n    <div class=\\\"container\\\">\\n      <form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"submitUser()\\\">\\n  \\n          <!-- Progress Bar -->\\n          <div class=\\\"progress form-group\\\" *ngIf=\\\"progress > 0\\\">\\n              <div class=\\\"progress-bar progress-bar-striped bg-success\\\" role=\\\"progressbar\\\" [style.width.%]=\\\"progress\\\">\\n              </div>\\n          </div>\\n  \\n          <div class=\\\"form-group\\\">\\n              <input type=\\\"file\\\" (change)=\\\"uploadFile($event)\\\">\\n          </div>\\n  \\n        \\n  \\n          <div class=\\\"form-group\\\">\\n              <button class=\\\"btn btn-danger btn-block btn-lg\\\">Upload</button>\\n          </div>\\n      </form>\\n  </div>\\n  </div>\\n  <div class=\\\"modal-footer\\\">\\n    <button type=\\\"button\\\" class=\\\"btn btn-light\\\" (click)=\\\"modal.close('Close click')\\\">Close</button>\\n  </div>\\n</ng-template>\"","export default \"\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-sm-12\\\">\\n<!-- Hover table card start -->\\n<app-card [title]=\\\"'All Invertory'\\\" [classHeader]=\\\"true\\\" [blockClass]=\\\"'table-border-style'\\\">\\n  <span class=\\\"code-header\\\"></span>\\n\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-sm-12\\\" >\\n      <div class=\\\"col-sm-2\\\" style=\\\"float: right;padding-bottom: 8px;\\\">\\n        <select class=\\\"custom-select\\\"#mySelect\\n        (change)='onOptionsSelected(mySelect.value)' >\\n          <option selected value=\\\"0\\\">All</option>\\n         <option value=\\\"1\\\">Activated</option>\\n         <option value=\\\"2\\\">InActivated</option>\\n         \\n    \\n        </select>\\n        </div>\\n      <div class=\\\"col-sm-2\\\" style=\\\"float: right;padding-bottom: 8px;\\\">\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"Barcode\\\" (ngModelChange)=\\\"SearchProduct()\\\"placeholder=\\\"Enter Barcode to search\\\" >\\n           \\n         \\n     </div>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-sm-1\\\" >\\n   \\n    </div>\\n    <div class=\\\"col-sm-8\\\" *ngIf=\\\"showform\\\" >\\n      <form [formGroup]=\\\"inventoryform\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-sm-4\\\">\\n            <label>Barcode</label>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Scan Or search Barcode\\\"  formControlName=\\\"Barcode\\\" required>\\n           </div>\\n        \\n          <div class=\\\"col-sm-4\\\">\\n            <label>Qty</label>\\n           <input type=\\\"number\\\" class=\\\"form-control\\\" placeholder=\\\"Purchase_Qty\\\"  formControlName=\\\"ProductInventory_Qty\\\" required>\\n         </div>\\n        \\n      </div>\\n\\n      <div class=\\\"row\\\">\\n     \\n       <div class=\\\"col-sm-4\\\">\\n        <label>Purchase Price </label>\\n        <input type=\\\"number\\\" class=\\\"form-control\\\" placeholder=\\\"Purchase Price\\\"  formControlName=\\\"singleunitpurchaseprice\\\" required>\\n       </div>\\n       <div class=\\\"col-sm-4\\\">\\n        <label>Sale Price</label>\\n        <input type=\\\"number\\\" class=\\\"form-control\\\" placeholder=\\\"Sale Price\\\"  formControlName=\\\"psingleunit_SellingPrice\\\" required>\\n       </div>\\n      \\n       <div class=\\\"col-sm-8\\\">\\n         <br>\\n         <div style=\\\"float: right;\\\" >\\n          <button class=\\\"btn btn-success\\\"  (click)=\\\"saveinventory()\\\" >\\n            Save\\n               </button>\\n               <button class=\\\"btn btn-danger\\\"  (click)=\\\"oncancel()\\\" >\\n                Cancel\\n                   </button>\\n         </div>\\n      \\n       </div>\\n       <br>\\n     \\n        \\n      \\n    </div>\\n  \\n  \\n  \\n  \\n  </form>\\n    \\n    </div>\\n    <div class=\\\"col-sm-10\\\" *ngIf=\\\"!showform\\\" >\\n      <br>\\n      <button class=\\\"btn btn-success \\\" style=\\\"float: right;\\\" (click)=\\\"checkform()\\\" >\\n        Add New Inventory\\n           </button>\\n    </div>\\n\\n    <div class=\\\"col-sm-1\\\" >\\n  \\n    </div>\\n  </div>\\n  <div class=\\\"table-responsive\\\" style=\\\"padding: 2%;\\\">\\n    <table class=\\\"table table-hover\\\">\\n      <thead>\\n      <tr>\\n        <th (click)=\\\"Sort('id')\\\">#<i class=\\\"fa fa-sort\\\"></i></th>\\n        <th (click)=\\\"Sort('productName')\\\">Product Name<i class=\\\"fa fa-sort\\\"></i></th>\\n        <th (click)=\\\"Sort('barcode')\\\">Barcode<i class=\\\"fa fa-sort\\\"></i></th>\\n        <th (click)=\\\"Sort('categorey_Name')\\\">Categorey<i class=\\\"fa fa-sort\\\"></i></th>\\n        <th (click)=\\\"Sort('brand_Name')\\\">Brand<i class=\\\"fa fa-sort\\\"></i></th>\\n        <th (click)=\\\"Sort('purchasedQty')\\\">Purchase Qty<i class=\\\"fa fa-sort\\\"></i></th>\\n        <th (click)=\\\"Sort('totalsaleQty')\\\">Sold Qty<i class=\\\"fa fa-sort\\\"></i></th>\\n        <th (click)=\\\"Sort('productInventory_Qty')\\\">Remaining Qty<i class=\\\"fa fa-sort\\\"></i></th>\\n        <th (click)=\\\"Sort('purchaseDate')\\\">Purchase Date<i class=\\\"fa fa-sort\\\"></i></th>\\n\\n        <th (click)=\\\"Sort('productInventory_UnitPrice')\\\">Unit Price(Purchase)<i class=\\\"fa fa-sort\\\"></i></th>\\n        <th (click)=\\\"Sort('productInventory_SellingPrice')\\\">Selling Price<i class=\\\"fa fa-sort\\\"></i></th>\\n        <th (click)=\\\"Sort('product_TotalPrice')\\\">Total Price<i class=\\\"fa fa-sort\\\"></i></th>\\n        <th (click)=\\\"Sort('productInventory_Status')\\\">Status<i class=\\\"fa fa-sort\\\"></i></th>\\n        <th >Action</th>\\n        <!-- <th>Image</th> -->\\n      </tr>\\n      </thead>\\n      <tbody>\\n     \\n        <tr *ngFor=\\\"let products of Searchinvertorylist |orderBy:key :reverse | paginate:{itemsPerPage:10,currentPage:p}; let i=index;\\\" >\\n          <td style=\\\"width: 2px;\\\">{{i+1}}</td>\\n          <td>{{products.productName}}</td>\\n          <td>{{products.barcode}}</td>\\n          <td>{{products.category_Name}}</td>\\n          <td>{{products?.brandNameEng}}</td>\\n          <td>{{products.purchasedQty}}</td>\\n          <td>{{products.totalsaleQty}}</td>\\n          <td>{{products.productInventory_Qty}}</td>\\n          <td>{{products.purchaseDate |date:'medium'}}</td>\\n          <td>{{products.productInventory_UnitPrice}}</td>\\n          <td>{{products.productInventory_SellingPrice}}</td>\\n          <td>{{products.product_TotalPrice}}</td>\\n        \\n        <td *ngIf=\\\"products.productInventory_Status;else falsee \\\"><img style=\\\"height: 20px;\\\" src=\\\"assets/icon/check.png\\\"/></td>\\n        <ng-template #falsee>\\n          <td><img style=\\\"height: 20px;\\\" src=\\\"assets/icon/cancel.png\\\"/></td>\\n        </ng-template>\\n\\n          <td *ngIf=\\\"products.productInventory_Status;else deact \\\"><button (click)=\\\"changestatus(products.productInvertory_Id)\\\" class=\\\"btn btn-danger\\\">Deactive</button> </td>\\n          <ng-template #deact>\\n            <td><button (click)=\\\"changestatus(products.productInvertory_Id)\\\" class=\\\"btn btn-success\\\">Active</button></td>\\n          </ng-template>\\n        </tr>\\n      </tbody>\\n    \\n    </table>\\n    <div class=\\\"row\\\">\\n      <div style=\\\"right: 10%;\\\">\\n        <pagination-controls (pageChange)=\\\"p=$event\\\"></pagination-controls>\\n    </div>\\n  </div>\\n  </div>\\n</app-card>\\n<!-- Hover table card end -->\\n      </div>\\n    </div>\\n    <ngx-spinner bdColor=\\\"rgba(51, 51, 51, 0.8)\\\" size=\\\"default\\\" type=\\\"ball-spin-clockwise\\\">  \\n      <p style=\\\"color: white\\\">Please Wait. </p>  \\n      </ngx-spinner> \\n  \\n  \"","export default \"\\n\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-sm-12\\\">\\n<!-- Hover table card start -->\\n<app-card [title]=\\\"'All Products'\\\" [classHeader]=\\\"true\\\" [blockClass]=\\\"'table-border-style'\\\">\\n  \\n\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-sm-12\\\" >\\n      <div class=\\\"col-sm-2\\\" style=\\\"float: right;padding-bottom: 8px;\\\">\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"Barcode\\\" (ngModelChange)=\\\"SearchProduct()\\\"placeholder=\\\"Enter Barcode to search\\\" >\\n           \\n         \\n     </div>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-sm-1\\\" >\\n   \\n    </div>\\n    <div class=\\\"col-sm-10\\\" *ngIf=\\\"showform\\\" >\\n      <form [formGroup]=\\\"Productform\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-sm-4\\\">\\n            <label>Barcode</label>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Scan Or search Barcode\\\"  formControlName=\\\"barcode\\\">\\n           </div>\\n          <div class=\\\"col-sm-4\\\">\\n            <label>Product Name</label>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Product Name\\\"  formControlName=\\\"productName\\\">\\n          </div>\\n          <div class=\\\"col-sm-4\\\">\\n            <label>Product Name (Urdu)</label>\\n           <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Product Name (Urdu)\\\"  formControlName=\\\"productName_Urdu\\\">\\n         </div>\\n        \\n      </div>\\n      <div class=\\\"row\\\">\\n     \\n       <div class=\\\"col-sm-4\\\">\\n        <label>Description </label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Description\\\"  formControlName=\\\"description\\\" required>\\n       </div>\\n       <div class=\\\"col-sm-4\\\">\\n        <label>Description (Urdu)</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Description (Urdu)\\\"  formControlName=\\\"description_Urdu\\\" required>\\n       </div>\\n       <div class=\\\"col-sm-4\\\">\\n        <label>Categoty select</label>\\n        <select class=\\\"custom-select custom-select-lg sm-1\\\" formControlName=\\\"category_Id\\\" required\\n        >\\n          <option selected> select Category</option>\\n          <option *ngFor=\\\"let option of categoreylist\\\" [value]=\\\"option.category_Id\\\">\\n            {{option.category_Name}}\\n          </option>\\n\\n        </select>\\n       </div>\\n       <div class=\\\"col-sm-4\\\">\\n        <label>Brand Select</label>\\n        <select class=\\\"custom-select custom-select-lg sm-1\\\" formControlName=\\\"brandId\\\"\\n        >\\n          <option selected>Select Brand</option>\\n          <option *ngFor=\\\"let option of AllBrands\\\" [value]=\\\"option.brandId\\\">\\n            {{option.brandNameEng}}\\n          </option>\\n\\n        </select>\\n       </div>\\n       <div class=\\\"col-sm-8\\\">\\n        <br>\\n        <div style=\\\"float: right;\\\" >\\n          <button class=\\\"btn btn-success\\\"  (click)=\\\"saveproduct()\\\" >\\n            Save\\n               </button>\\n       \\n              <button class=\\\"btn btn-danger\\\"  (click)=\\\"oncancel()\\\" >\\n               Cancel\\n                  </button>\\n        </div>\\n     \\n      </div>\\n \\n        \\n    </div>\\n  \\n  \\n  \\n  </form>\\n    \\n    </div>\\n  \\n    <div class=\\\"col-sm-10\\\" *ngIf=\\\"!showform\\\" >\\n      <br>\\n      <button class=\\\"btn btn-success \\\" style=\\\"float: right;\\\" (click)=\\\"checkform()\\\" >\\n        Add Product\\n           </button>\\n    </div>\\n    <div class=\\\"col-sm-1\\\" >\\n  \\n    </div>\\n  </div>\\n  <div class=\\\"table-responsive\\\" style=\\\"padding: 2%;\\\">\\n    <table class=\\\"table table-hover\\\">\\n      <thead>\\n      <tr>\\n        <th (click)=\\\"Sort('id')\\\">#<i class=\\\"fa fa-sort\\\"></i></th>\\n        <th (click)=\\\"Sort('productName')\\\">Product Name<i class=\\\"fa fa-sort\\\"></i></th>\\n        <th (click)=\\\"Sort('barcode')\\\">Barcode<i class=\\\"fa fa-sort\\\"></i></th>\\n        <th (click)=\\\"Sort('categorey_Name')\\\">Categorey<i class=\\\"fa fa-sort\\\"></i></th>\\n        <th (click)=\\\"Sort('brand_Name')\\\">Brand<i class=\\\"fa fa-sort\\\"></i></th>\\n   \\n        <th (click)=\\\"Sort('Image')\\\">Image<i class=\\\"fa fa-sort\\\"></i></th>\\n        <th (click)=\\\"Sort('status')\\\">Status<i class=\\\"fa fa-sort\\\"></i></th>\\n        <th (click)=\\\"Sort('description')\\\">Actions<i class=\\\"fa fa-sort\\\"></i></th>\\n        <!-- <th>Image</th> -->\\n      </tr>\\n      </thead>\\n      <tbody>\\n      <tr *ngFor=\\\"let products of productlist |orderBy:key :reverse | paginate:{itemsPerPage:10,currentPage:p}; let i=index;\\\" >\\n        <td style=\\\"width: 2px;\\\">{{i+1}}</td>\\n        <td>{{products.productName}}</td>\\n        <td>{{products.barcode}}</td>\\n        <td>{{products.category_Name}}</td>\\n        <td>{{products?.brandNameEng}}</td>\\n\\n        <!-- <td>{{products.ProductName}}</td> -->\\n        <td *ngIf=\\\"products.productImage!=noimage;else nImage\\\"><img [src]=\\\"ImagebaseUrl+products.productImage\\\" style=\\\"height: 40px;\\\"/></td>\\n        <ng-template #nImage>\\n          <td >No Image</td>\\n        </ng-template>\\n        <td *ngIf=\\\"products.status;else falsee \\\"><img style=\\\"height: 20px;\\\" src=\\\"assets/icon/check.png\\\"/></td>\\n        <ng-template #falsee>\\n          <td><img style=\\\"height: 20px;\\\" src=\\\"assets/icon/cancel.png\\\"/></td>\\n        </ng-template>\\n        <td>\\n          <div class=\\\"row\\\">\\n           \\n            <div style=\\\"padding: 4px;\\\">\\n              <i class=\\\"fa fa-edit\\\" style=\\\"font-size:18px;color:rgb(0, 195, 255)\\\"(click)=\\\"openLgEdit(Editproduct,products.productId)\\\"></i>\\n            </div>\\n            <div style=\\\"padding: 4px;\\\">\\n          <i class=\\\"fa fa-upload\\\" aria-hidden=\\\"true\\\"  (click)=\\\"openLg(uploadfilecontent,products.productId)\\\"></i> \\n          </div>\\n          <div *ngIf=\\\"products.status;else deact \\\"><img src=\\\"assets/images/on.png\\\" title=\\\"Active Product\\\" (click)=\\\"changestatus(products.productId)\\\"  > </div>\\n          <ng-template #deact>\\n           <img src=\\\"assets/images/off.png\\\" title=\\\"DeActive Product\\\"(click)=\\\"changestatus(products.productId)\\\" >\\n          </ng-template>\\n        </div>\\n       \\n        </td>\\n      </tr>\\n     \\n      </tbody>\\n    \\n    </table>\\n    <div class=\\\"row\\\">\\n      <div style=\\\"right: 10%;\\\">\\n        <pagination-controls (pageChange)=\\\"p=$event\\\"></pagination-controls>\\n    </div>\\n  </div>\\n  </div>\\n</app-card>\\n<!-- Hover table card end -->\\n      </div>\\n    </div>\\n  \\n    <ng-template #uploadfilecontent let-modal>\\n      <div class=\\\"modal-header\\\">\\n        <h4 class=\\\"modal-title\\\">Upload file</h4>\\n      \\n      </div>\\n      <div class=\\\"modal-body\\\">\\n    \\n        <div class=\\\"container\\\">\\n          <form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"SubmitImage()\\\">\\n      \\n              <!-- Progress Bar -->\\n              <div class=\\\"progress form-group\\\" *ngIf=\\\"progress > 0\\\">\\n                  <div class=\\\"progress-bar progress-bar-striped bg-success\\\" role=\\\"progressbar\\\" [style.width.%]=\\\"progress\\\">\\n                  </div>\\n              </div>\\n      \\n              <div class=\\\"form-group\\\">\\n                  <input type=\\\"file\\\" (change)=\\\"uploadFile($event)\\\" required>\\n              </div>\\n      \\n            \\n      \\n              <div class=\\\"form-group\\\">\\n                  <button class=\\\"btn btn-danger btn-block btn-lg\\\" [disabled]=\\\"form.get('avatar')==null\\\">Upload</button>\\n              </div>\\n          </form>\\n      </div>\\n      </div>\\n      <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-light\\\" (click)=\\\"modal.close('Close click')\\\">Close</button>\\n      </div>\\n    </ng-template>\\n    <ng-template #Editproduct let-modal>\\n      <div class=\\\"modal-header\\\">\\n        <h4 class=\\\"modal-title\\\">Update  Product</h4>\\n      \\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        <form class=\\\"needs-validation\\\" novalidate [formGroup]=\\\"singleproductform\\\">\\n          <div class=\\\"form-row\\\">\\n            <div class=\\\"col-md-6 mb-3\\\">\\n              <label for=\\\"validationCustom01\\\"> Product Name</label>\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"validationCustom01\\\" placeholder=\\\"Product Name\\\" formControlName=\\\"productName\\\"  required>\\n              \\n            </div>\\n            <div class=\\\"col-md-6 mb-3\\\">\\n              <label  for=\\\"validationCustom05\\\">Product Name Urdu</label>\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"validationCustom05\\\" formControlName=\\\"productName_Urdu\\\"  placeholder=\\\"productName_Urdu\\\" required>\\n              \\n            </div>\\n            <!-- <div class=\\\"col-md-5 mb-3\\\">\\n              <label for=\\\"validationCustomUsername\\\">Categorey</label>\\n              <select class=\\\"custom-select\\\" formControlName=\\\"category_Id\\\" >\\n                <option selected value=\\\"{{singleproduct.category_Id}}\\\">{{singleproduct?.category_Name}}</option>\\n                <option *ngFor=\\\"let option of categoreylist\\\" [value]=\\\"option.category_Id\\\">\\n                  {{option.category_Name}}\\n                </option>\\n    \\n              </select>\\n    \\n            </div> -->\\n            <!-- <div class=\\\"col-md-5 mb-3\\\">\\n              <label for=\\\"validationCustomUsername\\\">Brand</label>\\n              <select class=\\\"custom-select\\\" formControlName=\\\"brandId\\\" >\\n                <option selected value=\\\"{{singleproduct.brandId}}\\\">{{singleproduct?.brandNameEng}}</option>\\n                <option *ngFor=\\\"let option of AllBrands\\\" [value]=\\\"option.brandId\\\">\\n                  {{option.brandNameEng}}\\n                </option>\\n    \\n              </select>\\n    \\n            </div> -->\\n           \\n          </div>\\n          <div class=\\\"form-row\\\">\\n            <div class=\\\"col-md-6 mb-3\\\">\\n              <label for=\\\"validationCustom04\\\">Barcode</label>\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"validationCustom04\\\"formControlName=\\\"barcode\\\"  placeholder=\\\"Address\\\" required>\\n             \\n            </div>\\n            <div class=\\\"col-md-6 mb-3\\\">\\n              <label for=\\\"validationCustom04\\\">Description Urdu</label>\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"validationCustom04\\\"formControlName=\\\"description_Urdu\\\"  placeholder=\\\"description_Urdu\\\" required>\\n             \\n            </div>\\n            \\n          </div>\\n          <div class=\\\"form-row\\\">\\n          \\n            <div class=\\\"col-md-8 mb-3\\\">\\n              <label  for=\\\"validationCustom05\\\">Description</label>\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"validationCustom05\\\" formControlName=\\\"description\\\"  placeholder=\\\"Description\\\" required>\\n              \\n            </div>\\n            \\n          </div>\\n          \\n         \\n           \\n        \\n    \\n          <button style=\\\"float: right;\\\" class=\\\"btn btn-primary\\\"(click)=\\\"UpdateProuct()\\\" type=\\\"submit\\\">Submit</button>\\n        </form>\\n    \\n        <script>\\n        // Example starter JavaScript for disabling form submissions if there are invalid fields\\n        (function() {\\n          'use strict';\\n          window.addEventListener('load', function() {\\n            // Fetch all the forms we want to apply custom Bootstrap validation styles to\\n            var forms = document.getElementsByClassName('needs-validation');\\n            // Loop over them and prevent submission\\n            var validation = Array.prototype.filter.call(forms, function(form) {\\n              form.addEventListener('submit', function(event) {\\n                if (form.checkValidity() === false) {\\n                  event.preventDefault();\\n                  event.stopPropagation();\\n                }\\n                form.classList.add('was-validated');\\n              }, false);\\n            });\\n          }, false);\\n        })();\\n        </script>\\n      </div>\\n      <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-light\\\" (click)=\\\"modal.close('Close click')\\\">Close</button>\\n      </div>\\n    </ng-template>\\n\\n    <ngx-spinner bdColor=\\\"rgba(51, 51, 51, 0.8)\\\" size=\\\"default\\\" type=\\\"ball-spin-clockwise\\\">  \\n      <p style=\\\"color: white\\\">Please Wait. </p>  \\n      </ngx-spinner>   \"","export default \"<app-Add-Product></app-Add-Product>\"","export class Product{\r\n\r\n\r\n    productId:number\r\n    productName:string\r\n    product_TotalPrice:number\r\n    unit_Price:any\r\n    product_Qty :number\r\n    barcode:string\r\n    brandNameEng:string\r\n    description:string\r\n    sellingprice:number\r\n    brand_Name:string\r\n    category_Id:any\r\n    category_Name:string\r\n    productImage:string\r\n    brandId:number\r\n    dateTime:Date\r\n    description_Urdu:string\r\n    productName_Urdu:string\r\n    \r\n \r\n}\r\n","export class Supplier{\r\n    supplier_Id:number\r\n    supplier_Name:string \r\n    supplier_CompanyName:string \r\n    supplier_ContactNo :string\r\n    supplier_ContactNoOptional:string\r\n    supplier_Address:string\r\n    supplier_CityName:string\r\n    supplier_Email:string\r\n \r\n}\r\n","export class InventoryDto {\n    Barcode:string;\n   Product_TotalPrice:number;\nsingleunitpurchaseprice:number;\n    psingleunit_SellingPrice:number;\n\nPurchase_Qty:number;\n   TotalSellingPrice:number;\n  ProductInventory_Qty:number;\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from '../../../src/environments/environment.prod';\nimport { Supplier } from '../Models/Supplier.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SupplierService {\n  baseUrl = environment.apiurl + 'SupplierApi/';\nconstructor(private http: HttpClient) { }\npostsupplier(form: any){\n  return this.http.post<any>(this.baseUrl+'AddSupplier', form)\n};\nGetsupplier(){\n  return this.http.get<Supplier>(this.baseUrl+'AllSuppliers')\n};\n\n}\n\n","export default \".dark-modal .modal-content {\\n  background-color: #292b2c;\\n  color: white;\\n}\\n\\n.dark-modal .close {\\n  color: white;\\n}\\n\\n.light-blue-backdrop {\\n  background-color: #5cb3fd;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvUHJvZHVjdHMvQWRkLVByb2R1Y3QvQzpcXFVzZXJzXFxUYWxoYVxcRG93bmxvYWRzXFxFd2hvbGVzYWxlcldlYlBhbmVsQmFja1VwXFxFd2hvbGVzYWxlcldlYlBhbmVsQmFja1VwXFxkZWZhdWx0L3NyY1xcYXBwXFxwYWdlc1xcUHJvZHVjdHNcXEFkZC1Qcm9kdWN0XFxBZGQtUHJvZHVjdC5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvcGFnZXMvUHJvZHVjdHMvQWRkLVByb2R1Y3QvQWRkLVByb2R1Y3QuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSx5QkFBQTtFQUNBLFlBQUE7QUNDSjs7QURDRTtFQUNFLFlBQUE7QUNFSjs7QURBRTtFQUNFLHlCQUFBO0FDR0oiLCJmaWxlIjoic3JjL2FwcC9wYWdlcy9Qcm9kdWN0cy9BZGQtUHJvZHVjdC9BZGQtUHJvZHVjdC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5kYXJrLW1vZGFsIC5tb2RhbC1jb250ZW50IHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICMyOTJiMmM7XHJcbiAgICBjb2xvcjogd2hpdGU7XHJcbiAgfVxyXG4gIC5kYXJrLW1vZGFsIC5jbG9zZSB7XHJcbiAgICBjb2xvcjogd2hpdGU7XHJcbiAgfVxyXG4gIC5saWdodC1ibHVlLWJhY2tkcm9wIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICM1Y2IzZmQ7XHJcbiAgfSIsIi5kYXJrLW1vZGFsIC5tb2RhbC1jb250ZW50IHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzI5MmIyYztcbiAgY29sb3I6IHdoaXRlO1xufVxuXG4uZGFyay1tb2RhbCAuY2xvc2Uge1xuICBjb2xvcjogd2hpdGU7XG59XG5cbi5saWdodC1ibHVlLWJhY2tkcm9wIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzVjYjNmZDtcbn0iXX0= */\"","import { HttpClient, HttpClientModule, HttpEvent, HttpEventType, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Component, ElementRef, EventEmitter, Input, OnInit, Output, SimpleChanges, ViewChild } from '@angular/core';\n\nimport { FormArray, FormBuilder, FormControl, FormGroup } from '@angular/forms';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { SupplierService } from './../../../_service/supplier.service';\n//import { Supplier } from 'src/app/Models/Supplier.model';\n import { Supplier } from './../../../Models/Supplier.model';\nimport { Product } from './../../../Models/Product.Model';\nimport { ProductService } from './../../../_service/product.service';\nimport { FileuploadService } from './../../../_service/fileupload.service';\nimport { AlertifyService } from '../../../../../src/app/_service/alertify.service';\n\n@Component({\n  selector: 'app-Add-Product',\n  templateUrl: './Add-Product.component.html',\n  styleUrls: ['./Add-Product.component.scss']\n})\nexport class AddProductComponent implements OnInit {\n\n  closeResult: string;\n   supplierlist:Supplier[];\n   categoreylist:any[];\n   singlecategorey:any;\n   categoreyproducts:Product[];\n   showcategoreysection:boolean;\n   barcodeproducts:[];\n   form: FormGroup;\n   progress: number = 0;\n   selectedbarcodeproduct:Product;\n   productinfos:FormGroup;\n  selectedsupplier:any;\n  hidden: boolean = false;\n  CategoryDto:{};\n  newpackage(){\n    return this.fb.group({\n      ProductId:new FormControl(this.productmodel.productId),\n      ProductName:new FormControl(this.productmodel.productName),\n      Barcode:new FormControl(this.productmodel.barcode),\n      Brand_Name:new FormControl(this.productmodel.brand_Name),\n      Description:new FormControl(this.productmodel.description),\n      Product_Qty:new FormControl(this.productmodel.product_Qty),\n     // Product_TotalPrice:new FormControl(this.productmodel.product_TotalPrice),\n      Unit_Price:new FormControl(this.productmodel.unit_Price),\n      ProductInventory_SellingPrice:new FormControl(this.productmodel.sellingprice),\n  \n    });\n  }\n\n\n  constructor(private modalService: NgbModal,private model:Supplier,private http:HttpClient,private supplierservice:SupplierService,private productmodel:Product, private fb:FormBuilder,private productservice:ProductService, public fileUploadService: FileuploadService,private alertify: AlertifyService)\n   {\n    this.productinfos=this.fb.group({ \n      products:this.fb.array([this.newpackage()])\n   })\n  }\n  myNameElem: ElementRef;\n  \n \n  ngOnInit(\n    \n  ) {\n    this.form = this.fb.group({\n    \n      avatar: [null]\n    })\n    this.GetSuppliers()\n  }\n supplier:FormGroup=new FormGroup({\n  supplier_Name: new FormControl(this.model.supplier_Name),\n  supplier_CompanyName: new FormControl(this.model.supplier_CompanyName),\n  supplier_ContactNo: new FormControl(this.model.supplier_ContactNo),\n  supplier_Address: new FormControl(this.model.supplier_Address),\n  supplier_CityName: new FormControl(this.model.supplier_CityName),\n  supplier_Email: new FormControl(this.model.supplier_Email),\n\n });\n categorey:FormGroup=new FormGroup({\n \n  category_Name: new FormControl('')\n\n });\n\n\n\n\n supplierinfo:FormGroup=new FormGroup({\n   supplier_Id:new FormControl(this.model.supplier_Id)\n });\n categoreyinfo:FormGroup=new FormGroup({\n  categorey_Id:new FormControl('')\n});\n// productinfo:FormGroup=new FormGroup({\n//   ProductId:new FormControl(this.productmodel.ProductId),\n//   ProductName:new FormControl(this.productmodel.ProductName),\n//   Barcode:new FormControl(this.productmodel.Barcode),\n//   Description:new FormControl(this.productmodel.Description),\n//   Product_Qty:new FormControl(this.productmodel.Product_Qty),\n//   Product_TotalPrice:new FormControl(this.productmodel.Product_TotalPrice),\n//   Unit_Price:new FormControl(this.productmodel.Unit_Price),\n//   sellingprice:new FormControl(this.productmodel.sellingprice),\n// });\n\nget formArr() {\n \n \n  return this.productinfos.get('products') as FormArray;\n}\n\n\naddNewRow() {\n  if(this.formArr.length >= 6){\n    return false\n  }\n  else {\n    this.formArr.push(this.newpackage());\n \n  }\n  if(this.formArr.length > 1){\n    this.hidden = true\n  } else{\n    this.hidden = false\n  }\n}\n\n  openVerticallyCentered(content) {\n    this.modalService.open(content, { centered: true });\n  }\n  openLg(content) {\n    this.modalService.open(content, { size: 'lg' });\n  }\n  openVerticallyCenteredCategorey(categoreycontent) {\n    this.modalService.open(categoreycontent, { centered: true });\n  }\n  savecategorey(){\n    this.productservice.postcategorey(this.categorey.value).subscribe(next => {\n     \n      \n      this.categorey.reset();\n      this.Getcategorey();\n      this.modalService.dismissAll();\n\n      \n    }, error => {\n      console.log(error);\n    });\n  }\n  savesupplier(){\n    \n    \n    this.supplierservice.postsupplier(this.supplier.value).subscribe(next => {\n      console.log(next);\n      this.GetSuppliers();\n      this.supplier.reset();\n     \n      this.modalService.dismissAll();\n\n      \n    }, error => {\n      console.log(error);\n    });\n  }\n  removeQuantity(i:number) {\n    if(this.formArr.length == 1){\n      return false\n    }\n    else {\n    this.formArr.removeAt(i);\n    //this.hidden = true;\n    }\n  }\n  GetSuppliers(){\n    \n    this.supplierservice.Getsupplier().subscribe((next:any) => {\n      this.supplierlist=[];\n    \n      this.supplierlist=next;\n      console.log(this.supplierlist);\n    }, error => {\n      console.log(error);\n    });\n  }\n  Getcategorey(){\n    \n    this.productservice.GetCategorey().subscribe((next:any) => {\n      this.categoreylist=[];\n      this.categoreylist=next.resp;\n      \n      \n    }, error => {\n      console.log(error);\n    });\n  }\n  saveproduct(){\n\n  var  productobj={\"supplier_Id\":this.selectedsupplier.supplier_Id,\"category_Id\":this.singlecategorey.category_Id,\"products\":this.productinfos.value.products}\n  console.log(productobj);\n \n  this.http.post<any>('https://ewholesaler.conveyor.cloud/Api/ProductApi/AddSupplierWithProducts', productobj).subscribe(next => {\n    console.log(next);\n    this.productinfos.reset();\n   this.singlecategorey=null;\n  \n    \n  }, error => {\n    console.log(error);\n  });\n  }\n  onOptionsSelected(id){\nconsole.log(id);\n\nthis.selectedsupplier=this.supplierlist.find(x=> x.supplier_Id == id);\nthis.showcategoreysection=true;\nthis.Getcategorey();\nconsole.log(this.selectedsupplier);\n\n  }\n  onOptionsCategoreySelected(id:number){\n\n\nthis.CategoryDto={\"Category_Id\":this.ConvertToInt(id)};\n\nthis.productservice.GetCategoryProduct(this.CategoryDto).subscribe((res:any)=>{\nthis.categoreyproducts=res;\n\n\n}, error => {\n    console.log(error);\n  });\nthis.singlecategorey=this.categoreylist.find(x=>x.category_Id==id)\n\n  }\n  onBarcodechange(Barcode,id){\n    \n    var productdetails=this.categoreyproducts.find(x=>x.barcode==Barcode);\n\nif(productdetails!=null&&productdetails!=undefined){\n\n  this.selectedbarcodeproduct=productdetails;\n  ((this.productinfos.get('products') as FormArray).at(id) as FormGroup).get('ProductId').patchValue(this.selectedbarcodeproduct.productId);\n  ((this.productinfos.get('products') as FormArray).at(id) as FormGroup).get('ProductName').patchValue(this.selectedbarcodeproduct.productName);\n  ((this.productinfos.get('products') as FormArray).at(id) as FormGroup).get('Brand_Name').patchValue(this.selectedbarcodeproduct.brand_Name);\n  ((this.productinfos.get('products') as FormArray).at(id) as FormGroup).get('Product_Qty').patchValue(this.selectedbarcodeproduct.product_Qty);\n  ((this.productinfos.get('products') as FormArray).at(id) as FormGroup).get('Description').patchValue(this.selectedbarcodeproduct.description);\n  ((this.productinfos.get('products') as FormArray).at(id) as FormGroup).get('Unit_Price').patchValue(this.selectedbarcodeproduct.unit_Price);\n}\nelse{\n  ((this.productinfos.get('products') as FormArray).at(id) as FormGroup).get('ProductId').patchValue(0);\n  ((this.productinfos.get('products') as FormArray).at(id) as FormGroup).get('ProductName').patchValue(\"\");\n  ((this.productinfos.get('products') as FormArray).at(id) as FormGroup).get('Brand_Name').patchValue(\"\");\n  ((this.productinfos.get('products') as FormArray).at(id) as FormGroup).get('Product_Qty').patchValue(\"\");\n  ((this.productinfos.get('products') as FormArray).at(id) as FormGroup).get('Description').patchValue(\"\");\n  ((this.productinfos.get('products') as FormArray).at(id) as FormGroup).get('Unit_Price').patchValue(\"\");\n}\n\n\n   \n      }\n  \n  ConvertToInt(val){\n        return parseInt(val);\n      }\n//fileupload\nuploadFile(event) {\n  const file = (event.target as HTMLInputElement).files[0];\n  this.form.patchValue({\n    avatar: file\n  });\n  this.form.get('avatar').updateValueAndValidity()\n}\n\nsubmitUser() {\n  var apipath=\"AddCatAndProductExcel\";\n  this.fileUploadService.uploadproductfile(\n \n    this.form.value.avatar,apipath\n  ).subscribe((event: HttpEvent<any>) => {\n    switch (event.type) {\n      case HttpEventType.Sent:\n        console.log('Request has been made!');\n        break;\n      case HttpEventType.ResponseHeader:\n     \n        console.log('Response header has been received!11');\n        this.form.reset();\n    \n\nthis.modalService.dismissAll();\n        break;\n      case HttpEventType.UploadProgress:\n        this.progress = Math.round(event.loaded / event.total * 100);\n        console.log(`Uploaded! ${this.progress}%`);\n        break;\n      case HttpEventType.Response:\n        this.modalService.dismissAll();\n        this.form.reset();\n          this.alertify.success('Data Updated seccussfully!');\n          break;\n\n        this.modalService.dismissAll();\n        setTimeout(() => {\n          this.progress = 0;\n        }, 1500);\n        default  :\n        {\n          this.modalService.dismissAll();\n          this.form.reset();\n          this.alertify.error('Some things Wrong  or file formate  is not supported');\n        }\n\n    }\n   \n  })\n}\n\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL1Byb2R1Y3RzL0FsbEludmVudG9yeS9BbGxJbnZlbnRvcnkuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { AlertifyService } from '../../../../../src/app/_service/alertify.service';\nimport { InventoryDto } from '../../../../../src/app/Models/inventoryDto';\nimport { StockinService } from './../../../../../src/app/_service/stockin.service';\n\n@Component({\n  selector: 'app-AllInventory',\n  templateUrl: './AllInventory.component.html',\n  styleUrls: ['./AllInventory.component.scss']\n})\nexport class AllInventoryComponent implements OnInit {\n  key:string='rowid';\n  reverse:boolean=false;\n  invertorylist:any[];\n  Searchinvertorylist:any[];\n  p:number=1;\n  Barcode:any;\n  status :boolean;\n  showform:boolean=false;\n  constructor(private alertify: AlertifyService,private SpinnerService: NgxSpinnerService,private  inventorymodal:InventoryDto,private service:StockinService,private fb:FormBuilder) { }\n\n  ngOnInit() {\n    this.GetInventory();\n  }\n  Sort(key){\n    this.key=key;\n    this.reverse=!this.reverse;\n  }\n  GetInventory(){\n    this.SpinnerService.show();\n    this.service.GetstockIn().subscribe((next:any) => {\n      this.invertorylist=[];\n      this.invertorylist=next.resp;\n      this.Searchinvertorylist=next.resp;\n      this.SpinnerService.hide();\n      console.log(this.invertorylist)\n    }, error => {\n      console.log(error);\n    });\n  \n  }\n  inventoryform:FormGroup=new FormGroup({\n    Barcode: new FormControl(this.inventorymodal.Barcode),\n    singleunitpurchaseprice: new FormControl(this.inventorymodal.singleunitpurchaseprice),\n    psingleunit_SellingPrice: new FormControl(this.inventorymodal.psingleunit_SellingPrice),\n    ProductInventory_Qty: new FormControl(0),\n   });\n   checkform()\n  {\n    \n    this.showform=true;\n  }\n  SearchProduct(){\n    if(this.Barcode==\"\"){\n      this.Searchinvertorylist=[];\n     this.Searchinvertorylist=this.invertorylist\n    }\n    else{\n      if(this.invertorylist!=null){\n        this.Searchinvertorylist=this.invertorylist.filter(res=>{\n          return res.barcode.match(this.Barcode)\n        })\n      }\n   \n    }\n  }\n  oncancel()\n  {\n    this.showform=false;\n    this.inventoryform.reset();\n  }\n  saveinventory()\n  {\n    debugger;\n    console.log(this.inventoryform.value);\n\n        this.service.AddInventory(this.inventoryform.value).subscribe(next => {\n       \n      \n          this.inventoryform.reset();\n           this.GetInventory();\n           this.showform=false;\n          this.alertify.success('Inventory Add seccussfully');\n         \n        }, error => {\n         this.alertify.error('Barcode not exists');\n          console.log(error);\n        });\n  }\n  onOptionsSelected(num){\n    debugger;\n    if(num==\"0\"){\n      this.Searchinvertorylist=this.invertorylist;\n    }\n    if(num==\"1\"){\n      this.status=true;\n      this.Searchinvertorylist=this.invertorylist.filter(x=>x.productInventory_Status==this.status);\n    }\n    if(num==\"2\"){\n    \n      this.status=false;\n      this.Searchinvertorylist=this.invertorylist.filter(x=>x.productInventory_Status==this.status);\n    }\n\n  }\n  changestatus(id:number){\nthis.service.ChangeStatus(id).subscribe((next:any)=>{\n  this.invertorylist.forEach(x=>{if(x.productInvertory_Id==id){x.productInventory_Status=!x.productInventory_Status}});\n}, error => {\n      console.log(error);\n    })\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL1Byb2R1Y3RzL0FsbFByb2R1Y3QvQWxsUHJvZHVjdC5jb21wb25lbnQuc2NzcyJ9 */\"","import { HttpEvent, HttpEventType } from '@angular/common/http';\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms';\nimport { MatPaginator, MatSort, MatTableDataSource } from '@angular/material';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { FileuploadService } from './../../../_service/fileupload.service';\nimport { Product } from './../../../Models/Product.Model';\nimport { ProductService } from './../../../_service/product.service';\nimport { environment } from './../../../../../src/environments/environment.prod';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { AlertifyService } from '../../../../../src/app/_service/alertify.service';\nimport { BrandService } from '../../../../../src/app/_service/brand.service';\n\n@Component({\n  selector: 'app-AllProduct',\n  templateUrl: './AllProduct.component.html',\n  styleUrls: ['./AllProduct.component.scss']\n})\nexport class AllProductComponent implements OnInit {\n  ImagebaseUrl = environment.Imagebaseurl + 'ProductImages/';\n  form: FormGroup;\n   progress: number = 0;\n  listData: MatTableDataSource<any>;\n  searchKey: string;\n  productlist:any[];\n  Searchableproductlist:any[];\n  Barcode:any;\n  key:string='rowid';\n  reverse:boolean=false;\n  disable:boolean=false;\n  p:number=1;\n  productid:number\n  EditProduct:any;\n  noimage=\"\";\n  AllBrands:any[];\n  singleproduct:Product;\n  categoreylist:any[];\n  Brandlist:any[];\n  showform:boolean=false;\n  //displayedColumns: string[] = ['productId','productName','brand_Name','barcode','description'];\n  constructor(private alertify: AlertifyService,private SpinnerService: NgxSpinnerService,private productservice:ProductService,private modalService: NgbModal, public fileUploadService: FileuploadService, private fb:FormBuilder,private productmodel:Product,private brandservice:BrandService) { }\n  checkform()\n  {\n    this.showform=true;\n  }\n  singleproductform:FormGroup=new FormGroup({\n    productName: new FormControl(this.productmodel.productName),\n   \n    barcode: new FormControl(this.productmodel.barcode),\n    category_Name: new FormControl(this.productmodel.category_Name),\n    category_Id: new FormControl(this.productmodel.category_Id),\n    // product_Qty: new FormControl(this.productmodel.product_Qty),\n    // product_TotalPrice: new FormControl(this.productmodel.product_TotalPrice),\n    // sellingprice: new FormControl(this.productmodel.sellingprice),\n    // unit_Price: new FormControl(this.productmodel.unit_Price),\n    productImage:new FormControl(this.productmodel.productImage),\n    productId: new FormControl(this.productmodel.productId),\n    description: new FormControl(this.productmodel.description),\n    brandId: new FormControl(this.productmodel.brandId),\n    dateTime: new FormControl(this.productmodel.dateTime),\n    description_Urdu: new FormControl(this.productmodel.description_Urdu),\n    productName_Urdu: new FormControl(this.productmodel.productName_Urdu),\n    // brand_Name:new FormControl(this.productmodel.brandNameEng)\n   });\n   \n   \n  Productform:FormGroup=new FormGroup({\n    productName: new FormControl(this.productmodel.productName),\n    category_Id: new FormControl(0),\n    brandId: new FormControl(0),\n    barcode: new FormControl(this.productmodel.barcode),\n    productImage:new FormControl(this.productmodel.productImage),\n    productId: new FormControl(0),\n    description: new FormControl(this.productmodel.description),\n    description_Urdu: new FormControl(this.productmodel.description_Urdu),\n    productName_Urdu: new FormControl(this.productmodel.productName_Urdu),\n   });\n  \n  ngOnInit() {\n    \n    this.Getcategorey();\n    this.form = this.fb.group({\n    \n      avatar: [null]\n    })\n\n    this.getproducts();\n    this.GetBrands();\n   \n  }\n  \n  onSearchClear() {\n    this.searchKey = \"\";\n    this.applyFilter();\n  }\n  oncancel()\n  {\n    this.showform=false;\n    this.Productform.reset();\n  }\n  openLg(content,id:number) {\n    this.productid=id;\n    this.GetBrands();\n    this.Getcategorey();\n    this.modalService.open(content, { size: 'lg' });\n  }\n  saveproduct()\n  {\n  debugger;\nconsole.log(this.Productform.value);\n    this.productservice.AddProduct(this.Productform.value).subscribe(next => {\n   \n     this.modalService.dismissAll();\n      this.Productform.reset();\n       this.getproducts();\n       this.showform=false;\n      this.alertify.success('Product Add seccussfully');\n     \n    }, error => {\n     this.alertify.error('Something Wrong or already exists');\n      console.log(error);\n    });\n    \n  }\n\n  openLgEdit(content,id:number){\n    var data=this.Searchableproductlist.find(res=>res.productId==id);\n  this.singleproduct=data;\n  this.singleproductform.setValue({\nproductName:this.singleproduct.productName,\n\nbarcode:this.singleproduct.barcode,\ncategory_Name:this.singleproduct.category_Name,\n category_Id:this.singleproduct.category_Id,\ndescription:this.singleproduct.description,\nproductId:this.singleproduct.productId,\nproductImage:this.singleproduct.productImage,\nbrandId:this.singleproduct.brandId,\ndateTime:this.singleproduct.dateTime,\ndescription_Urdu:this.singleproduct.description_Urdu,\n productName_Urdu:this.singleproduct.productName_Urdu,\n//  brand_Name:this.singleproduct.brand_Name\n  });\n\n\n\n  console.log(this.singleproduct);\n \n    this.modalService.open(content, { size: 'lg' });\n  }\n\n  applyFilter() {\n    this.listData.filter = this.searchKey.trim().toLowerCase();\n  }\n  Getcategorey(){\n    this.SpinnerService.show();\n    this.productservice.GetCategorey().subscribe((next:any) => {\n      this.categoreylist=[];\n      this.categoreylist=next.resp;\n      this.SpinnerService.hide();\n      console.log(this.categoreylist)\n    }, error => {\n      console.log(error);\n    });\n\n   \n  }\n  GetBrands(){\n\n    this.brandservice.GetBrands().subscribe((next:any) => {\n      this.AllBrands=[];\n      this.AllBrands=next.resp;\n   \n      console.log(this.AllBrands)\n    }, error => {\n      console.log(error);\n    });\n\n  }\n  getproducts(){\n    debugger;\n    this.SpinnerService.show();\n    this.productservice.GetAllProducts().subscribe((next:any) => {\n      this.productlist=[];\n    \n      this.productlist=next.resp;\n      this.Searchableproductlist=next.resp;\n      this.SpinnerService.hide();\n      console.log(this.productlist);\n      // this.listData = new MatTableDataSource(this.productlist);\n      // this.listData.sort=this.sort;\n      // this.listData.paginator=this.paginator;\n    }, error => {\n      console.log(error);\n    });\n\n  }\n  SearchProduct(){\n    if(this.Barcode==\"\"){\n     this.productlist=this.Searchableproductlist\n    }\n    else{\n      if(this.productlist!=null){\n        this.productlist=this.Searchableproductlist.filter(res=>{\n          return res.barcode.match(this.Barcode)\n        })\n      }\n   \n    }\n  }\n  Sort(key){\n    this.key=key;\n    this.reverse=!this.reverse;\n  }\n  \nuploadFile(event) {\n\n  const file = (event.target as HTMLInputElement).files[0];\n  this.form.patchValue({\n    avatar: file\n  });\n  this.form.get('avatar').updateValueAndValidity();\n \n}\n\nSubmitImage() {\n  this.SpinnerService.show();\n  if(this.form.value.avatar!=null){\n    var apipath=\"UploadProductImage\";\n    \n    this.fileUploadService.uploadproductimage(\n   \n      this.form.value.avatar,apipath,\n      this.productid\n    ).subscribe((event: HttpEvent<any>) => {\n      switch (event.type) {\n        case HttpEventType.Sent:\n          console.log('Request has been made!');\n          break;\n        case HttpEventType.ResponseHeader:\n          console.log('Response header has been received!');\n          this.form.reset();\n  this.modalService.dismissAll();\n          break;\n        case HttpEventType.UploadProgress:\n          this.progress = Math.round(event.loaded / event.total * 100);\n          console.log(`Uploaded! ${this.progress}%`);\n          break;\n        case HttpEventType.Response:\n          console.log('User successfully created!', event.body);\n          setTimeout(() => {\n            this.progress = 0;\n          }, 1500);\n  \n      }\n      this.form.reset();\n      this.getproducts();\n    })\n    this.SpinnerService.hide();\n  }\n  \n}\nchangestatus(id:number){\n  this.productservice.ChangeStatus(id).subscribe((next:any)=>{\n    this.productlist.forEach(x=>{if(x.productId==id){x.status=!x.status}});\n  }, error => {\n        console.log(error);\n      })\n    }\nUpdateProuct(){\n  debugger;\n this.productservice.UpdateProduct(this.singleproductform.value).subscribe(next => {\n\n  this.modalService.dismissAll();\n   this.singleproductform.reset();\n   this.getproducts();\n   this.alertify.success('Product Updated seccussfully');\n  \n }, error => {\n  this.modalService.dismissAll();\n  this.singleproductform.reset();\n  this.alertify.success('Product Updated seccussfully');\n   console.log(error);\n });\n  console.log(this.singleproductform.value)\n}\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AllInventoryComponent } from './AllInventory/AllInventory.component';\nimport { AllProductComponent } from './AllProduct/AllProduct.component';\n\nimport { ProductsComponent } from './Products.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ProductsComponent,\n    data: {\n      breadcrumb: 'Add-Products',\n      icon: 'fa fa-product-hunt bg-c-blue',\n      breadcrumb_caption: 'Add your products with basic Details',\n      status: true\n    }\n  },\n  {\n    path: 'allproducts',\n    component: AllProductComponent,\n    data: {\n      breadcrumb: 'Products',\n      icon: 'icofont-table bg-c-blue',\n      breadcrumb_caption: 'All Products with Details',\n      status: true\n    }\n  },\n  {\n    path: 'inventory',\n    component: AllInventoryComponent,\n    data: {\n      breadcrumb: 'Inventory',\n      icon: 'icofont-table bg-c-blue',\n      breadcrumb_caption: 'Inventory With All Products And Details',\n      status: true\n    }\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ProductsRoutingModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL1Byb2R1Y3RzL1Byb2R1Y3RzLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-Products',\n  templateUrl: './Products.component.html',\n  styleUrls: ['./Products.component.scss']\n})\nexport class ProductsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ProductsComponent } from './Products.component';\nimport { AddProductComponent } from './Add-Product/Add-Product.component';\nimport { SharedModule } from './../../shared/shared.module';\nimport { ProductsRoutingModule } from './Products-bootstrap-routing.module';\nimport { AllProductComponent } from './AllProduct/AllProduct.component';\nimport * as Material from '@angular/material';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Supplier } from './../../Models/Supplier.model';\nimport { HttpClientModule } from '@angular/common/http';\nimport { SupplierService } from './../../_service/supplier.service';\nimport { Product } from './../../Models/Product.Model';\nimport { NgxDropzoneModule } from 'ngx-dropzone';\nimport{Ng2SearchPipeModule} from 'ng2-search-filter';\nimport{Ng2OrderModule} from 'ng2-order-pipe';\nimport{NgxPaginationModule} from 'ngx-pagination';\nimport { AllInventoryComponent } from './AllInventory/AllInventory.component';\nimport { StockinService } from './../../../../src/app/_service/stockin.service';\nimport { NgxSpinnerModule, NgxSpinnerService } from 'ngx-spinner';\nimport { InventoryDto } from '../../../../src/app/Models/inventoryDto';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    SharedModule,\n    ProductsRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    NgxDropzoneModule,\n    Material.MatStepperModule,\n\t\tMaterial.MatGridListModule, // for grid column\n        Material.MatFormFieldModule, //form\n        Material.MatInputModule, //input\n        Material.MatRadioModule, //mat-radio-group - radio button\n        Material.MatDatepickerModule, //matDatepicker - datepicker\n        Material.MatNativeDateModule, //required for datepicker\n        Material.MatSelectModule, //mat-select - dropdown\n        Material.MatCheckboxModule, //mat-checkbox - checkbox\n\t\tMaterial.MatButtonModule,\n\t\tMaterial.MatTableModule,\n\t\tMaterial.MatIconModule,\n\t\tMaterial.MatPaginatorModule,\n\t\tMaterial.MatSortModule,\n\t\tMaterial.MatProgressBarModule,\n\t\tMaterial.MatCardModule, \n\t\tMaterial. MatIconModule, \n    Material. MatToolbarModule,\n    Ng2OrderModule,\n    Ng2SearchPipeModule,\n    NgxPaginationModule,\n    NgxSpinnerModule,\n  ],\n  declarations: [ProductsComponent,\n  AddProductComponent,\nAllProductComponent,\nAllInventoryComponent],\nproviders: [\nSupplier,SupplierService,Product,StockinService,NgxSpinnerService,InventoryDto\n]\n})\nexport class ProductsModule { }\n"],"sourceRoot":"webpack:///"}