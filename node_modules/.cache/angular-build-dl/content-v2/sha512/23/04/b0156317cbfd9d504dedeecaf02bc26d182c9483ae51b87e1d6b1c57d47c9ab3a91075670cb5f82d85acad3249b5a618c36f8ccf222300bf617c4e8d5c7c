{"version":3,"sources":["./src/app/pages/Orders/AllOrders/AllOrders.component.html","./src/app/pages/Orders/OrderStatus/OrderStatus.component.html","./src/app/pages/Orders/Orders.component.html","./src/app/pages/Orders/PosOrder/PosOrder.component.html","./src/app/_service/order.service.ts","./src/app/pages/Orders/AllOrders/AllOrders.component.scss","./src/app/pages/Orders/AllOrders/AllOrders.component.ts","./src/app/pages/Orders/OrderRouting.routing.ts","./src/app/pages/Orders/OrderStatus/OrderStatus.component.scss","./src/app/pages/Orders/OrderStatus/OrderStatus.component.ts","./src/app/pages/Orders/Orders.component.scss","./src/app/pages/Orders/Orders.component.ts","./src/app/pages/Orders/Orders.module.ts","./src/app/pages/Orders/PosOrder/PosOrder.component.scss","./src/app/pages/Orders/PosOrder/PosOrder.component.ts"],"names":[],"mappings":"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","file":"pages-Orders-Orders-module-es2015.js","sourcesContent":["export default \"\\n\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-sm-12\\\">\\n<!-- Hover table card start -->\\n<app-card [title]=\\\"'Orders'\\\" [classHeader]=\\\"true\\\" [blockClass]=\\\"'table-border-style'\\\">\\n  <span class=\\\"code-header\\\">All Orders Detail</span>\\n\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-sm-12\\\" >\\n     \\n    </div>\\n    <div class=\\\"col-sm-12\\\" >\\n      <div class=\\\"col-sm-2\\\" style=\\\"float: right;padding-bottom: 8px;\\\">\\n        <select class=\\\"custom-select\\\"#mySelect\\n        (change)='onOptionsSelected(mySelect.value)' >\\n          <option selected value=\\\"0\\\">All</option>\\n         <option value=\\\"1\\\">Pending</option>\\n         <option value=\\\"2\\\">Active</option>\\n         <option value=\\\"3\\\">Completed</option>\\n         <option value=\\\"4\\\">Cancelled</option>\\n    \\n        </select>\\n        </div>\\n      <div class=\\\"col-sm-2\\\" style=\\\"float: right;\\\">\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"vendorname\\\" (ngModelChange)=\\\"SearchRider()\\\" placeholder=\\\"Enter Name to search\\\" >\\n           \\n         \\n     </div>\\n    </div>\\n  </div>\\n  <div class=\\\"table-responsive\\\" style=\\\"padding: 2%;\\\">\\n    <table class=\\\"table table-hover\\\">\\n      <thead>\\n      <tr>\\n        <th (click)=\\\"Sort('id')\\\">#<i class=\\\"fa fa-sort\\\"></i></th>\\n        <th (click)=\\\"Sort('code')\\\">Order No.<i class=\\\"fa fa-sort\\\"></i></th>\\n        <th (click)=\\\"Sort('storename')\\\">Vendor<i class=\\\"fa fa-sort\\\"></i></th>\\n        <th (click)=\\\"Sort('createDate')\\\">Date<i class=\\\"fa fa-sort\\\"></i></th>\\n        <th (click)=\\\"Sort('status')\\\">Status<i class=\\\"fa fa-sort\\\"></i></th>\\n        <th (click)=\\\"Sort('delivertDate')\\\">Delivering Date<i class=\\\"fa fa-sort\\\"></i></th>\\n        <th (click)=\\\"Sort('billinginfo.subtotal')\\\">Sub Total<i class=\\\"fa fa-sort\\\"></i></th>\\n        <th (click)=\\\"Sort('billinginfo.discounted_Amount')\\\">Discount<i class=\\\"fa fa-sort\\\"></i></th>\\n\\n      <th (click)=\\\"Sort('billinginfo.grandTotal')\\\">Grand Total<i class=\\\"fa fa-sort\\\"></i></th>\\n      <th (click)=\\\"Sort('Action')\\\">Action<i class=\\\"fa fa-sort\\\"></i></th>\\n      <!-- <th>Image</th> -->\\n      </tr>\\n      </thead>\\n      <tbody>\\n      <tr *ngFor=\\\"let obj of SearchOrdersList | paginate:{itemsPerPage:10,currentPage:p}; let i=index;\\\" >\\n        <td style=\\\"width: 2px;\\\">{{i+1}}</td>\\n        <td>{{obj.code}}</td>\\n        <td>{{obj.storename}}</td>\\n        <td>{{obj.createDate| date:'medium'}}</td>\\n        <td>{{obj.status}}</td>\\n      \\n        <td>{{obj.delivertDate | date:'medium'}}</td>\\n        <td>{{obj.billinginfo?.subtotal}}</td>\\n        <td>{{obj.billinginfo?.discounted_Amount}}</td>\\n        <td>{{obj.billinginfo?.grandTotal}}</td>\\n    \\n       <td>  <div class=\\\"row\\\">\\n\\n        <div style=\\\"padding: 4px;\\\">\\n          <i class=\\\"fa fa-desktop\\\" aria-hidden=\\\"true\\\" style=\\\"font-size:18px;color:rgb(255, 0, 0)\\\"  (click)=\\\"openOrderDetailLg(OrderDetailcontent,obj.orderId)\\\" ></i> \\n        </div>\\n        <div style=\\\"padding: 4px;\\\"*ngIf=\\\"obj.status!='Completed'\\\">\\n          <i class=\\\"fa fa-edit\\\" aria-hidden=\\\"true\\\" style=\\\"font-size:18px;color:rgb(113, 147, 240)\\\"  (click)=\\\"openOrderUpdateLg(EditStatuscontent,obj.orderId)\\\" ></i> \\n        </div>\\n    </div></td>\\n      </tr>\\n     \\n      </tbody>\\n    \\n    </table>\\n    <div class=\\\"row\\\">\\n      <div style=\\\"right: 10%;\\\">\\n        <pagination-controls (pageChange)=\\\"p=$event\\\"></pagination-controls>\\n    </div>\\n  </div>\\n  </div>\\n</app-card>\\n<!-- Hover table card end -->\\n      </div>\\n    </div>\\n\\n    <ng-template #OrderDetailcontent let-modal>\\n      \\n      <div class=\\\"modal-header\\\">\\n        <h4 class=\\\"modal-title\\\">Order Detail</h4>\\n      \\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        <div class=\\\"table-responsive\\\">\\n          <table class=\\\"table table-hover\\\">\\n      <thead>\\n           <tr>\\n             <th>Product Name</th>\\n             <th>Barcode</th>\\n             <th>Qty</th>\\n             <th>Unit Price</th>\\n             <th>Total price</th>\\n           </tr>\\n      </thead>\\n      <tbody *ngFor=\\\"let obj of orderitemns\\\">\\n        <tr>\\n          <th>{{obj?.productName}}</th>\\n          <th>{{obj?.barcode}}</th>\\n          <th>{{obj?.qty}}</th>\\n          <th>{{obj?.price}}</th>\\n          <th>{{obj?.totalprice}}</th>\\n        </tr>\\n      </tbody>\\n    </table>\\n           </div>\\n    \\n      </div>\\n      <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-light\\\" (click)=\\\"modal.close('Close click')\\\">Close</button>\\n      </div>\\n    </ng-template>\\n  \\n  \\n    <ng-template #EditStatuscontent let-modal>\\n      \\n      <div class=\\\"modal-header\\\">\\n        <h4 class=\\\"modal-title\\\">Order Detail</h4>\\n      \\n      </div>\\n      <div class=\\\"modal-body\\\">\\n\\n        <div class=\\\"container\\\">\\n          <form [formGroup]=\\\"orderstatus\\\" >\\n      <input type=\\\"hidden\\\" formControlName=\\\"orderId\\\"/>\\n            <label>Select Status</label>\\n            <select class=\\\"custom-select custom-select-lg sm-1\\\"formControlName=\\\"status\\\"\\n            (change)='onOptionsOrderStatusSelected()'>\\n             \\n              <!-- <option value=\\\"Pending\\\" *ngIf=\\\"ordercurrentstatus==''\\\">Pending</option> -->\\n              <option value=\\\"Active\\\"*ngIf=\\\"ordercurrentstatus=='Pending'\\\" >Active</option>\\n              <option value=\\\"Completed\\\"*ngIf=\\\"ordercurrentstatus=='Active'\\\">Completed</option>\\n              \\n  \\n            </select>\\n      \\n             \\n          </form>\\n      </div>\\n      </div>\\n      <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-light\\\" (click)=\\\"modal.close('Close click')\\\">Close</button>\\n      </div>\\n    </ng-template>\\n    <ngx-spinner bdColor=\\\"rgba(51, 51, 51, 0.8)\\\" size=\\\"default\\\" type=\\\"ball-spin-clockwise\\\">  \\n      <p style=\\\"color: white\\\">Please Wait. </p>  \\n      </ngx-spinner> \\n  \\n  \\n\"","export default \"<p>\\n  OrderStatus works!\\n</p>\\n\"","export default \"<p>\\n  Orders works!\\n</p>\\n\"","export default \"\\n\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-sm-12\\\">\\n<!-- Hover table card start -->\\n<app-card [title]=\\\"'Orders'\\\" [classHeader]=\\\"true\\\" [blockClass]=\\\"'table-border-style'\\\">\\n  <span class=\\\"code-header\\\">All POS Orders Detail </span>\\n\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-sm-12\\\" >\\n     \\n    </div>\\n    <div class=\\\"col-sm-12\\\" >\\n      \\n      <div class=\\\"col-sm-2\\\" style=\\\"float: right;\\\">\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"ordercode\\\" (ngModelChange)=\\\"SearchRider()\\\" placeholder=\\\"Enter Order No. to search\\\" >\\n           \\n         \\n     </div>\\n    </div>\\n  </div>\\n  <div class=\\\"table-responsive\\\" style=\\\"padding: 2%;\\\">\\n    <table class=\\\"table table-hover\\\">\\n      <thead>\\n      <tr>\\n        <th (click)=\\\"Sort('id')\\\">#<i class=\\\"fa fa-sort\\\"></i></th>\\n        <th (click)=\\\"Sort('orderId')\\\">Order No.<i class=\\\"fa fa-sort\\\"></i></th>\\n    \\n        <th (click)=\\\"Sort('billinginfo.percentageDiscount')\\\">Date<i class=\\\"fa fa-sort\\\"></i></th>\\n        <th (click)=\\\"Sort('billinginfo.subtotal')\\\">Sub Total<i class=\\\"fa fa-sort\\\"></i></th>\\n        <th (click)=\\\"Sort('billinginfo.subtotal')\\\">Discount<i class=\\\"fa fa-sort\\\"></i></th>\\n\\n      <th (click)=\\\"Sort('billinginfo.grandTotal')\\\">Grand Total<i class=\\\"fa fa-sort\\\"></i></th>\\n      <th (click)=\\\"Sort('Action')\\\">Action<i class=\\\"fa fa-sort\\\"></i></th>\\n      <!-- <th>Image</th> -->\\n      </tr>\\n      </thead>\\n      <tbody>\\n      <tr *ngFor=\\\"let obj of SearchOrdersList | paginate:{itemsPerPage:10,currentPage:p}; let i=index;\\\" >\\n        <td style=\\\"width: 2px;\\\">{{i+1}}</td>\\n        <td>{{obj.ordercode}}</td>\\n     \\n        <td>{{obj.date}}</td>\\n       \\n      \\n     \\n        <td>{{obj.billinginfo?.subtotal}}</td>\\n        <td>{{obj.billinginfo?.discounted_Amount}}</td>\\n        <td>{{obj.billinginfo?.grandTotal}}</td>\\n    \\n       <td>  <div class=\\\"row\\\">\\n\\n        <div style=\\\"padding: 4px;\\\">\\n          <i class=\\\"fa fa-desktop\\\" aria-hidden=\\\"true\\\" style=\\\"font-size:18px;color:rgb(255, 0, 0)\\\"  (click)=\\\"openOrderDetailLg(OrderDetailcontent,obj.orderId)\\\" ></i> \\n        </div>\\n        <!-- <div style=\\\"padding: 4px;\\\">\\n          <i class=\\\"fa fa-edit\\\" aria-hidden=\\\"true\\\" style=\\\"font-size:18px;color:rgb(113, 147, 240)\\\"  (click)=\\\"openOrderUpdateLg(EditStatuscontent,obj.orderId)\\\" ></i> \\n        </div> -->\\n    </div></td>\\n      </tr>\\n     \\n      </tbody>\\n    \\n    </table>\\n    <div class=\\\"row\\\">\\n      <div style=\\\"right: 10%;\\\">\\n        <pagination-controls (pageChange)=\\\"p=$event\\\"></pagination-controls>\\n    </div>\\n  </div>\\n  </div>\\n</app-card>\\n<!-- Hover table card end -->\\n      </div>\\n    </div>\\n\\n    <ng-template #OrderDetailcontent let-modal>\\n      \\n      <div class=\\\"modal-header\\\">\\n        <h4 class=\\\"modal-title\\\">Order Detail</h4>\\n      \\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        <div class=\\\"table-responsive\\\">\\n          <table class=\\\"table table-hover\\\">\\n      <thead>\\n           <tr>\\n             <th>Product Name</th>\\n             <th>Barcode</th>\\n             <th>Qty</th>\\n             <th>Unit Price</th>\\n             <th>Total price</th>\\n           </tr>\\n      </thead>\\n      <tbody *ngFor=\\\"let obj of orderitemns\\\">\\n        <tr>\\n          <th>{{obj?.productName}}</th>\\n          <th>{{obj?.barcode}}</th>\\n          <th>{{obj?.qty}}</th>\\n          <th>{{obj?.price}}</th>\\n          <th>{{obj?.totalprice}}</th>\\n        </tr>\\n      </tbody>\\n    </table>\\n           </div>\\n    \\n      </div>\\n      <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-light\\\" (click)=\\\"modal.close('Close click')\\\">Close</button>\\n      </div>\\n    </ng-template>\\n    <ngx-spinner bdColor=\\\"rgba(51, 51, 51, 0.8)\\\" size=\\\"default\\\" type=\\\"ball-spin-clockwise\\\">  \\n      <p style=\\\"color: white\\\">Please Wait. </p>  \\n      </ngx-spinner> \\n  \\n  \\n  \\n  \\n  \\n\"","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from '../../../src/environments/environment.prod';\n\n@Injectable({\n  providedIn: 'root'\n})\n\n\nexport class OrderService {\n  \n  baseUrl = environment.apiurl + 'OrderApi/';\n  baseUrl2 = environment.apiurl + 'PosOrder/';\nconstructor(private http: HttpClient) { }\nGetOrders(){\n  return this.http.get<any>(this.baseUrl+'GetAllOrders',httpOptions)\n};\nGetPosOrders(){\n  return this.http.get<any>(this.baseUrl2+'GetPosOrders',httpOptions)\n};\nUpdateOrderStatus(form:any){\n  return this.http.post<any>(this.baseUrl+'OrderStatus',form)\n};\n};\nvar headers_object = new HttpHeaders({\n  'Content-Type': 'application/json',\n   'Authorization': \"Bearer \"+localStorage.getItem('token')\n});\nconst httpOptions = {\n  headers: headers_object\n};","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL09yZGVycy9BbGxPcmRlcnMvQWxsT3JkZXJzLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { OrderDto } from './../../../../../src/app/Models/OrderDto.Model';\nimport { OrderService } from '../../../../../src/app/_service/order.service';\nimport { items } from './../../../../../src/app/Models/items.Model';\nimport { NgxSpinnerService } from 'ngx-spinner';\n\n@Component({\n  selector: 'app-AllOrders',\n  templateUrl: './AllOrders.component.html',\n  styleUrls: ['./AllOrders.component.scss']\n})\nexport class AllOrdersComponent implements OnInit {\n  OrdersList:OrderDto[];\n  SearchOrdersList:OrderDto[];\n  key:string='rowid';\n  reverse:boolean=false;\n  p:number=1;\n  form: FormGroup;\n  orderid:number;\n  orderitemns:items[];\n  neworderdata:any;\n  vendorname:string;\n  statusorderid:number;\n  status:string;\n  ordercurrentstatus:string;\n  ss:boolean=false;\n  orderstatus:FormGroup=new FormGroup({\n    orderId:new FormControl(''),\n    status: new FormControl('')\n  \n   });\n  constructor(private SpinnerService: NgxSpinnerService,private orderservice:OrderService,private modalService: NgbModal,) { }\n\n  ngOnInit() {\n   \n    this.GetOrders();\n \n  \n  }\n  openOrderDetailLg(content,id:number) {\n    debugger;\n    var data=this.OrdersList.find(res=>res.orderId==id);\n    this.orderitemns=data.items;\n    \n    this.modalService.open(content, { size: 'lg' });\n  }\n  openOrderUpdateLg(content,id:number) {\n    debugger;\n   this.statusorderid=id;\n    var dd=this.SearchOrdersList.filter(x=>x.orderId==id);\n    this.ordercurrentstatus=dd[0].status;\n    this.modalService.open(content, { size: 'lg' });\n  }\n  onOptionsOrderStatusSelected(){\n\n    ((this.orderstatus.get('orderId').patchValue(this.statusorderid)));\n    this.orderservice.UpdateOrderStatus(this.orderstatus.value).subscribe((next:any) => {\n     this.OrdersList.forEach(x=>{if(x.orderId==this.statusorderid){x.status=this.orderstatus.value.status}})\n      this.modalService.dismissAll();\n      this.orderstatus.reset();\n\n    }, error => {\n      console.log(error);\n    });\n    \n  }\n  onOptionsSelected(num){\n    debugger;\n    if(num==\"0\"){\n      this.SearchOrdersList=this.OrdersList;\n    }\n    if(num==\"1\"){\n      this.status=\"Pending\";\n      this.SearchOrdersList=this.OrdersList.filter(x=>x.status==this.status);\n    }\n    if(num==\"2\"){\n      this.status=\"Active\";\n      this.SearchOrdersList=this.OrdersList.filter(x=>x.status==this.status);\n    }\n    if(num==\"3\"){\n      this.status=\"Completed\";\n      this.SearchOrdersList=this.OrdersList.filter(x=>x.status==this.status);\n    }\n    if(num==\"4\"){\n      this.status=\"Cancelled\";\n      this.SearchOrdersList=this.OrdersList.filter(x=>x.status==this.status);\n    }\n\n  }\n  SearchRider(){\n    if(this.vendorname==\"\"){\n      this.SearchOrdersList=this.OrdersList\n     }\n     else{\n       if(this.OrdersList!=null){\n         this.SearchOrdersList=this.OrdersList.filter(res=>{\n           return res.vendorname.match(this.vendorname)\n         })\n       }\n    \n     }\n  }\n  GetOrders(){\n    this.SpinnerService.show();\n    this.orderservice.GetOrders().subscribe((next:any) => {\n      this.OrdersList=[];\n      this.OrdersList=next.res;console.log(next.res);\n      this.SearchOrdersList=this.OrdersList;\n      this.SpinnerService.hide();\n      console.log(this.OrdersList)\n    }, error => {\n      console.log(error);\n    });\n \n  }\n\n  Sort(key){\n    this.key=key;\n    this.reverse=!this.reverse;\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AllOrdersComponent } from './AllOrders/AllOrders.component';\nimport { PosOrderComponent } from './PosOrder/PosOrder.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AllOrdersComponent,\n    data: {\n      breadcrumb: ' Orders',\n      icon: 'icofont-table bg-c-blue',\n      breadcrumb_caption: 'All Orders',\n      status: true\n    }\n  },\n  {\n    path: 'posorders',\n    component: PosOrderComponent,\n    data: {\n      breadcrumb: 'Pos Orders',\n      icon: 'icofont-table bg-c-blue',\n      breadcrumb_caption: 'All Pos Orders Detail',\n      status: true\n    }\n  },\n  \n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class OrderRoutingModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL09yZGVycy9PcmRlclN0YXR1cy9PcmRlclN0YXR1cy5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-OrderStatus',\n  templateUrl: './OrderStatus.component.html',\n  styleUrls: ['./OrderStatus.component.scss']\n})\nexport class OrderStatusComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL09yZGVycy9PcmRlcnMuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-Orders',\n  templateUrl: './Orders.component.html',\n  styleUrls: ['./Orders.component.scss']\n})\nexport class OrdersComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { OrdersComponent } from './Orders.component';\nimport { AllOrdersComponent } from './AllOrders/AllOrders.component';\nimport { OrderStatusComponent } from './OrderStatus/OrderStatus.component';\nimport { OrderRoutingModule } from './OrderRouting.routing';\nimport { SharedModule } from '../../../../src/app/shared/shared.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { NgxDropzoneModule } from 'ngx-dropzone';\nimport { Ng2SearchPipeModule } from 'ng2-search-filter';\nimport { NgxPaginationModule } from 'ngx-pagination';\nimport { PosOrderComponent } from './PosOrder/PosOrder.component';\nimport { NgxSpinnerModule, NgxSpinnerService } from 'ngx-spinner';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    OrderRoutingModule,\n    SharedModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    NgxDropzoneModule,\n    Ng2SearchPipeModule,\n    NgxPaginationModule,\n    NgxSpinnerModule,\n  ],\n  declarations: [OrdersComponent,AllOrdersComponent,OrderStatusComponent,PosOrderComponent],\n  providers: [\n    NgxSpinnerService\n    ]\n})\nexport class OrdersModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL09yZGVycy9Qb3NPcmRlci9Qb3NPcmRlci5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { OrderDto } from '../../../Models/OrderDto.Model';\nimport { OrderService } from '../../../_service/order.service';\nimport { items } from '../../../Models/items.Model';\nimport { PosServiceService } from '../../../_service/PosService.service';\nimport { NgxSpinnerService } from 'ngx-spinner';\n@Component({\n  selector: 'app-PosOrder',\n  templateUrl: './PosOrder.component.html',\n  styleUrls: ['./PosOrder.component.scss']\n})\nexport class PosOrderComponent implements OnInit {\n\n  OrdersList:OrderDto[];\n  SearchOrdersList:OrderDto[];\n  key:string='rowid';\n  reverse:boolean=false;\n  p:number=1;\n  form: FormGroup;\n  orderid:number;\n  orderitemns:items[];\n  neworderdata:any;\n  ordercode:string;\n  statusorderid:number;\n  status:string;\n  ss:boolean=false;\n \n  constructor(private SpinnerService: NgxSpinnerService,private orderservice:PosServiceService,private modalService: NgbModal,private posorderservice:OrderService) { }\n\n  ngOnInit() {\n    this.GetOrders();\n  \n  }\n  openOrderDetailLg(content,id:number) {\n    debugger;\n    var data=this.OrdersList.find(res=>res.orderId==id);\n    this.orderitemns=data.items;\n    \n    this.modalService.open(content, { size: 'lg' });\n  }\n  openOrderUpdateLg(content,id:number) {\n    debugger;\n   this.statusorderid=id;\n    \n    this.modalService.open(content, { size: 'lg' });\n  }\n \n \n  SearchRider(){\n    debugger;\n    if(this.ordercode==\"\"){\n      this.SearchOrdersList=this.OrdersList\n     }\n     else{\n       if(this.OrdersList!=null){\n         this.SearchOrdersList=this.OrdersList.filter(res=>{\n           return res.ordercode.toLocaleLowerCase().match(this.ordercode.toLocaleLowerCase())\n         })\n       }\n    \n     }\n  }\n  GetOrders(){\n    this.SpinnerService.show();\n    this.posorderservice.GetPosOrders().subscribe((next:any) => {\n      this.OrdersList=[];\n      this.OrdersList=next.res;\n      this.SpinnerService.hide();\n      this.SearchOrdersList=this.OrdersList;\n    \n      console.log(this.OrdersList)\n    }, error => {\n      console.log(error);\n    });\n  }\n\n  Sort(key){\n    this.key=key;\n    this.reverse=!this.reverse;\n  }\n\n}\n"],"sourceRoot":"webpack:///"}