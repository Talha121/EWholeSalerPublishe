{"version":3,"sources":["./src/app/pages/Brands/AllBrands/AllBrands.component.html","./src/app/pages/Brands/Brands.component.html","./src/app/Models/Brand.ts","./src/app/pages/Brands/AllBrands/AllBrands.component.scss","./src/app/pages/Brands/AllBrands/AllBrands.component.ts","./src/app/pages/Brands/BrandRouting.routing.ts","./src/app/pages/Brands/Brands.component.scss","./src/app/pages/Brands/Brands.component.ts","./src/app/pages/Brands/Brands.module.ts"],"names":[],"mappings":"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","file":"pages-Brands-Brands-module-es2015.js","sourcesContent":["export default \"\\n\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-sm-12\\\">\\n<!-- Hover table card start -->\\n<app-card [title]=\\\"'Brands'\\\" [classHeader]=\\\"true\\\" [blockClass]=\\\"'table-border-style'\\\">\\n  <span class=\\\"code-header\\\">All Brands Detail</span>\\n\\n  <div class=\\\"row\\\" *ngIf=\\\"!showform\\\">\\n    <div class=\\\"col-sm-10\\\" >\\n     <button class=\\\"btn btn-success pull-right\\\" (click)=\\\"showinput()\\\"> Add Brand</button>\\n    </div>\\n    \\n  </div>\\n  <div class=\\\"row\\\" *ngIf=\\\"showform\\\">\\n    <div class=\\\"col-sm-1\\\">\\n\\n    </div>\\n    <div class=\\\"col-sm-10\\\">\\n      <div class=\\\"row\\\">\\n        <form [formGroup]=\\\"brandform\\\">\\n          <div class=\\\"col-sm-12\\\">\\n            <!-- <label for=\\\"validationCustom01\\\">Brand Name(English)</label> -->\\n            <input type=\\\"text\\\" placeholder=\\\"Brand Name(English)\\\"  formControlName=\\\"brandNameEng\\\"  class=\\\"form-control\\\" >\\n      </div>\\n      <br>\\n      <div class=\\\"col-sm-12\\\">\\n        <!-- <label for=\\\"validationCustom01\\\">Brand Name(Urdu)</label> -->\\n        <input type=\\\"text\\\" placeholder=\\\"Brand Name(Urdu)\\\" formControlName=\\\"brandNameUrdu\\\"   class=\\\"form-control\\\">\\n     </div>\\n     <br>\\n     <div class=\\\"col-sm-12\\\">\\n     <button class=\\\"btn btn-info\\\" (click)=\\\"AddBrand()\\\" type=\\\"submit\\\">Save</button>\\n     </div>\\n    </form>\\n        \\n      </div>\\n\\n    </div>\\n    <div class=\\\"col-sm-1\\\">\\n\\n    </div>\\n    \\n  </div>\\n  <div class=\\\"table-responsive\\\" style=\\\"padding: 2%;\\\">\\n    <table class=\\\"table table-hover\\\">\\n      <thead>\\n      <tr>\\n        <th (click)=\\\"Sort('id')\\\">#<i class=\\\"fa fa-sort\\\"></i></th>\\n        <th (click)=\\\"Sort('brandNameEng')\\\">Brand Name<i class=\\\"fa fa-sort\\\"></i></th>\\n        <th (click)=\\\"Sort('brandNameUrdu')\\\">Catehory Name(Urdu)<i class=\\\"fa fa-sort\\\"></i></th>\\n        <th (click)=\\\"Sort('brandImagePath')\\\">Image<i class=\\\"fa fa-sort\\\"></i></th>\\n        <th (click)=\\\"Sort('description')\\\">Actions<i class=\\\"fa fa-sort\\\"></i></th>\\n        <!-- <th>Image</th> -->\\n      </tr>\\n      </thead>\\n      <tbody>\\n      <tr *ngFor=\\\"let obj of brandsList |orderBy:key :reverse | paginate:{itemsPerPage:10,currentPage:p}; let i=index;\\\" >\\n        <td style=\\\"width: 2px;\\\">{{i+1}}</td>\\n        <td>{{obj.brandNameEng}}</td>\\n        <td>{{obj.brandNameUrdu}}</td>\\n        <td *ngIf=\\\"obj.brandImagePath!=noimage;else nImage\\\"><img [src]=\\\"ImagebaseUrl+obj.brandImagePath\\\" style=\\\"height: 40px;\\\" /></td>\\n        <ng-template #nImage>\\n          <td >No Image</td>\\n        </ng-template>\\n       <td>  <div class=\\\"row\\\">\\n\\n        <div style=\\\"padding: 4px;\\\">\\n      <i class=\\\"fa fa-upload\\\" aria-hidden=\\\"true\\\" style=\\\"font-size:18px;color:rgb(255, 0, 0)\\\" title=\\\"Upload Image\\\"  (click)=\\\"openLg(uploadfilecontent,obj.brandId)\\\"></i> \\n      </div>\\n      <div style=\\\"padding: 4px;\\\">\\n        <i class=\\\"fa fa-edit\\\" style=\\\"font-size:18px;color:rgb(0, 195, 255)\\\"(click)=\\\"UpdateView(Update,obj.brandId)\\\"></i>\\n      </div>\\n    </div></td>\\n      </tr>\\n     \\n      </tbody>\\n    \\n    </table>\\n    <div class=\\\"row\\\">\\n      <div style=\\\"right: 10%;\\\">\\n        <pagination-controls (pageChange)=\\\"p=$event\\\"></pagination-controls>\\n    </div>                \\n  </div>\\n  </div>\\n</app-card>\\n<!-- Hover table card end -->\\n      </div>\\n    </div>\\n\\n    <ng-template #uploadfilecontent let-modal>\\n      \\n      <div class=\\\"modal-header\\\">\\n        <h4 class=\\\"modal-title\\\">Upload file</h4>\\n      \\n      </div>\\n      <div class=\\\"modal-body\\\">\\n           \\n        <div class=\\\"container\\\">\\n          <form  [formGroup]=\\\"form\\\" (ngSubmit)=\\\"SubmitImage()\\\">\\n      \\n            <!-- Progress Bar -->\\n            <div class=\\\"progress form-group\\\" *ngIf=\\\"progress > 0\\\">\\n                <div class=\\\"progress-bar progress-bar-striped bg-success\\\" role=\\\"progressbar\\\" [style.width.%]=\\\"progress\\\">\\n                </div>\\n            </div>\\n    \\n            <div class=\\\"form-group\\\">\\n                <input type=\\\"file\\\" (change)=\\\"uploadFile($event)\\\" required>\\n            </div>\\n    \\n          \\n    \\n            <div class=\\\"form-group\\\">\\n                <button class=\\\"btn btn-danger btn-block btn-lg\\\" [disabled]=\\\"form.get('avatar')==null\\\">Upload</button>\\n            </div>\\n        </form>\\n      </div>\\n      </div>\\n      <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-light\\\" (click)=\\\"modal.close('Close click')\\\">Close</button>\\n      </div>\\n    </ng-template>\\n    <ngx-spinner bdColor=\\\"rgba(51, 51, 51, 0.8)\\\" size=\\\"default\\\" type=\\\"ball-spin-clockwise\\\">  \\n      <p style=\\\"color: white\\\">Please Wait. </p>  \\n      </ngx-spinner> \\n      <ng-template #Update let-modal>\\n        <div class=\\\"modal-header\\\">\\n          <h4 class=\\\"modal-title\\\">Update  Brand</h4>\\n        \\n        </div>\\n        <div class=\\\"modal-body\\\">\\n          <form class=\\\"needs-validation\\\" novalidate [formGroup]=\\\"brandform\\\">\\n            <div class=\\\"form-row\\\">\\n              <div class=\\\"col-md-5 mb-3\\\">\\n                <label for=\\\"validationCustom01\\\">Brand Name(English)</label>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"validationCustom01\\\" placeholder=\\\"Brand Name(English)\\\" formControlName=\\\"brandNameEng\\\"  required>\\n                \\n              </div>\\n              <div class=\\\"col-md-5 mb-3\\\">\\n                <label for=\\\"validationCustom01\\\">Brand Name(Urdu)</label>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"validationCustom01\\\" placeholder=\\\"Brand Name(Urdu)\\\" formControlName=\\\"brandNameUrdu\\\"  required>\\n                \\n              </div>\\n             \\n            </div>\\n\\n            \\n           \\n             \\n          \\n      \\n            <button style=\\\"float: right;\\\" class=\\\"btn btn-primary\\\"(click)=\\\"UpdateBrand()\\\" type=\\\"submit\\\">Submit</button>\\n          </form>\\n      \\n      \\n        \\n        </div>\\n        <div class=\\\"modal-footer\\\">\\n          <button type=\\\"button\\\" class=\\\"btn btn-light\\\" (click)=\\\"modal.close('Close click')\\\">Close</button>\\n        </div>\\n      </ng-template>\\n\"","export default \"<p>\\n  Brands works!\\n</p>\\n\"","export class Brand {\n    brandId:number=0;\nbrandImagePath:\"\";\nbrandNameEng:string\nbrandNameUrdu:string\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL0JyYW5kcy9BbGxCcmFuZHMvQWxsQnJhbmRzLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms';\nimport { FileuploadService } from '../../../../../src/app/_service/fileupload.service';\nimport { BrandService } from '../../../../../src/app/_service/brand.service';\nimport { HttpEvent, HttpEventType } from '@angular/common/http';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { Brand } from '../../../../../src/app/Models/Brand';\nimport { Router } from '@angular/router';\nimport { environment } from './../../../../../src/environments/environment.prod';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { AlertifyService } from '../../../../../src/app/_service/alertify.service';\nimport { ProductService } from '../../../../../src/app/_service/product.service';\n\n@Component({\n  selector: 'app-AllBrands',\n  templateUrl: './AllBrands.component.html',\n  styleUrls: ['./AllBrands.component.scss']\n})\nexport class AllBrandsComponent implements OnInit {\n  form: FormGroup;\n  ImagebaseUrl = environment.Imagebaseurl + 'BrandImages/';\n brandsList:any;\n key:string='rowid';\n reverse:boolean=false;\n p:number=1;\n showform:boolean=false;\n progress: number = 0;\n brandId:number;\n singlebrand:Brand;\n image:any ;\n noimage=\"\";\n fileData: File = null;\n  constructor(private productservice:ProductService,private alertify: AlertifyService,private SpinnerService: NgxSpinnerService,private router: Router,private brandservice:BrandService,private modalService: NgbModal,private uploadfileservice:FileuploadService,private fb:FormBuilder,private brandmodal:Brand) { }\n  brandform:FormGroup=new FormGroup({\n    brandImagePath: new FormControl(this.brandmodal.brandImagePath),\n    brandId: new FormControl(this.brandmodal.brandId),\n    brandNameEng: new FormControl(this.brandmodal.brandNameEng),\n    brandNameUrdu: new FormControl(this.brandmodal.brandNameUrdu),\n  \n   });\n   showinput()\n   {\n    this.showform=true;\n   }\n  ngOnInit() {\n\n    this.GetBrands();\n    this.form = this.fb.group({\n    \n      avatar: [null]\n    })\n   \n  }\n  UpdateView(content,id:number) {\n    var data=this.brandsList.find(res=>res.brandId==id);\n    debugger;\n    this.singlebrand=data;\n    this.brandform.setValue({\n      brandImagePath:this.singlebrand.brandImagePath,\n      brandId:this.singlebrand.brandId,\n      brandNameEng:this.singlebrand.brandNameEng,\n      brandNameUrdu:this.singlebrand.brandNameUrdu,\n    });\n  \n   \n      this.modalService.open(content, { size: 'lg' });\n    }\n    UpdateBrand(){\n      debugger;\n     this.productservice.UpdateBrand(this.brandform.value).subscribe(next => {\n    \n      this.modalService.dismissAll();\n       this.brandform.reset();\n       this.GetBrands();\n       this.alertify.success('Brand Updated seccussfully');\n      \n     }, error => {\n     \n       console.log(error);\n     });\n      console.log(this.brandform.value)\n    }\n    AddBrand(){\n      debugger;\n     this.brandservice.AddBrand(this.brandform.value).subscribe(next => {\n    \n      this.modalService.dismissAll();\n       this.brandform.reset();\n       this.showform=false;\n       this.GetBrands();\n       this.alertify.success('Brand Add seccussfully');\n      \n     }, error => {\n      this.alertify.error('already exists');\n       console.log(error);\n     });\n    }\n  \n  GetBrands(){\n    this.SpinnerService.show();\n    this.brandservice.GetBrands().subscribe((next:any) => {\n      this.brandsList=[];\n      this.brandsList=next.resp;\n      console.log(this.brandsList);\n      this.SpinnerService.hide();\n      \n    }, error => {\n      console.log(error);\n    });\n  }\n  Sort(key){\n    this.key=key;\n    this.reverse=!this.reverse;\n  }\n  openLg(content,id:number) {\n    debugger;\n    this.brandId=id;\n \n    this.modalService.open(content, { size: 'lg' });\n  }\n\n  uploadFile(event) {\n\n    const file = (event.target as HTMLInputElement).files[0];\n    this.form.patchValue({\n      avatar: file\n    });\n    this.form.get('avatar').updateValueAndValidity();\n   \n  }\n  \n  SubmitImage() {\n    this.SpinnerService.show();\n    if(this.form.value.avatar!=null){\n      var apipath=\"UploadImageBrand\";\n      \n      this.uploadfileservice.uploadbrandimage(\n     \n        this.form.value.avatar,apipath,\n        this.brandId\n      ).subscribe((event: HttpEvent<any>) => {\n        switch (event.type) {\n          case HttpEventType.Sent:\n            console.log('Request has been made!');\n            break;\n          case HttpEventType.ResponseHeader:\n            console.log('Response header has been received!');\n            this.form.reset();\n    this.modalService.dismissAll();\n            break;\n          case HttpEventType.UploadProgress:\n            this.progress = Math.round(event.loaded / event.total * 100);\n            console.log(`Uploaded! ${this.progress}%`);\n            break;\n          case HttpEventType.Response:\n            console.log('User successfully created!', event.body);\n            setTimeout(() => {\n              this.progress = 0;\n            }, 1500);\n    \n        }\n        this.GetBrands();\n      })\n    }\n    this.SpinnerService.hide();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AllBrandsComponent } from './AllBrands/AllBrands.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AllBrandsComponent,\n    data: {\n      breadcrumb: 'Brands',\n      icon: 'icofont-table bg-c-blue',\n      breadcrumb_caption: 'All Brands Detail',\n      status: true\n    }\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class BrandRoutingModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL0JyYW5kcy9CcmFuZHMuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-Brands',\n  templateUrl: './Brands.component.html',\n  styleUrls: ['./Brands.component.scss']\n})\nexport class BrandsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BrandsComponent } from './Brands.component';\nimport { BrandRoutingModule } from './BrandRouting.routing';\nimport { AllBrandsComponent } from './AllBrands/AllBrands.component';\nimport { SharedModule } from '../../../../src/app/shared/shared.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { NgxDropzoneModule } from 'ngx-dropzone';\nimport { Ng2OrderModule } from 'ng2-order-pipe';\nimport { Ng2SearchPipeModule } from 'ng2-search-filter';\nimport { NgxPaginationModule } from 'ngx-pagination';\nimport { Brand } from '../../../../src/app/Models/Brand';\nimport { NgxSpinnerModule, NgxSpinnerService } from 'ngx-spinner';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    BrandRoutingModule,\n    SharedModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    NgxDropzoneModule,\n    Ng2OrderModule,\n    NgxSpinnerModule,\n    Ng2SearchPipeModule,\n    NgxPaginationModule\n  ],\n  declarations: [BrandsComponent,AllBrandsComponent],\n  providers: [\n    Brand,NgxSpinnerService\n    ]\n})\nexport class BrandsModule { }\n"],"sourceRoot":"webpack:///"}