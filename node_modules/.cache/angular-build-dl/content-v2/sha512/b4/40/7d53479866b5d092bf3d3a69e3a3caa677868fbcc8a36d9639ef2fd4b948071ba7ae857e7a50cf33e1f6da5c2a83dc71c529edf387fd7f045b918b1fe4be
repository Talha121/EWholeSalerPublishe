{"version":3,"sources":["./node_modules/ng2-order-pipe/dist/index.js","./node_modules/ng2-order-pipe/dist/src/ng2-order.module.js","./node_modules/ng2-order-pipe/dist/src/ng2-order.pipe.js","./src/app/pages/Salesman/AddSalesman/AddSalesman.component.html","./src/app/pages/Salesman/AllSalesmans/AllSalesmans.component.html","./src/app/pages/Salesman/Salesman.component.html","./src/app/Models/Salesman.ts","./src/app/_service/salesman.service.ts","./src/app/pages/Salesman/AddSalesman/AddSalesman.component.scss","./src/app/pages/Salesman/AddSalesman/AddSalesman.component.ts","./src/app/pages/Salesman/AllSalesmans/AllSalesmans.component.scss","./src/app/pages/Salesman/AllSalesmans/AllSalesmans.component.ts","./src/app/pages/Salesman/Salesman.component.scss","./src/app/pages/Salesman/Salesman.component.ts","./src/app/pages/Salesman/Salesman.module.ts","./src/app/pages/Salesman/Salesmanrouting.routing.ts"],"names":[],"mappings":";;;;;;;;;;AAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,mBAAO,CAAC,0FAAwB;AACzC,SAAS,mBAAO,CAAC,sFAAsB;AACvC,iC;;;;;;;;;;;;ACTa;AACb;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AACA,aAAa,mBAAO,CAAC,oEAAe;AACpC,uBAAuB,mBAAO,CAAC,kFAAkB;AACjD;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,4C;;;;;;;;;;;;ACxBa;AACb;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA,aAAa,mBAAO,CAAC,oEAAe;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,8CAA8C,OAAO;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,2BAA2B;AAC9C;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,0C;;;;;;;;;;;;ACtHA;AAAe,omGAAqiG,+yBAA+yB,+BAA+B,aAAa,mCAAmC,KAAK,KAAK,4CAA4C,qCAAqC,4DAA4D,iCAAiC,6CAA6C,2CAA2C,mDAAmD,iCAAiC,4IAA4I,oBAAoB,0gBAA0gB,kIAAkI,01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","file":"pages-Salesman-Salesman-module-es2015.js","sourcesContent":["\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\n/**\n * Created by vadimdez on 20/01/2017.\n */\n__export(require(\"./src/ng2-order.module\"));\n__export(require(\"./src/ng2-order.pipe\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/**\n * Created by vadimdez on 20/01/2017.\n */\nvar core_1 = require(\"@angular/core\");\nvar ng2_order_pipe_1 = require(\"./ng2-order.pipe\");\nvar Ng2OrderModule = (function () {\n    function Ng2OrderModule() {\n    }\n    return Ng2OrderModule;\n}());\nNg2OrderModule = __decorate([\n    core_1.NgModule({\n        declarations: [ng2_order_pipe_1.Ng2OrderPipe],\n        exports: [ng2_order_pipe_1.Ng2OrderPipe]\n    })\n], Ng2OrderModule);\nexports.Ng2OrderModule = Ng2OrderModule;\n//# sourceMappingURL=ng2-order.module.js.map","\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar core_1 = require(\"@angular/core\");\nvar Ng2OrderPipe = Ng2OrderPipe_1 = (function () {\n    function Ng2OrderPipe() {\n    }\n    Ng2OrderPipe.prototype.transform = function (value, expression, reverse) {\n        if (!value) {\n            return value;\n        }\n        var isArray = value instanceof Array;\n        if (isArray) {\n            return this.sortArray(value, expression, reverse);\n        }\n        if (typeof value === 'object') {\n            return this.transformObject(value, expression, reverse);\n        }\n        return value;\n    };\n    /**\n     * Sort array\n     *\n     * @param value\n     * @param expression\n     * @param reverse\n     * @returns {any[]}\n     */\n    Ng2OrderPipe.prototype.sortArray = function (value, expression, reverse) {\n        var array = value.sort(function (a, b) {\n            if (!expression) {\n                return a > b ? 1 : -1;\n            }\n            return a[expression] > b[expression] ? 1 : -1;\n        });\n        if (reverse) {\n            return array.reverse();\n        }\n        return array;\n    };\n    /**\n     * Transform Object\n     *\n     * @param value\n     * @param expression\n     * @param reverse\n     * @returns {any[]}\n     */\n    Ng2OrderPipe.prototype.transformObject = function (value, expression, reverse) {\n        var parsedExpression = Ng2OrderPipe_1.parseExpression(expression);\n        var lastPredicate = parsedExpression.pop();\n        var oldValue = Ng2OrderPipe_1.getValue(value, parsedExpression);\n        if (!(oldValue instanceof Array)) {\n            parsedExpression.push(lastPredicate);\n            lastPredicate = null;\n            oldValue = Ng2OrderPipe_1.getValue(value, parsedExpression);\n        }\n        if (!oldValue) {\n            return value;\n        }\n        var newValue = this.transform(oldValue, lastPredicate, reverse);\n        Ng2OrderPipe_1.setValue(value, newValue, parsedExpression);\n        return value;\n    };\n    /**\n     * Parse expression, split into items\n     * @param expression\n     * @returns {string[]}\n     */\n    Ng2OrderPipe.parseExpression = function (expression) {\n        expression = expression.replace(/\\[(\\w+)\\]/g, '.$1');\n        expression = expression.replace(/^\\./, '');\n        return expression.split('.');\n    };\n    /**\n     * Get value by expression\n     *\n     * @param object\n     * @param expression\n     * @returns {any}\n     */\n    Ng2OrderPipe.getValue = function (object, expression) {\n        for (var i = 0, n = expression.length; i < n; ++i) {\n            var k = expression[i];\n            if (!(k in object)) {\n                return;\n            }\n            object = object[k];\n        }\n        return object;\n    };\n    /**\n     * Set value by expression\n     *\n     * @param object\n     * @param value\n     * @param expression\n     */\n    Ng2OrderPipe.setValue = function (object, value, expression) {\n        var i;\n        for (i = 0; i < expression.length - 1; i++) {\n            object = object[expression[i]];\n        }\n        object[expression[i]] = value;\n    };\n    return Ng2OrderPipe;\n}());\nNg2OrderPipe = Ng2OrderPipe_1 = __decorate([\n    core_1.Pipe({\n        name: 'orderBy'\n    })\n], Ng2OrderPipe);\nexports.Ng2OrderPipe = Ng2OrderPipe;\nvar Ng2OrderPipe_1;\n//# sourceMappingURL=ng2-order.pipe.js.map","export default \"\\n\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-sm-12\\\">\\n<!-- Hover table card start -->\\n<app-card [title]=\\\"'Salesman'\\\" [classHeader]=\\\"true\\\" [blockClass]=\\\"'table-border-style'\\\">\\n  <span class=\\\"code-header\\\">All salesman Detail</span>\\n<div [formGroup]=\\\"AddSalesmanForm\\\" *ngIf=\\\"trigger\\\" >\\n  <div class=\\\"row\\\" >\\n    <div class=\\\"col-md-1\\\">\\n\\n    </div>\\n    <div class=\\\"col-sm-11 fa-pull-right\\\" >\\n \\n       <div class=\\\"row\\\">\\n            \\n             <div class=\\\"col-md-3\\\">\\n              <label for=\\\"usr\\\">Name:</label>\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"name\\\" >\\n              </div>\\n               <div class=\\\"col-md-3\\\">\\n                <label for=\\\"usr\\\">Contact No:</label>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"contact_Number\\\" >\\n             </div> \\n             <div class=\\\"col-md-3\\\">\\n              <label for=\\\"usr\\\">Email:</label>\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"email\\\" >\\n           </div> \\n       \\n      <div class=\\\"col-md-1\\\">\\n\\n        </div> \\n          \\n     </div>\\n    </div>\\n  </div>\\n <div class=\\\"row\\\" >\\n    <div class=\\\"col-md-1\\\">\\n\\n    </div>\\n    <div class=\\\"col-sm-11 fa-pull-right\\\" >\\n \\n       <div class=\\\"row\\\">\\n             <div class=\\\"col-md-3\\\">\\n              <label for=\\\"usr\\\">CNIC:</label>\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"cnic\\\">\\n                \\n             </div>\\n             <div class=\\\"col-md-3\\\">\\n              <label for=\\\"usr\\\">Address:</label>\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"address\\\">\\n      \\n          </div>\\n          <div class=\\\"col-md-3\\\">\\n            <label for=\\\"usr\\\">Gender:</label>\\n            <select  formControlName=\\\"gender\\\" class=\\\"form-control\\\">\\n              <option disabled>Select Gender</option>\\n                     <option value=\\\"Male\\\">Male</option>\\n                     <option value=\\\"Female\\\">Female</option>\\n            </select >\\n          \\n         \\n        </div>\\n      \\n    <div class=\\\"col-md-1\\\">\\n\\n    </div>\\n         \\n     </div>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\" >\\n    <div class=\\\"col-md-1\\\">\\n\\n    </div>\\n    <div class=\\\"col-sm-11 fa-pull-right\\\" >\\n \\n       <div class=\\\"row\\\">\\n        \\n        <div class=\\\"col-md-3\\\">\\n          <label for=\\\"usr\\\">Password:</label>\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"password\\\">\\n       \\n      </div>\\n    <div class=\\\"col-md-1\\\">\\n\\n    </div>\\n         \\n     </div>\\n    </div>\\n  </div>\\n  <br>\\n  <div class=\\\"row\\\">\\n<div class=\\\"col-md-11\\\">\\n  <button class=\\\"btn btn-success pull-right\\\" (click)=\\\"AddSalesman()\\\">Save</button> \\n</div>\\n  </div>\\n\\n</div>\\n<div *ngIf=\\\"!trigger\\\">\\n<div class=\\\"row\\\">\\n<div class=\\\"col-md-11\\\">\\n  <button class=\\\"btn btn-info pull-right\\\" (click)=\\\"ViewForm()\\\">Add Salesman</button> \\n</div>\\n</div>\\n</div>\\n<div >\\n\\n</div>\\n<br>\\n<div class=\\\"table-responsive\\\"style=\\\"padding: 2%;\\\">\\n  <table class=\\\"table table-hover\\\">\\n    <thead>\\n    <tr>\\n   \\n      <th (click)=\\\"Sort('id')\\\">#<i class=\\\"fa fa-sort\\\"></i></th>\\n      <th (click)=\\\"Sort('salesMan_UserName')\\\">User Name<i class=\\\"fa fa-sort\\\"></i></th>\\n      <th (click)=\\\"Sort('salesMan_Name')\\\"> Name<i class=\\\"fa fa-sort\\\"></i></th>\\n      <th (click)=\\\"Sort('salesMan_Contact_Number')\\\">Cell No<i class=\\\"fa fa-sort\\\"></i></th>\\n\\n      <th (click)=\\\"Sort('salesMan_Cnic')\\\">CNIC<i class=\\\"fa fa-sort\\\"></i></th>\\n      <th (click)=\\\"Sort('salesMan_Cnic')\\\">Registered Shops<i class=\\\"fa fa-sort\\\"></i></th>\\n      <th (click)=\\\"Sort('action')\\\">Action<i class=\\\"fa fa-sort\\\"></i></th>\\n      <!-- <th>Image</th> -->\\n    </tr>\\n    </thead>\\n    <tbody>\\n    <tr *ngFor=\\\"let obj of SalesmanList |orderBy:key :reverse | paginate:{itemsPerPage:10,currentPage:p}; let i=index;\\\" >\\n      <td style=\\\"width: 2px;\\\">{{i+1}}</td>\\n      \\n      <td>\\n        <span >{{obj.salesmanInfo?.salesMan_UserName}}</span>\\n      \\n     </td>\\n        <td>\\n        <span >{{obj.salesmanInfo?.salesMan_Name}}</span>\\n    </td>\\n    <td>\\n      <span >{{obj.salesmanInfo?.salesMan_Contact_Number}}</span>\\n  </td>\\n   \\n      <td>\\n        <span>{{obj.salesmanInfo?.salesMan_Cnic}}</span>\\n    </td>\\n    <td>\\n      <span>\\n        <i aria-hidden=\\\"true\\\"   (click)=\\\"openLg(Showdetail,obj.salesmanInfo.salesMan_id)\\\">{{obj.venders.length}}</i>\\n      </span>\\n  </td>\\n \\n     <td> \\n     \\n      <h5 >\\n        <button (click)=\\\"clickFunction(obj.salesmanInfo.salesMan_id)\\\" *ngIf=\\\"!obj.salesmanInfo.salesMan_Status\\\" class=\\\" btn btn-default-outline btn-xs\\\"><img src=\\\"assets/images/off.png\\\" title=\\\"Active Vendor\\\" ></button>  \\n        <button (click)=\\\"clickFunction(obj.salesmanInfo.salesMan_id)\\\" *ngIf=\\\"obj.salesmanInfo.salesMan_Status\\\" class=\\\"btn btn-default-outline\\\"><img src=\\\"assets/images/on.png\\\" title=\\\"DeActive Vendor\\\" ></button> &nbsp;\\n     \\n       </h5>\\n   </td>\\n    </tr>\\n   \\n    </tbody>\\n  \\n  </table>\\n  <div class=\\\"row\\\">\\n    <div style=\\\"right: 10%;\\\">\\n      <pagination-controls (pageChange)=\\\"p=$event\\\"></pagination-controls>\\n  </div>\\n</div>\\n</div>\\n\\n</app-card>\\n      </div>\\n    </div>\\n  \\n    <ng-template #Showdetail let-modal>\\n      \\n      <div class=\\\"modal-header\\\">\\n        <h4 class=\\\"modal-title\\\">Vendors Detail</h4>\\n      \\n      </div>\\n      <div class=\\\"modal-body table-responsive\\\">\\n           <table class=\\\"table table-bordered\\\">\\n            <thead>\\n              <tr>\\n                \\n                  <th>Store Name</th>\\n                  <th>Name</th>\\n                  <th>Contact No</th>\\n                  <th>CNIC NO</th>\\n                  <th>Address</th>\\n              </tr>\\n            </thead>\\n            <tbody>\\n              <tr *ngFor=\\\"let item of data\\\">\\n                  <th [routerLink]=\\\"['/allvendors/venderDetails',item?.vender_id]\\\">{{item?.storeName}}</th>\\n                  <th [routerLink]=\\\"['/allvendors/venderDetails',item.vender_id]\\\">{{item?.vender_Name}}</th>\\n                  <th>{{item?.vender_Contact_Number}}</th>\\n                  <th>{{item?.vender_Cnic}}</th>\\n                  <th>\\n                    <div class=\\\"row\\\">\\n                       <div class=\\\"col-md-12\\\">\\n                        {{item?.vender_Address}}\\n                       </div>\\n                    </div>\\n                  </th>\\n              </tr>\\n            </tbody>\\n           </table>\\n       \\n      </div>\\n      <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-light\\\" (click)=\\\"modal.close('Close click')\\\">Close</button>\\n      </div>\\n    </ng-template>\\n    <ngx-spinner bdColor=\\\"rgba(51, 51, 51, 0.8)\\\" size=\\\"default\\\" type=\\\"ball-spin-clockwise\\\">  \\n      <p style=\\\"color: white\\\">Please Wait. </p>  \\n      </ngx-spinner> \\n\\n\\n  \\n\"","export default \"\\n\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-sm-12\\\">\\n<!-- Hover table card start -->\\n<app-card [title]=\\\"'Salesman'\\\" [classHeader]=\\\"true\\\" [blockClass]=\\\"'table-border-style'\\\">\\n  <span class=\\\"code-header\\\">All salesman Detail</span>\\n\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-sm-12\\\" >\\n      <div class=\\\"col-sm-2\\\" style=\\\"float: right;padding-bottom: 8px;\\\">\\n       \\n         \\n     </div>\\n    </div>\\n  </div>\\n\\n\\n  <div class=\\\"table-responsive\\\"style=\\\"padding: 2%;\\\">\\n    <table class=\\\"table table-hover\\\">\\n      <thead>\\n      <tr>\\n     \\n        <th (click)=\\\"Sort('id')\\\">#<i class=\\\"fa fa-sort\\\"></i></th>\\n        <th (click)=\\\"Sort('user_Name')\\\">User Name<i class=\\\"fa fa-sort\\\"></i></th>\\n        <th (click)=\\\"Sort('name')\\\"> Name<i class=\\\"fa fa-sort\\\"></i></th>\\n        <th (click)=\\\"Sort('contact_Number')\\\">Cell No<i class=\\\"fa fa-sort\\\"></i></th>\\n        <th (click)=\\\"Sort('email')\\\">Email<i class=\\\"fa fa-sort\\\"></i></th>\\n        <th (click)=\\\"Sort('cnic')\\\">CNIC<i class=\\\"fa fa-sort\\\"></i></th>\\n        <th (click)=\\\"Sort('action')\\\">Action<i class=\\\"fa fa-sort\\\"></i></th>\\n        <!-- <th>Image</th> -->\\n      </tr>\\n      </thead>\\n      <tbody>\\n      <tr *ngFor=\\\"let obj of SalesmanList |orderBy:key :reverse | paginate:{itemsPerPage:10,currentPage:p}; let i=index;\\\" [formGroup]=\\\"AddSalesmanForm\\\" >\\n        <td style=\\\"width: 2px;\\\">{{i+1}}</td>\\n        \\n        <td>\\n          <span [hidden]=\\\"obj.inedit\\\">{{obj.user_Name}}</span>\\n        \\n        <input type=\\\"text\\\"  [hidden]=\\\"!obj.inedit\\\" class=\\\"form-control\\\"  formControlName=\\\"user_Name\\\" value=\\\"{{obj.user_Name}}\\\"/>\\n        </td>\\n          <td>\\n          <span [hidden]=\\\"obj.inedit\\\">{{obj.name}}</span>\\n          <input type=\\\"text\\\" [hidden]=\\\"!obj.inedit\\\" class=\\\"form-control\\\"  formControlName=\\\"name\\\"  value=\\\"{{obj.name}}\\\"/>\\n        </td>\\n        <td>\\n          <span [hidden]=\\\"obj.inedit\\\">{{obj.email}}</span>\\n          <input type=\\\"text\\\" [hidden]=\\\"!obj.inedit\\\" class=\\\"form-control\\\"  formControlName=\\\"email\\\"  value=\\\"{{obj.email}}\\\"/>\\n        </td>\\n        <td>\\n          <span [hidden]=\\\"obj.inedit\\\">{{obj.cnic}}</span>\\n          <input type=\\\"text\\\" [hidden]=\\\"!obj.inedit\\\" class=\\\"form-control\\\"  formControlName=\\\"email\\\"  value=\\\"{{obj.cnic}}\\\"/>\\n        </td>\\n       <td> \\n       \\n  \\n          <div class=\\\"row\\\">\\n \\n        <!-- <div style=\\\"padding: 4px;\\\">\\n          <p class=\\\"fa fa-edit\\\" style=\\\"font-size: 20px;color:blue\\\" [hidden]=\\\"obj.inedit\\\" title=\\\"Edit or Update\\\"  (click)=\\\"onEditClick($event, i,obj.category_Id)\\\" data-toggle=\\\"modal\\\"\\n          data-target=\\\"#editModal\\\">&nbsp;</p>\\n          <p class=\\\"fa fa-save\\\"  [hidden]=\\\"!obj.inedit\\\" title=\\\"Save Changes\\\" style=\\\"font-size: 20px;color:green\\\"  (click)=\\\"UpdateCategory()\\\">&nbsp;</p>\\n          <p class=\\\"fa fa-close\\\"  [hidden]=\\\"!obj.inedit\\\" title=\\\"Cancel\\\" style=\\\"font-size: 20px;color:brown(247, 241, 241)\\\" (click)=\\\"onCancelClick(i)\\\" data-toggle=\\\"modal\\\"\\n        data-target=\\\"#editModal\\\"> &nbsp;</p>\\n          <i class=\\\"fa fa-upload\\\" aria-hidden=\\\"true\\\" style=\\\"font-size:18px;color:rgb(0, 47, 255)\\\" title=\\\"Upload Image\\\"  (click)=\\\"openLg(uploadfilecontent,obj.category_Id)\\\">&nbsp;</i> \\n          <i class=\\\"fa fa-trash\\\" aria-hidden=\\\"true\\\" style=\\\"font-size:18px;color:rgb(255, 0, 0)\\\" title=\\\"Delete\\\"  (click)=\\\"openLg()\\\"(click)=\\\"onCancelClick(i)\\\" data-toggle=\\\"modal\\\"\\n          data-target=\\\"#editModal\\\"></i>\\n        </div> -->\\n    </div></td>\\n      </tr>\\n     \\n      </tbody>\\n    \\n    </table>\\n    <div class=\\\"row\\\">\\n      <div style=\\\"right: 10%;\\\">\\n        <pagination-controls (pageChange)=\\\"p=$event\\\"></pagination-controls>\\n    </div>\\n  </div>\\n  </div>\\n</app-card>\\n<!-- Hover table card end -->\\n      </div>\\n    </div>\\n  \\n    <ng-template #uploadfilecontent let-modal>\\n      \\n      <div class=\\\"modal-header\\\">\\n        <h4 class=\\\"modal-title\\\">Upload file</h4>\\n      \\n      </div>\\n      <div class=\\\"modal-body\\\">\\n           \\n        <div class=\\\"container\\\">\\n     \\n      </div>\\n      </div>\\n      <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-light\\\" (click)=\\\"modal.close('Close click')\\\">Close</button>\\n      </div>\\n    </ng-template>\\n  \\n\"","export default \"<p>\\n  Salesman works!\\n</p>\\n\"","export class Salesman {\n    user_id:number;\n    user_Name:string;\n    name:string;\n    contact_Number:string;\n    block: string;\n    email:string;\n    cnic:string;\n    address:string;\n    gender:string;\n    password:string;\n    status:boolean;\n    salesMan_Status:boolean;\n    type:string=\"SalesMan\";\n    dateTime:Date;\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { environment } from '../../../src/environments/environment.prod';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SalesmanService {\n  baseUrl = environment.apiurl + 'Auth/';\n  baseUrl2 = environment.apiurl + 'UsersApi/';\nconstructor(private http: HttpClient) { }\n\nAddSalesman(form: any){\n  return this.http.post<any>(this.baseUrl+'Register', form)\n};\nGetSalemans(){\n  return this.http.get<any>(this.baseUrl2+'AllSalesmans')\n};\nUpdatestatus(Id:number):Observable<any>{\ndebugger;\n  return this.http.post<any>(this.baseUrl2+'StatusChangesalesman', Id)}\n\n\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL1NhbGVzbWFuL0FkZFNhbGVzbWFuL0FkZFNhbGVzbWFuLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { FormArray, FormBuilder, FormControl, FormGroup  } from '@angular/forms';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { Salesman } from '../../../../../src/app/Models/Salesman';\nimport { SalesmanService } from '../../../../../src/app/_service/salesman.service';\n\n@Component({\n  selector: 'app-AddSalesman',\n  templateUrl: './AddSalesman.component.html',\n  styleUrls: ['./AddSalesman.component.scss']\n})\nexport class AddSalesmanComponent implements OnInit {\n  SalesmanList:Salesman[];\n  key:string='rowid';\n  reverse:boolean=false;\n  p:number=1;\n  trigger:boolean=false;\n  progress: number = 0;\n  salesmanId:number;\n  vendorsdetail:any;\n  salesmans:any[];\n  data:any;\n  constructor( private SpinnerService: NgxSpinnerService,private salemanservice:SalesmanService,public salesmanmodal:Salesman,private modalService: NgbModal,private fb:FormBuilder) { }\n\n  ngOnInit() {\n    this.Getsalesmans();\n  }\n  Sort(key){\n    this.key=key;\n    this.reverse=!this.reverse;\n  }\n  ViewForm(){\n    this.trigger=true;\n  \n  }\n  AddSalesman(){\n    this.SpinnerService.show();\n    this.trigger=false;\n    console.log(this.AddSalesmanForm.value)\n   this.salemanservice.AddSalesman(this.AddSalesmanForm.value).subscribe(next => {\n    this.SpinnerService.hide();\n     this.AddSalesmanForm.reset();\n\n     this.Getsalesmans();\n   }, error => {\n     console.log(error);\n   });\n  }\n  clickFunction(id:number) {\n    this.salemanservice.Updatestatus(id).subscribe((next:any)=>{\n      this.Getsalesmans();\n      // this.SalesmanList.forEach(x=>{if(x.user_id==id){x.salesMan_Status=!x.salesMan_Status}});\n    }, error => {\n      console.log(error);\n    });\n \n    \n  }\n\n  Getsalesmans(){\n    this.SpinnerService.show();\n    this.salemanservice.GetSalemans().subscribe((next:any) => {\n      this.SalesmanList=[];\n      this.SalesmanList=next.resp;\n      this.salesmans=this.SalesmanList;\n      this.SpinnerService.hide();\n    }, error => {\n      console.log(error);\n    });\n  }\n  openLg(Showdetail,id:number) {\n    debugger;\n    this.salesmanId=id;\n   this.vendorsdetail=this.salesmans.find(x=>x.salesmanInfo.salesMan_id==id);\n   \n   this.data=this.vendorsdetail.venders;\n   console.log(this.data);\n      this.modalService.open(Showdetail, { size: 'lg' });\n    \n  }\n  AddSalesmanForm:FormGroup=new FormGroup({\n    user_Name: new FormControl(this.salesmanmodal.user_Name),\n    name: new FormControl(this.salesmanmodal.name),\n     contact_Number: new FormControl(this.salesmanmodal.contact_Number),\n     email: new FormControl(this.salesmanmodal.email),\n     cnic: new FormControl(this.salesmanmodal.email),\n     address: new FormControl(this.salesmanmodal.address),\n     gender: new FormControl(this.salesmanmodal.gender),\n     password: new FormControl(this.salesmanmodal.password),\n    type: new FormControl(\"SalesMan\"),\n    // dateTime: new FormControl(this.salesmanmodal.dateTime),\n   });\n   \n   \n  \n        \n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL1NhbGVzbWFuL0FsbFNhbGVzbWFucy9BbGxTYWxlc21hbnMuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms';\nimport { Salesman } from '../../../../../src/app/Models/Salesman';\nimport { SalesmanService } from '../../../../../src/app/_service/salesman.service';\n\n@Component({\n  selector: 'app-AllSalesmans',\n  templateUrl: './AllSalesmans.component.html',\n  styleUrls: ['./AllSalesmans.component.scss']\n})\nexport class AllSalesmansComponent implements OnInit {\n  form: FormGroup;\n  SalesmanList:Salesman[];\n  key:string='rowid';\n  reverse:boolean=false;\n  p:number=1;\n  categotyid:number;\n  noimage=\"\";\n  trigger:boolean=false;\n  progress: number = 0;\n  constructor(private salemanservice:SalesmanService,private salesmanmodal:Salesman,private fb:FormBuilder) { }\n\n  ngOnInit() {\n    this.AddSalesman();\n    this.form = this.fb.group({\n    \n      avatar: [null]\n    })\n  }\n  AddSalesman(){\n    debugger;\n \n   this.salemanservice.AddSalesman(\"pakistan\").subscribe(next => {\n   }, error => {\n     console.log(error);\n   });\n  }\n  Sort(key){\n    this.key=key;\n    this.reverse=!this.reverse;\n  }\n  AddSalesmanForm:FormGroup=new FormGroup({\n    user_Name: new FormControl(this.salesmanmodal.user_Name),\n    name: new FormControl(this.salesmanmodal.name),\n    contact_Number: new FormControl(this.salesmanmodal.contact_Number),\n    email: new FormControl(this.salesmanmodal.block),\n    cnic: new FormControl(this.salesmanmodal.email),\n    address: new FormControl(this.salesmanmodal.address),\n    gender: new FormControl(this.salesmanmodal.gender),\n    status: new FormControl(this.salesmanmodal.status),\n    type: new FormControl(this.salesmanmodal.type),\n    dateTime: new FormControl(this.salesmanmodal.dateTime),\n    password: new FormControl(this.salesmanmodal.password),\n   });\n\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL1NhbGVzbWFuL1NhbGVzbWFuLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-Salesman',\n  templateUrl: './Salesman.component.html',\n  styleUrls: ['./Salesman.component.scss']\n})\nexport class SalesmanComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SalesmanComponent } from './Salesman.component';\nimport { SalesmanRoutingModule } from './Salesmanrouting.routing';\nimport { AddSalesmanComponent } from './AddSalesman/AddSalesman.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { NgxDropzoneModule } from 'ngx-dropzone';\nimport { Ng2OrderModule } from 'ng2-order-pipe';\nimport { Ng2SearchPipeModule } from 'ng2-search-filter';\nimport { NgxPaginationModule } from 'ngx-pagination';\nimport { SharedModule } from '../../../../src/app/shared/shared.module';\nimport { Salesman } from '../../../../src/app/Models/Salesman';\nimport { MatInputModule, MatStepperModule } from '@angular/material';\nimport { NgxSpinnerModule, NgxSpinnerService } from 'ngx-spinner';\nimport { AllSalesmansComponent } from './AllSalesmans/AllSalesmans.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    SalesmanRoutingModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    NgxDropzoneModule,\n    Ng2OrderModule,\n    Ng2SearchPipeModule,\n    NgxPaginationModule,\n    NgxSpinnerModule,  \n    SharedModule,\n    FormsModule,\n    MatStepperModule,\n    MatInputModule\n  ],\n  declarations: [SalesmanComponent,AddSalesmanComponent,AllSalesmansComponent],\n  providers:[Salesman,NgxSpinnerService]\n})\nexport class SalesmanModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AddSalesmanComponent } from './AddSalesman/AddSalesman.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AddSalesmanComponent,\n    data: {\n      breadcrumb: 'Salesman',\n      icon: 'icofont-table bg-c-blue',\n      breadcrumb_caption: 'All Brands Detail',\n      status: true\n    }\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class SalesmanRoutingModule { }\n"],"sourceRoot":"webpack:///"}