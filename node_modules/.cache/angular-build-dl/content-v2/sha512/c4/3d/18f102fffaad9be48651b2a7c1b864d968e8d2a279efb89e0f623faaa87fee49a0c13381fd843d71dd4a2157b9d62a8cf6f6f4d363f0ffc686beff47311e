{"version":3,"sources":["node_modules/ng2-order-pipe/dist/index.js","node_modules/ng2-order-pipe/dist/src/ng2-order.module.js","node_modules/ng2-order-pipe/dist/src/ng2-order.pipe.js","src/app/pages/Salesman/AddSalesman/AddSalesman.component.html","src/app/pages/Salesman/AllSalesmans/AllSalesmans.component.html","src/app/pages/Salesman/Salesman.component.html","src/app/Models/Salesman.ts","src/app/_service/salesman.service.ts","src/app/pages/Salesman/AddSalesman/AddSalesman.component.scss","src/app/pages/Salesman/AddSalesman/AddSalesman.component.ts","src/app/pages/Salesman/AllSalesmans/AllSalesmans.component.scss","src/app/pages/Salesman/AllSalesmans/AllSalesmans.component.ts","src/app/pages/Salesman/Salesman.component.scss","src/app/pages/Salesman/Salesman.component.ts","src/app/pages/Salesman/Salesman.module.ts","src/app/pages/Salesman/Salesmanrouting.routing.ts"],"names":[],"mappings":"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","sourcesContent":["\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\n/**\n * Created by vadimdez on 20/01/2017.\n */\n__export(require(\"./src/ng2-order.module\"));\n__export(require(\"./src/ng2-order.pipe\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/**\n * Created by vadimdez on 20/01/2017.\n */\nvar core_1 = require(\"@angular/core\");\nvar ng2_order_pipe_1 = require(\"./ng2-order.pipe\");\nvar Ng2OrderModule = (function () {\n    function Ng2OrderModule() {\n    }\n    return Ng2OrderModule;\n}());\nNg2OrderModule = __decorate([\n    core_1.NgModule({\n        declarations: [ng2_order_pipe_1.Ng2OrderPipe],\n        exports: [ng2_order_pipe_1.Ng2OrderPipe]\n    })\n], Ng2OrderModule);\nexports.Ng2OrderModule = Ng2OrderModule;\n//# sourceMappingURL=ng2-order.module.js.map","\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar core_1 = require(\"@angular/core\");\nvar Ng2OrderPipe = Ng2OrderPipe_1 = (function () {\n    function Ng2OrderPipe() {\n    }\n    Ng2OrderPipe.prototype.transform = function (value, expression, reverse) {\n        if (!value) {\n            return value;\n        }\n        var isArray = value instanceof Array;\n        if (isArray) {\n            return this.sortArray(value, expression, reverse);\n        }\n        if (typeof value === 'object') {\n            return this.transformObject(value, expression, reverse);\n        }\n        return value;\n    };\n    /**\n     * Sort array\n     *\n     * @param value\n     * @param expression\n     * @param reverse\n     * @returns {any[]}\n     */\n    Ng2OrderPipe.prototype.sortArray = function (value, expression, reverse) {\n        var array = value.sort(function (a, b) {\n            if (!expression) {\n                return a > b ? 1 : -1;\n            }\n            return a[expression] > b[expression] ? 1 : -1;\n        });\n        if (reverse) {\n            return array.reverse();\n        }\n        return array;\n    };\n    /**\n     * Transform Object\n     *\n     * @param value\n     * @param expression\n     * @param reverse\n     * @returns {any[]}\n     */\n    Ng2OrderPipe.prototype.transformObject = function (value, expression, reverse) {\n        var parsedExpression = Ng2OrderPipe_1.parseExpression(expression);\n        var lastPredicate = parsedExpression.pop();\n        var oldValue = Ng2OrderPipe_1.getValue(value, parsedExpression);\n        if (!(oldValue instanceof Array)) {\n            parsedExpression.push(lastPredicate);\n            lastPredicate = null;\n            oldValue = Ng2OrderPipe_1.getValue(value, parsedExpression);\n        }\n        if (!oldValue) {\n            return value;\n        }\n        var newValue = this.transform(oldValue, lastPredicate, reverse);\n        Ng2OrderPipe_1.setValue(value, newValue, parsedExpression);\n        return value;\n    };\n    /**\n     * Parse expression, split into items\n     * @param expression\n     * @returns {string[]}\n     */\n    Ng2OrderPipe.parseExpression = function (expression) {\n        expression = expression.replace(/\\[(\\w+)\\]/g, '.$1');\n        expression = expression.replace(/^\\./, '');\n        return expression.split('.');\n    };\n    /**\n     * Get value by expression\n     *\n     * @param object\n     * @param expression\n     * @returns {any}\n     */\n    Ng2OrderPipe.getValue = function (object, expression) {\n        for (var i = 0, n = expression.length; i < n; ++i) {\n            var k = expression[i];\n            if (!(k in object)) {\n                return;\n            }\n            object = object[k];\n        }\n        return object;\n    };\n    /**\n     * Set value by expression\n     *\n     * @param object\n     * @param value\n     * @param expression\n     */\n    Ng2OrderPipe.setValue = function (object, value, expression) {\n        var i;\n        for (i = 0; i < expression.length - 1; i++) {\n            object = object[expression[i]];\n        }\n        object[expression[i]] = value;\n    };\n    return Ng2OrderPipe;\n}());\nNg2OrderPipe = Ng2OrderPipe_1 = __decorate([\n    core_1.Pipe({\n        name: 'orderBy'\n    })\n], Ng2OrderPipe);\nexports.Ng2OrderPipe = Ng2OrderPipe;\nvar Ng2OrderPipe_1;\n//# sourceMappingURL=ng2-order.pipe.js.map","export default \"\\n\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-sm-12\\\">\\n<!-- Hover table card start -->\\n<app-card [title]=\\\"'Salesman'\\\" [classHeader]=\\\"true\\\" [blockClass]=\\\"'table-border-style'\\\">\\n  <span class=\\\"code-header\\\">All salesman Detail</span>\\n<div [formGroup]=\\\"AddSalesmanForm\\\" *ngIf=\\\"trigger\\\" >\\n  <div class=\\\"row\\\" >\\n    <div class=\\\"col-md-1\\\">\\n\\n    </div>\\n    <div class=\\\"col-sm-11 fa-pull-right\\\" >\\n \\n       <div class=\\\"row\\\">\\n            \\n             <div class=\\\"col-md-3\\\">\\n              <label for=\\\"usr\\\">Name:</label>\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"name\\\" >\\n              </div>\\n               <div class=\\\"col-md-3\\\">\\n                <label for=\\\"usr\\\">Contact No:</label>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"contact_Number\\\" >\\n             </div> \\n             <div class=\\\"col-md-3\\\">\\n              <label for=\\\"usr\\\">Email:</label>\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"email\\\" >\\n           </div> \\n       \\n      <div class=\\\"col-md-1\\\">\\n\\n        </div> \\n          \\n     </div>\\n    </div>\\n  </div>\\n <div class=\\\"row\\\" >\\n    <div class=\\\"col-md-1\\\">\\n\\n    </div>\\n    <div class=\\\"col-sm-11 fa-pull-right\\\" >\\n \\n       <div class=\\\"row\\\">\\n             <div class=\\\"col-md-3\\\">\\n              <label for=\\\"usr\\\">CNIC:</label>\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"cnic\\\">\\n                \\n             </div>\\n             <div class=\\\"col-md-3\\\">\\n              <label for=\\\"usr\\\">Address:</label>\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"address\\\">\\n      \\n          </div>\\n          <div class=\\\"col-md-3\\\">\\n            <label for=\\\"usr\\\">Gender:</label>\\n            <select  formControlName=\\\"gender\\\" class=\\\"form-control\\\">\\n              <option disabled>Select Gender</option>\\n                     <option value=\\\"Male\\\">Male</option>\\n                     <option value=\\\"Female\\\">Female</option>\\n            </select >\\n          \\n         \\n        </div>\\n      \\n    <div class=\\\"col-md-1\\\">\\n\\n    </div>\\n         \\n     </div>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\" >\\n    <div class=\\\"col-md-1\\\">\\n\\n    </div>\\n    <div class=\\\"col-sm-11 fa-pull-right\\\" >\\n \\n       <div class=\\\"row\\\">\\n        \\n        <div class=\\\"col-md-3\\\">\\n          <label for=\\\"usr\\\">Password:</label>\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"password\\\">\\n       \\n      </div>\\n    <div class=\\\"col-md-1\\\">\\n\\n    </div>\\n         \\n     </div>\\n    </div>\\n  </div>\\n  <br>\\n  <div class=\\\"row\\\">\\n<div class=\\\"col-md-11\\\">\\n  <button class=\\\"btn btn-success pull-right\\\" (click)=\\\"AddSalesman()\\\">Save</button> \\n</div>\\n  </div>\\n\\n</div>\\n<div *ngIf=\\\"!trigger\\\">\\n<div class=\\\"row\\\">\\n<div class=\\\"col-md-11\\\">\\n  <button class=\\\"btn btn-info pull-right\\\" (click)=\\\"ViewForm()\\\">Add Salesman</button> \\n</div>\\n</div>\\n</div>\\n<div >\\n\\n</div>\\n<br>\\n<div class=\\\"table-responsive\\\"style=\\\"padding: 2%;\\\">\\n  <table class=\\\"table table-hover\\\">\\n    <thead>\\n    <tr>\\n   \\n      <th (click)=\\\"Sort('id')\\\">#<i class=\\\"fa fa-sort\\\"></i></th>\\n      <th (click)=\\\"Sort('salesMan_UserName')\\\">User Name<i class=\\\"fa fa-sort\\\"></i></th>\\n      <th (click)=\\\"Sort('salesMan_Name')\\\"> Name<i class=\\\"fa fa-sort\\\"></i></th>\\n      <th (click)=\\\"Sort('salesMan_Contact_Number')\\\">Cell No<i class=\\\"fa fa-sort\\\"></i></th>\\n\\n      <th (click)=\\\"Sort('salesMan_Cnic')\\\">CNIC<i class=\\\"fa fa-sort\\\"></i></th>\\n      <th (click)=\\\"Sort('salesMan_Cnic')\\\">Registered Shops<i class=\\\"fa fa-sort\\\"></i></th>\\n      <th (click)=\\\"Sort('action')\\\">Action<i class=\\\"fa fa-sort\\\"></i></th>\\n      <!-- <th>Image</th> -->\\n    </tr>\\n    </thead>\\n    <tbody>\\n    <tr *ngFor=\\\"let obj of SalesmanList |orderBy:key :reverse | paginate:{itemsPerPage:10,currentPage:p}; let i=index;\\\" >\\n      <td style=\\\"width: 2px;\\\">{{i+1}}</td>\\n      \\n      <td>\\n        <span >{{obj.salesmanInfo?.salesMan_UserName}}</span>\\n      \\n     </td>\\n        <td>\\n        <span >{{obj.salesmanInfo?.salesMan_Name}}</span>\\n    </td>\\n    <td>\\n      <span >{{obj.salesmanInfo?.salesMan_Contact_Number}}</span>\\n  </td>\\n   \\n      <td>\\n        <span>{{obj.salesmanInfo?.salesMan_Cnic}}</span>\\n    </td>\\n    <td>\\n      <span>\\n        <i aria-hidden=\\\"true\\\"   (click)=\\\"openLg(Showdetail,obj.salesmanInfo.salesMan_id)\\\">{{obj.venders.length}}</i>\\n      </span>\\n  </td>\\n \\n     <td> \\n     \\n      <h5 >\\n        <button (click)=\\\"clickFunction(obj.salesmanInfo.salesMan_id)\\\" *ngIf=\\\"!obj.salesmanInfo.salesMan_Status\\\" class=\\\" btn btn-default-outline btn-xs\\\"><img src=\\\"assets/images/off.png\\\" title=\\\"Active Vendor\\\" ></button>  \\n        <button (click)=\\\"clickFunction(obj.salesmanInfo.salesMan_id)\\\" *ngIf=\\\"obj.salesmanInfo.salesMan_Status\\\" class=\\\"btn btn-default-outline\\\"><img src=\\\"assets/images/on.png\\\" title=\\\"DeActive Vendor\\\" ></button> &nbsp;\\n     \\n       </h5>\\n   </td>\\n    </tr>\\n   \\n    </tbody>\\n  \\n  </table>\\n  <div class=\\\"row\\\">\\n    <div style=\\\"right: 10%;\\\">\\n      <pagination-controls (pageChange)=\\\"p=$event\\\"></pagination-controls>\\n  </div>\\n</div>\\n</div>\\n\\n</app-card>\\n      </div>\\n    </div>\\n  \\n    <ng-template #Showdetail let-modal>\\n      \\n      <div class=\\\"modal-header\\\">\\n        <h4 class=\\\"modal-title\\\">Vendors Detail</h4>\\n      \\n      </div>\\n      <div class=\\\"modal-body table-responsive\\\">\\n           <table class=\\\"table table-bordered\\\">\\n            <thead>\\n              <tr>\\n                \\n                  <th>Store Name</th>\\n                  <th>Name</th>\\n                  <th>Contact No</th>\\n                  <th>CNIC NO</th>\\n                  <th>Address</th>\\n              </tr>\\n            </thead>\\n            <tbody>\\n              <tr *ngFor=\\\"let item of data\\\">\\n                  <th [routerLink]=\\\"['/allvendors/venderDetails',item?.vender_id]\\\">{{item?.storeName}}</th>\\n                  <th [routerLink]=\\\"['/allvendors/venderDetails',item.vender_id]\\\">{{item?.vender_Name}}</th>\\n                  <th>{{item?.vender_Contact_Number}}</th>\\n                  <th>{{item?.vender_Cnic}}</th>\\n                  <th>\\n                    <div class=\\\"row\\\">\\n                       <div class=\\\"col-md-12\\\">\\n                        {{item?.vender_Address}}\\n                       </div>\\n                    </div>\\n                  </th>\\n              </tr>\\n            </tbody>\\n           </table>\\n       \\n      </div>\\n      <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-light\\\" (click)=\\\"modal.close('Close click')\\\">Close</button>\\n      </div>\\n    </ng-template>\\n    <ngx-spinner bdColor=\\\"rgba(51, 51, 51, 0.8)\\\" size=\\\"default\\\" type=\\\"ball-spin-clockwise\\\">  \\n      <p style=\\\"color: white\\\">Please Wait. </p>  \\n      </ngx-spinner> \\n\\n\\n  \\n\"","export default \"\\n\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-sm-12\\\">\\n<!-- Hover table card start -->\\n<app-card [title]=\\\"'Salesman'\\\" [classHeader]=\\\"true\\\" [blockClass]=\\\"'table-border-style'\\\">\\n  <span class=\\\"code-header\\\">All salesman Detail</span>\\n\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-sm-12\\\" >\\n      <div class=\\\"col-sm-2\\\" style=\\\"float: right;padding-bottom: 8px;\\\">\\n       \\n         \\n     </div>\\n    </div>\\n  </div>\\n\\n\\n  <div class=\\\"table-responsive\\\"style=\\\"padding: 2%;\\\">\\n    <table class=\\\"table table-hover\\\">\\n      <thead>\\n      <tr>\\n     \\n        <th (click)=\\\"Sort('id')\\\">#<i class=\\\"fa fa-sort\\\"></i></th>\\n        <th (click)=\\\"Sort('user_Name')\\\">User Name<i class=\\\"fa fa-sort\\\"></i></th>\\n        <th (click)=\\\"Sort('name')\\\"> Name<i class=\\\"fa fa-sort\\\"></i></th>\\n        <th (click)=\\\"Sort('contact_Number')\\\">Cell No<i class=\\\"fa fa-sort\\\"></i></th>\\n        <th (click)=\\\"Sort('email')\\\">Email<i class=\\\"fa fa-sort\\\"></i></th>\\n        <th (click)=\\\"Sort('cnic')\\\">CNIC<i class=\\\"fa fa-sort\\\"></i></th>\\n        <th (click)=\\\"Sort('action')\\\">Action<i class=\\\"fa fa-sort\\\"></i></th>\\n        <!-- <th>Image</th> -->\\n      </tr>\\n      </thead>\\n      <tbody>\\n      <tr *ngFor=\\\"let obj of SalesmanList |orderBy:key :reverse | paginate:{itemsPerPage:10,currentPage:p}; let i=index;\\\" [formGroup]=\\\"AddSalesmanForm\\\" >\\n        <td style=\\\"width: 2px;\\\">{{i+1}}</td>\\n        \\n        <td>\\n          <span [hidden]=\\\"obj.inedit\\\">{{obj.user_Name}}</span>\\n        \\n        <input type=\\\"text\\\"  [hidden]=\\\"!obj.inedit\\\" class=\\\"form-control\\\"  formControlName=\\\"user_Name\\\" value=\\\"{{obj.user_Name}}\\\"/>\\n        </td>\\n          <td>\\n          <span [hidden]=\\\"obj.inedit\\\">{{obj.name}}</span>\\n          <input type=\\\"text\\\" [hidden]=\\\"!obj.inedit\\\" class=\\\"form-control\\\"  formControlName=\\\"name\\\"  value=\\\"{{obj.name}}\\\"/>\\n        </td>\\n        <td>\\n          <span [hidden]=\\\"obj.inedit\\\">{{obj.email}}</span>\\n          <input type=\\\"text\\\" [hidden]=\\\"!obj.inedit\\\" class=\\\"form-control\\\"  formControlName=\\\"email\\\"  value=\\\"{{obj.email}}\\\"/>\\n        </td>\\n        <td>\\n          <span [hidden]=\\\"obj.inedit\\\">{{obj.cnic}}</span>\\n          <input type=\\\"text\\\" [hidden]=\\\"!obj.inedit\\\" class=\\\"form-control\\\"  formControlName=\\\"email\\\"  value=\\\"{{obj.cnic}}\\\"/>\\n        </td>\\n       <td> \\n       \\n  \\n          <div class=\\\"row\\\">\\n \\n        <!-- <div style=\\\"padding: 4px;\\\">\\n          <p class=\\\"fa fa-edit\\\" style=\\\"font-size: 20px;color:blue\\\" [hidden]=\\\"obj.inedit\\\" title=\\\"Edit or Update\\\"  (click)=\\\"onEditClick($event, i,obj.category_Id)\\\" data-toggle=\\\"modal\\\"\\n          data-target=\\\"#editModal\\\">&nbsp;</p>\\n          <p class=\\\"fa fa-save\\\"  [hidden]=\\\"!obj.inedit\\\" title=\\\"Save Changes\\\" style=\\\"font-size: 20px;color:green\\\"  (click)=\\\"UpdateCategory()\\\">&nbsp;</p>\\n          <p class=\\\"fa fa-close\\\"  [hidden]=\\\"!obj.inedit\\\" title=\\\"Cancel\\\" style=\\\"font-size: 20px;color:brown(247, 241, 241)\\\" (click)=\\\"onCancelClick(i)\\\" data-toggle=\\\"modal\\\"\\n        data-target=\\\"#editModal\\\"> &nbsp;</p>\\n          <i class=\\\"fa fa-upload\\\" aria-hidden=\\\"true\\\" style=\\\"font-size:18px;color:rgb(0, 47, 255)\\\" title=\\\"Upload Image\\\"  (click)=\\\"openLg(uploadfilecontent,obj.category_Id)\\\">&nbsp;</i> \\n          <i class=\\\"fa fa-trash\\\" aria-hidden=\\\"true\\\" style=\\\"font-size:18px;color:rgb(255, 0, 0)\\\" title=\\\"Delete\\\"  (click)=\\\"openLg()\\\"(click)=\\\"onCancelClick(i)\\\" data-toggle=\\\"modal\\\"\\n          data-target=\\\"#editModal\\\"></i>\\n        </div> -->\\n    </div></td>\\n      </tr>\\n     \\n      </tbody>\\n    \\n    </table>\\n    <div class=\\\"row\\\">\\n      <div style=\\\"right: 10%;\\\">\\n        <pagination-controls (pageChange)=\\\"p=$event\\\"></pagination-controls>\\n    </div>\\n  </div>\\n  </div>\\n</app-card>\\n<!-- Hover table card end -->\\n      </div>\\n    </div>\\n  \\n    <ng-template #uploadfilecontent let-modal>\\n      \\n      <div class=\\\"modal-header\\\">\\n        <h4 class=\\\"modal-title\\\">Upload file</h4>\\n      \\n      </div>\\n      <div class=\\\"modal-body\\\">\\n           \\n        <div class=\\\"container\\\">\\n     \\n      </div>\\n      </div>\\n      <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-light\\\" (click)=\\\"modal.close('Close click')\\\">Close</button>\\n      </div>\\n    </ng-template>\\n  \\n\"","export default \"<p>\\n  Salesman works!\\n</p>\\n\"","export class Salesman {\n    user_id:number;\n    user_Name:string;\n    name:string;\n    contact_Number:string;\n    block: string;\n    email:string;\n    cnic:string;\n    address:string;\n    gender:string;\n    password:string;\n    status:boolean;\n    salesMan_Status:boolean;\n    type:string=\"SalesMan\";\n    dateTime:Date;\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { environment } from '../../../src/environments/environment.prod';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SalesmanService {\n  baseUrl = environment.apiurl + 'Auth/';\n  baseUrl2 = environment.apiurl + 'UsersApi/';\nconstructor(private http: HttpClient) { }\n\nAddSalesman(form: any){\n  return this.http.post<any>(this.baseUrl+'Register', form)\n};\nGetSalemans(){\n  return this.http.get<any>(this.baseUrl2+'AllSalesmans')\n};\nUpdatestatus(Id:number):Observable<any>{\ndebugger;\n  return this.http.post<any>(this.baseUrl2+'StatusChangesalesman', Id)}\n\n\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL1NhbGVzbWFuL0FkZFNhbGVzbWFuL0FkZFNhbGVzbWFuLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { FormArray, FormBuilder, FormControl, FormGroup  } from '@angular/forms';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { Salesman } from '../../../../../src/app/Models/Salesman';\nimport { SalesmanService } from '../../../../../src/app/_service/salesman.service';\n\n@Component({\n  selector: 'app-AddSalesman',\n  templateUrl: './AddSalesman.component.html',\n  styleUrls: ['./AddSalesman.component.scss']\n})\nexport class AddSalesmanComponent implements OnInit {\n  SalesmanList:Salesman[];\n  key:string='rowid';\n  reverse:boolean=false;\n  p:number=1;\n  trigger:boolean=false;\n  progress: number = 0;\n  salesmanId:number;\n  vendorsdetail:any;\n  salesmans:any[];\n  data:any;\n  constructor( private SpinnerService: NgxSpinnerService,private salemanservice:SalesmanService,public salesmanmodal:Salesman,private modalService: NgbModal,private fb:FormBuilder) { }\n\n  ngOnInit() {\n    this.Getsalesmans();\n  }\n  Sort(key){\n    this.key=key;\n    this.reverse=!this.reverse;\n  }\n  ViewForm(){\n    this.trigger=true;\n  \n  }\n  AddSalesman(){\n    this.SpinnerService.show();\n    this.trigger=false;\n    console.log(this.AddSalesmanForm.value)\n   this.salemanservice.AddSalesman(this.AddSalesmanForm.value).subscribe(next => {\n    this.SpinnerService.hide();\n     this.AddSalesmanForm.reset();\n\n     this.Getsalesmans();\n   }, error => {\n     console.log(error);\n   });\n  }\n  clickFunction(id:number) {\n    this.salemanservice.Updatestatus(id).subscribe((next:any)=>{\n      this.Getsalesmans();\n      // this.SalesmanList.forEach(x=>{if(x.user_id==id){x.salesMan_Status=!x.salesMan_Status}});\n    }, error => {\n      console.log(error);\n    });\n \n    \n  }\n\n  Getsalesmans(){\n    this.SpinnerService.show();\n    this.salemanservice.GetSalemans().subscribe((next:any) => {\n      this.SalesmanList=[];\n      this.SalesmanList=next.resp;\n      this.salesmans=this.SalesmanList;\n      this.SpinnerService.hide();\n    }, error => {\n      console.log(error);\n    });\n  }\n  openLg(Showdetail,id:number) {\n    debugger;\n    this.salesmanId=id;\n   this.vendorsdetail=this.salesmans.find(x=>x.salesmanInfo.salesMan_id==id);\n   \n   this.data=this.vendorsdetail.venders;\n   console.log(this.data);\n      this.modalService.open(Showdetail, { size: 'lg' });\n    \n  }\n  AddSalesmanForm:FormGroup=new FormGroup({\n    user_Name: new FormControl(this.salesmanmodal.user_Name),\n    name: new FormControl(this.salesmanmodal.name),\n     contact_Number: new FormControl(this.salesmanmodal.contact_Number),\n     email: new FormControl(this.salesmanmodal.email),\n     cnic: new FormControl(this.salesmanmodal.email),\n     address: new FormControl(this.salesmanmodal.address),\n     gender: new FormControl(this.salesmanmodal.gender),\n     password: new FormControl(this.salesmanmodal.password),\n    type: new FormControl(\"SalesMan\"),\n    // dateTime: new FormControl(this.salesmanmodal.dateTime),\n   });\n   \n   \n  \n        \n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL1NhbGVzbWFuL0FsbFNhbGVzbWFucy9BbGxTYWxlc21hbnMuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms';\nimport { Salesman } from '../../../../../src/app/Models/Salesman';\nimport { SalesmanService } from '../../../../../src/app/_service/salesman.service';\n\n@Component({\n  selector: 'app-AllSalesmans',\n  templateUrl: './AllSalesmans.component.html',\n  styleUrls: ['./AllSalesmans.component.scss']\n})\nexport class AllSalesmansComponent implements OnInit {\n  form: FormGroup;\n  SalesmanList:Salesman[];\n  key:string='rowid';\n  reverse:boolean=false;\n  p:number=1;\n  categotyid:number;\n  noimage=\"\";\n  trigger:boolean=false;\n  progress: number = 0;\n  constructor(private salemanservice:SalesmanService,private salesmanmodal:Salesman,private fb:FormBuilder) { }\n\n  ngOnInit() {\n    this.AddSalesman();\n    this.form = this.fb.group({\n    \n      avatar: [null]\n    })\n  }\n  AddSalesman(){\n    debugger;\n \n   this.salemanservice.AddSalesman(\"pakistan\").subscribe(next => {\n   }, error => {\n     console.log(error);\n   });\n  }\n  Sort(key){\n    this.key=key;\n    this.reverse=!this.reverse;\n  }\n  AddSalesmanForm:FormGroup=new FormGroup({\n    user_Name: new FormControl(this.salesmanmodal.user_Name),\n    name: new FormControl(this.salesmanmodal.name),\n    contact_Number: new FormControl(this.salesmanmodal.contact_Number),\n    email: new FormControl(this.salesmanmodal.block),\n    cnic: new FormControl(this.salesmanmodal.email),\n    address: new FormControl(this.salesmanmodal.address),\n    gender: new FormControl(this.salesmanmodal.gender),\n    status: new FormControl(this.salesmanmodal.status),\n    type: new FormControl(this.salesmanmodal.type),\n    dateTime: new FormControl(this.salesmanmodal.dateTime),\n    password: new FormControl(this.salesmanmodal.password),\n   });\n\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL1NhbGVzbWFuL1NhbGVzbWFuLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-Salesman',\n  templateUrl: './Salesman.component.html',\n  styleUrls: ['./Salesman.component.scss']\n})\nexport class SalesmanComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SalesmanComponent } from './Salesman.component';\nimport { SalesmanRoutingModule } from './Salesmanrouting.routing';\nimport { AddSalesmanComponent } from './AddSalesman/AddSalesman.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { NgxDropzoneModule } from 'ngx-dropzone';\nimport { Ng2OrderModule } from 'ng2-order-pipe';\nimport { Ng2SearchPipeModule } from 'ng2-search-filter';\nimport { NgxPaginationModule } from 'ngx-pagination';\nimport { SharedModule } from '../../../../src/app/shared/shared.module';\nimport { Salesman } from '../../../../src/app/Models/Salesman';\nimport { MatInputModule, MatStepperModule } from '@angular/material';\nimport { NgxSpinnerModule, NgxSpinnerService } from 'ngx-spinner';\nimport { AllSalesmansComponent } from './AllSalesmans/AllSalesmans.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    SalesmanRoutingModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    NgxDropzoneModule,\n    Ng2OrderModule,\n    Ng2SearchPipeModule,\n    NgxPaginationModule,\n    NgxSpinnerModule,  \n    SharedModule,\n    FormsModule,\n    MatStepperModule,\n    MatInputModule\n  ],\n  declarations: [SalesmanComponent,AddSalesmanComponent,AllSalesmansComponent],\n  providers:[Salesman,NgxSpinnerService]\n})\nexport class SalesmanModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AddSalesmanComponent } from './AddSalesman/AddSalesman.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AddSalesmanComponent,\n    data: {\n      breadcrumb: 'Salesman',\n      icon: 'icofont-table bg-c-blue',\n      breadcrumb_caption: 'All Brands Detail',\n      status: true\n    }\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class SalesmanRoutingModule { }\n"],"sourceRoot":"webpack:///","file":"pages-Salesman-Salesman-module-es5.js"}